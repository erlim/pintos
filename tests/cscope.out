cscope 15 $HOME/src/pintos/tests               0000246562
	@arc4.c

1 
	~<°döt.h
>

2 
	~"ã°s/¨c4.h
"

5 
ölöe
 

6 
	$sw≠_byã
 (
uöt8_t
 *
a
, uöt8_à*
b
)

8 
uöt8_t
 
t
 = *
a
;

9 *
a
 = *
b
;

10 *
b
 = 
t
;

11 
	}
}

14 
	$¨c4_öô
 (
¨c4
 *¨c4, c⁄° *
key_
, 
size_t
 
size
)

16 c⁄° 
uöt8_t
 *
key
 = 
key_
;

17 
size_t
 
key_idx
;

18 
uöt8_t
 *
s
;

19 
i
, 
j
;

21 
s
 = 
¨c4
->s;

22 
¨c4
->
i
 =árc4->
j
 = 0;

23 
i
 = 0; i < 256; i++)

24 
s
[
i
] = i;

25 
key_idx
 = 0, 
i
 = 
j
 = 0; i < 256; i++)

27 
j
 = (j + 
s
[
i
] + 
key
[
key_idx
]) & 255;

28 
	`sw≠_byã
 (
s
 + 
i
, s + 
j
);

29 i‡(++
key_idx
 >
size
)

30 
key_idx
 = 0;

32 
	}
}

35 
	$¨c4_¸y±
 (
¨c4
 *¨c4, *
buf_
, 
size_t
 
size
)

37 
uöt8_t
 *
buf
 = 
buf_
;

38 
uöt8_t
 *
s
;

39 
uöt8_t
 
i
, 
j
;

41 
s
 = 
¨c4
->s;

42 
i
 = 
¨c4
->i;

43 
j
 = 
¨c4
->j;

44 
size
-- > 0)

46 
i
 += 1;

47 
j
 +
s
[
i
];

48 
	`sw≠_byã
 (
s
 + 
i
, s + 
j
);

49 *
buf
++ ^
s
[(s[
i
] + s[
j
]) & 255];

51 
¨c4
->
i
 = i;

52 
¨c4
->
j
 = j;

53 
	}
}

	@arc4.h

1 #i‚de‡
TESTS_ARC4_H


2 
	#TESTS_ARC4_H


	)

4 
	~<°ddef.h
>

5 
	~<°döt.h
>

8 
	s¨c4


10 
uöt8_t
 
	ms
[256];

11 
uöt8_t
 
	mi
, 
	mj
;

14 
¨c4_öô
 (
¨c4
 *, c⁄° *, 
size_t
);

15 
¨c4_¸y±
 (
¨c4
 *, *, 
size_t
);

	@cksum.c

3 
	~<°döt.h
>

4 
	~"ã°s/cksum.h
"

6 
	g¸˘ab
[] = {

63 
	$cksum
 (c⁄° *
b_
, 
size_t
 
n
)

65 c⁄° *
b
 = 
b_
;

66 
uöt32_t
 
s
 = 0;

67 
size_t
 
i
;

68 
i
 = 
n
; i > 0; --i)

70 
c
 = *
b
++;

71 
s
 = (†<< 8Ë^ 
¸˘ab
[(†>> 24Ë^ 
c
];

73 
n
 != 0)

75 
c
 = 
n
;

76 
n
 >>= 8;

77 
s
 = (†<< 8Ë^ 
¸˘ab
[(†>> 24Ë^ 
c
];

79  ~
s
;

80 
	}
}

82 #ifde‡
STANDALONE_TEST


83 
	~<°dio.h
>

85 
	$maö
 ()

87 
buf
[65536];

88 
n
 = 
	`‰ód
 (
buf
, 1,  buf, 
°dö
);

89 
	`¥ötf
 ("%lu\n", 
	`cksum
 (
buf
, 
n
));

91 
	}
}

	@cksum.h

1 #i‚de‡
TESTS_CKSUM_H


2 
	#TESTS_CKSUM_H


	)

4 
	~<°ddef.h
>

6 
cksum
(c⁄° *, 
size_t
);

	@filesys/base/child-syn-read.c

7 
	~<øndom.h
>

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<sysˇŒ.h
>

11 
	~"ã°s/lib.h
"

12 
	~"ã°s/fûesys/ba£/syn-ªad.h
"

14 c⁄° *
	gã°_«me
 = "child-syn-read";

16 
	gbuf
[
BUF_SIZE
];

19 
	$maö
 (
¨gc
, c⁄° *
¨gv
[])

21 
chûd_idx
;

22 
fd
;

23 
size_t
 
i
;

25 
quõt
 = 
åue
;

27 
	`CHECK
 (
¨gc
 == 2, "argc must be 2,áctually %d",árgc);

28 
chûd_idx
 = 
	`©oi
 (
¨gv
[1]);

30 
	`øndom_öô
 (0);

31 
	`øndom_byãs
 (
buf
,  buf);

33 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

34 
i
 = 0; i <  
buf
; i++)

36 
c
;

37 
	`CHECK
 (
	`ªad
 (
fd
, &
c
, 1Ë> 0, "ªad \"%s\"", 
fûe_«me
);

38 
	`com∑ª_byãs
 (&
c
, 
buf
 + 
i
, 1, i, 
fûe_«me
);

40 
	`˛o£
 (
fd
);

42  
chûd_idx
;

43 
	}
}

	@filesys/base/child-syn-wrt.c

5 
	~<øndom.h
>

6 
	~<°dlib.h
>

7 
	~<sysˇŒ.h
>

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/fûesys/ba£/syn-wrôe.h
"

11 
	gbuf
[
BUF_SIZE
];

14 
	$maö
 (
¨gc
, *
¨gv
[])

16 
chûd_idx
;

17 
fd
;

19 
quõt
 = 
åue
;

21 
	`CHECK
 (
¨gc
 == 2, "argc must be 2,áctually %d",árgc);

22 
chûd_idx
 = 
	`©oi
 (
¨gv
[1]);

24 
	`øndom_öô
 (0);

25 
	`øndom_byãs
 (
buf
,  buf);

27 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

28 
	`£ek
 (
fd
, 
CHUNK_SIZE
 * 
chûd_idx
);

29 
	`CHECK
 (
	`wrôe
 (
fd
, 
buf
 + 
CHUNK_SIZE
 * 
chûd_idx
, CHUNK_SIZE) > 0,

30 "wrôê\"%s\"", 
fûe_«me
);

31 
	`msg
 ("˛o£ \"%s\"", 
fûe_«me
);

32 
	`˛o£
 (
fd
);

34  
chûd_idx
;

35 
	}
}

	@filesys/base/lg-create.c

4 
	#TEST_SIZE
 75678

	)

5 
	~"ã°s/fûesys/¸óã.öc
"

	@filesys/base/lg-full.c

5 
	#TEST_SIZE
 75678

	)

6 
	~"ã°s/fûesys/ba£/fuŒ.öc
"

	@filesys/base/lg-random.c

5 
	#BLOCK_SIZE
 512

	)

6 
	#TEST_SIZE
 (512 * 150)

	)

7 
	~"ã°s/fûesys/ba£/øndom.öc
"

	@filesys/base/lg-seq-block.c

5 
	#TEST_SIZE
 75678

	)

6 
	#BLOCK_SIZE
 513

	)

7 
	~"ã°s/fûesys/ba£/£q-block.öc
"

	@filesys/base/lg-seq-random.c

5 
	#TEST_SIZE
 75678

	)

6 
	~"ã°s/fûesys/ba£/£q-øndom.öc
"

	@filesys/base/sm-create.c

4 
	#TEST_SIZE
 5678

	)

5 
	~"ã°s/fûesys/¸óã.öc
"

	@filesys/base/sm-full.c

5 
	#TEST_SIZE
 5678

	)

6 
	~"ã°s/fûesys/ba£/fuŒ.öc
"

	@filesys/base/sm-random.c

5 
	#BLOCK_SIZE
 13

	)

6 
	#TEST_SIZE
 (13 * 123)

	)

7 
	~"ã°s/fûesys/ba£/øndom.öc
"

	@filesys/base/sm-seq-block.c

5 
	#TEST_SIZE
 5678

	)

6 
	#BLOCK_SIZE
 513

	)

7 
	~"ã°s/fûesys/ba£/£q-block.öc
"

	@filesys/base/sm-seq-random.c

5 
	#TEST_SIZE
 5678

	)

6 
	~"ã°s/fûesys/ba£/£q-øndom.öc
"

	@filesys/base/syn-read.c

5 
	~<øndom.h
>

6 
	~<°dio.h
>

7 
	~<sysˇŒ.h
>

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

10 
	~"ã°s/fûesys/ba£/syn-ªad.h
"

12 
	gbuf
[
BUF_SIZE
];

14 
	#CHILD_CNT
 10

	)

17 
	$ã°_maö
 ()

19 
pid_t
 
chûdªn
[
CHILD_CNT
];

20 
fd
;

22 
	`CHECK
 (
	`¸óã
 (
fûe_«me
,  
buf
), "create \"%s\"", file_name);

23 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

24 
	`øndom_byãs
 (
buf
,  buf);

25 
	`CHECK
 (
	`wrôe
 (
fd
, 
buf
,  bufË> 0, "wrôê\"%s\"", 
fûe_«me
);

26 
	`msg
 ("˛o£ \"%s\"", 
fûe_«me
);

27 
	`˛o£
 (
fd
);

29 
	`exec_chûdªn
 ("chûd-syn-ªad", 
chûdªn
, 
CHILD_CNT
);

30 
	`waô_chûdªn
 (
chûdªn
, 
CHILD_CNT
);

31 
	}
}

	@filesys/base/syn-read.h

1 #i‚de‡
TESTS_FILESYS_BASE_SYN_READ_H


2 
	#TESTS_FILESYS_BASE_SYN_READ_H


	)

4 
	#BUF_SIZE
 1024

	)

5 c⁄° 
	gfûe_«me
[] = "data";

	@filesys/base/syn-remove.c

4 
	~<øndom.h
>

5 
	~<°rög.h
>

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

10 
	gbuf1
[1234];

11 
	gbuf2
[1234];

14 
	$ã°_maö
 ()

16 c⁄° *
fûe_«me
 = "deleteme";

17 
fd
;

19 
	`CHECK
 (
	`¸óã
 (
fûe_«me
,  
buf1
), "create \"%s\"", file_name);

20 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

21 
	`CHECK
 (
	`ªmove
 (
fûe_«me
), "remove \"%s\"", file_name);

22 
	`øndom_byãs
 (
buf1
,  buf1);

23 
	`CHECK
 (
	`wrôe
 (
fd
, 
buf1
,  buf1Ë> 0, "wrôê\"%s\"", 
fûe_«me
);

24 
	`msg
 ("£ek \"%s\"Åÿ0", 
fûe_«me
);

25 
	`£ek
 (
fd
, 0);

26 
	`CHECK
 (
	`ªad
 (
fd
, 
buf2
,  buf2Ë> 0, "ªad \"%s\"", 
fûe_«me
);

27 
	`com∑ª_byãs
 (
buf2
, 
buf1
,  buf1, 0, 
fûe_«me
);

28 
	`msg
 ("˛o£ \"%s\"", 
fûe_«me
);

29 
	`˛o£
 (
fd
);

30 
	}
}

	@filesys/base/syn-write.c

5 
	~<øndom.h
>

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<sysˇŒ.h
>

9 
	~"ã°s/fûesys/ba£/syn-wrôe.h
"

10 
	~"ã°s/lib.h
"

11 
	~"ã°s/maö.h
"

13 
	gbuf1
[
BUF_SIZE
];

14 
	gbuf2
[
BUF_SIZE
];

17 
	$ã°_maö
 ()

19 
pid_t
 
chûdªn
[
CHILD_CNT
];

20 
fd
;

22 
	`CHECK
 (
	`¸óã
 (
fûe_«me
,  
buf1
), "create \"%s\"", file_name);

24 
	`exec_chûdªn
 ("chûd-syn-wπ", 
chûdªn
, 
CHILD_CNT
);

25 
	`waô_chûdªn
 (
chûdªn
, 
CHILD_CNT
);

27 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

28 
	`CHECK
 (
	`ªad
 (
fd
, 
buf1
,  buf1Ë> 0, "ªad \"%s\"", 
fûe_«me
);

29 
	`øndom_byãs
 (
buf2
,  buf2);

30 
	`com∑ª_byãs
 (
buf1
, 
buf2
,  buf1, 0, 
fûe_«me
);

31 
	}
}

	@filesys/base/syn-write.h

1 #i‚de‡
TESTS_FILESYS_BASE_SYN_WRITE_H


2 
	#TESTS_FILESYS_BASE_SYN_WRITE_H


	)

4 
	#CHILD_CNT
 10

	)

5 
	#CHUNK_SIZE
 512

	)

6 
	#BUF_SIZE
 (
CHILD_CNT
 * 
CHUNK_SIZE
)

	)

7 c⁄° 
	gfûe_«me
[] = "stuff";

	@filesys/extended/child-syn-rw.c

10 
	~<øndom.h
>

11 
	~<°dlib.h
>

12 
	~<sysˇŒ.h
>

13 
	~"ã°s/fûesys/exãnded/syn-rw.h
"

14 
	~"ã°s/lib.h
"

16 c⁄° *
	gã°_«me
 = "child-syn-rw";

18 
	gbuf1
[
BUF_SIZE
];

19 
	gbuf2
[
BUF_SIZE
];

22 
	$maö
 (
¨gc
, c⁄° *
¨gv
[])

24 
chûd_idx
;

25 
fd
;

26 
size_t
 
ofs
;

28 
quõt
 = 
åue
;

30 
	`CHECK
 (
¨gc
 == 2, "argc must be 2,áctually %d",árgc);

31 
chûd_idx
 = 
	`©oi
 (
¨gv
[1]);

33 
	`øndom_öô
 (0);

34 
	`øndom_byãs
 (
buf1
,  buf1);

36 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

37 
ofs
 = 0;

38 
ofs
 <  
buf2
)

40 
byãs_ªad
 = 
	`ªad
 (
fd
, 
buf2
 + 
ofs
,  buf2 - ofs);

41 
	`CHECK
 (
byãs_ªad
 >-1 && byãs_ªad <(Ë( 
buf2
 - 
ofs
),

43  
buf2
 - 
ofs
, 
fûe_«me
, 
byãs_ªad
);

44 i‡(
byãs_ªad
 > 0)

46 
	`com∑ª_byãs
 (
buf2
 + 
ofs
, 
buf1
 + ofs, 
byãs_ªad
, ofs, 
fûe_«me
);

47 
ofs
 +
byãs_ªad
;

50 
	`˛o£
 (
fd
);

52  
chûd_idx
;

53 
	}
}

	@filesys/extended/dir-empty-name.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`CHECK
 (!
	`mkdú
 (""), "mkdir \"\" (mustÑeturn false)");

12 
	}
}

	@filesys/extended/dir-mk-tree.c

4 
	~"ã°s/fûesys/exãnded/mk-åì.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`make_åì
 (4, 3, 3, 4);

11 
	}
}

	@filesys/extended/dir-mkdir.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`CHECK
 (
	`mkdú
 ("a"), "mkdir \"a\"");

11 
	`CHECK
 (
	`¸óã
 ("a/b", 512), "create \"a/b\"");

12 
	`CHECK
 (
	`chdú
 ("a"), "chdir \"a\"");

13 
	`CHECK
 (
	`›í
 ("b") > 1, "open \"b\"");

14 
	}
}

	@filesys/extended/dir-open.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
fd
;

12 
ªtvÆ
;

14 
	`CHECK
 (
	`mkdú
 ("xyzzy"), "mkdir \"xyzzy\"");

15 
	`CHECK
 ((
fd
 = 
	`›í
 ("xyzzy")) > 1, "open \"xyzzy\"");

17 
	`msg
 ("write \"xyzzy\"");

18 
ªtvÆ
 = 
	`wrôe
 (
fd
, "foobar", 6);

19 
	`CHECK
 (
ªtvÆ
 == -1,

20 "wrôê\"xyzzy\" (mu°Ñëu∫ -1,á˘uÆly %d)", 
ªtvÆ
);

21 
	}
}

	@filesys/extended/dir-over-file.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`CHECK
 (
	`mkdú
 ("abc"), "mkdir \"abc\"");

12 
	`CHECK
 (!
	`¸óã
 ("abc", 0), "create \"abc\" (mustÑeturn false)");

13 
	}
}

	@filesys/extended/dir-rm-cwd.c

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$wøp_›í
 (c⁄° *
«me
)

12 
fds
[8], 
fd_˙t
;

13 
fd
, 
i
;

15 
	`CHECK
 ((
fd
 = 
	`›í
 (
«me
)) > 1, "open \"%s\"",Çame);

16 
i
 = 0; i < 
fd_˙t
; i++)

17 i‡(
fds
[
i
] =
fd
)

18 
	`Áû
 ("fdÑeturned isÇot unique");

19 
fds
[
fd_˙t
++] = 
fd
;

20  
fd
;

21 
	}
}

24 
	$ã°_maö
 ()

26 
roŸ_fd
, 
a_fd0
;

27 
«me
[
READDIR_MAX_LEN
 + 1];

29 
roŸ_fd
 = 
	`wøp_›í
 ("/");

30 
	`CHECK
 (
	`mkdú
 ("a"), "mkdir \"a\"");

32 
a_fd0
 = 
	`wøp_›í
 ("/a");

33 
	`CHECK
 (!
	`ªaddú
 (
a_fd0
, 
«me
), "verify \"/a\" isÉmpty");

34 
	`CHECK
 (
	`öumbî
 (
roŸ_fd
Ë!öumbî (
a_fd0
),

37 
	`CHECK
 (
	`chdú
 ("a"), "chdir \"a\"");

39 
	`msg
 ("tryÅoÑemove \"/a\"");

40 i‡(
	`ªmove
 ("/a"))

42 
	`msg
 ("remove successful");

44 
	`CHECK
 (
	`›í
 ("/a") == -1, "open \"/a\" (must fail)");

45 
	`CHECK
 (
	`›í
 (".") == -1, "open \".\" (must fail)");

46 
	`CHECK
 (
	`›í
 ("..") == -1, "open \"..\" (must fail)");

47 
	`CHECK
 (!
	`¸óã
 ("x", 512), "create \"x\" (must fail)");

51 
a_fd1
, 
a_fd2
, 
a_fd3
;

53 
	`msg
 ("remove failed");

55 
	`CHECK
 (!
	`ªmove
 ("../a"), "tryÅoÑemove \"../a\" (must fail)");

56 
	`CHECK
 (!
	`ªmove
 (".././a"), "tryÅoÑemove \".././a\" (must fail)");

57 
	`CHECK
 (!
	`ªmove
 ("/./a"), "tryÅoÑemove \"/./a\" (must fail)");

59 
a_fd1
 = 
	`wøp_›í
 ("/a");

60 
a_fd2
 = 
	`wøp_›í
 (".");

61 
	`CHECK
 (
	`öumbî
 (
a_fd1
Ë=öumbî (
a_fd2
),

63 
	`CHECK
 (
	`öumbî
 (
roŸ_fd
Ë!öumbî (
a_fd1
),

66 
	`CHECK
 (
	`chdú
 ("/a"), "chdir \"/a\"");

67 
a_fd3
 = 
	`wøp_›í
 (".");

68 
	`CHECK
 (
	`öumbî
 (
a_fd3
Ë=öumbî (
a_fd1
),

71 
	`CHECK
 (
	`chdú
 ("/"), "chdir \"/\"");

72 
	`CHECK
 (!
	`ªmove
 ("a"), "tryÅoÑemove \"a\" (must fail: still open)");

74 
	`CHECK
 (!
	`ªaddú
 (
a_fd0
, 
«me
), "verify \"/a\" isÉmpty");

75 
	}
}

	@filesys/extended/dir-rm-parent.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`CHECK
 (
	`mkdú
 ("a"), "mkdir \"a\"");

12 
	`CHECK
 (
	`chdú
 ("a"), "chdir \"a\"");

13 
	`CHECK
 (
	`mkdú
 ("b"), "mkdir \"b\"");

14 
	`CHECK
 (
	`chdú
 ("b"), "chdir \"b\"");

15 
	`CHECK
 (!
	`ªmove
 ("/a"), "remove \"/a\" (must fail)");

16 
	}
}

	@filesys/extended/dir-rm-root.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`CHECK
 (!
	`ªmove
 ("/"), "remove \"/\" (must fail)");

12 
	`CHECK
 (
	`¸óã
 ("/a", 243), "create \"/a\"");

13 
	}
}

	@filesys/extended/dir-rm-tree.c

4 
	~<°d¨g.h
>

5 
	~<°dio.h
>

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/fûesys/exãnded/mk-åì.h
"

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

11 
ªmove_åì
 (
©
, 
bt
, 
˘
, 
dt
);

14 
	$ã°_maö
 ()

16 
	`make_åì
 (4, 3, 3, 4);

17 
	`ªmove_åì
 (4, 3, 3, 4);

18 
	}
}

20 
	$do_ªmove
 (c⁄° *
f‹m©
, ...Ë
	`PRINTF_FORMAT
 (1, 2);

23 
	$ªmove_åì
 (
©
, 
bt
, 
˘
, 
dt
)

25 
åy
[128];

26 
a
, 
b
, 
c
, 
d
;

28 
	`msg
 ("removing /0/0/0/0Åhrough /%d/%d/%d/%d...",

29 
©
 - 1, 
bt
 - 1, 
˘
 - 1, 
dt
 - 1);

30 
quõt
 = 
åue
;

31 
a
 = 0;á < 
©
;á++)

33 
b
 = 0; b < 
bt
; b++)

35 
c
 = 0; c < 
˘
; c++)

37 
d
 = 0; d < 
dt
; d++)

38 
	`do_ªmove
 ("/%d/%d/%d/%d", 
a
, 
b
, 
c
, 
d
);

39 
	`do_ªmove
 ("/%d/%d/%d", 
a
, 
b
, 
c
);

41 
	`do_ªmove
 ("/%d/%d", 
a
, 
b
);

43 
	`do_ªmove
 ("/%d", 
a
);

45 
quõt
 = 
Ál£
;

47 
	`¢¥ötf
 (
åy
,  (åy), "/%d/%d/%d/%d", 
©
 - 1, 0, 
˘
 - 1, 0);

48 
	`CHECK
 (
	`›í
 (
åy
) == -1, "open \"%s\" (mustÑeturn -1)",Åry);

49 
	}
}

52 
	$do_ªmove
 (c⁄° *
f‹m©
, ...)

54 
«me
[128];

55 
va_li°
 
¨gs
;

57 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

58 
	`v¢¥ötf
 (
«me
, Çame, 
f‹m©
, 
¨gs
);

59 
	`va_íd
 (
¨gs
);

61 
	`CHECK
 (
	`ªmove
 (
«me
), "remove \"%s\"",Çame);

62 
	}
}

	@filesys/extended/dir-rmdir.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`CHECK
 (
	`mkdú
 ("a"), "mkdir \"a\"");

12 
	`CHECK
 (
	`ªmove
 ("a"), "rmdir \"a\"");

13 
	`CHECK
 (!
	`chdú
 ("a"), "chdir \"a\" (mustÑeturn false)");

14 
	}
}

	@filesys/extended/dir-under-file.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`CHECK
 (
	`¸óã
 ("abc", 0), "create \"abc\"");

12 
	`CHECK
 (!
	`mkdú
 ("abc"), "mkdir \"abc\" (mustÑeturn false)");

13 
	}
}

	@filesys/extended/dir-vine.c

10 
	~<°rög.h
>

11 
	~<°dio.h
>

12 
	~<sysˇŒ.h
>

13 
	~"ã°s/lib.h
"

14 
	~"ã°s/maö.h
"

17 
	$ã°_maö
 ()

19 
i
;

21 
	`msg
 ("creating manyÜevels of filesánd directories...");

22 
quõt
 = 
åue
;

23 
	`CHECK
 (
	`mkdú
 ("start"), "mkdir \"start\"");

24 
	`CHECK
 (
	`chdú
 ("start"), "chdir \"start\"");

25 
i
 = 0; ; i++)

27 
«me
[3][
READDIR_MAX_LEN
 + 1];

28 
fûe_«me
[16], 
dú_«me
[16];

29 
c⁄ã¡s
[128];

30 
fd
;

33 
	`¢¥ötf
 (
fûe_«me
,  fûe_«me, "fûe%d", 
i
);

34 i‡(!
	`¸óã
 (
fûe_«me
, 0))

36 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

37 
	`¢¥ötf
 (
c⁄ã¡s
,  c⁄ã¡s, "c⁄ã¡†%d\n", 
i
);

38 i‡(
	`wrôe
 (
fd
, 
c⁄ã¡s
, 
	`°æí
 (contents)) != () strlen (contents))

40 
	`CHECK
 (
	`ªmove
 (
fûe_«me
), "remove \"%s\"", file_name);

41 
	`˛o£
 (
fd
);

44 
	`˛o£
 (
fd
);

47 
	`¢¥ötf
 (
dú_«me
,  dú_«me, "dú%d", 
i
);

48 i‡(!
	`mkdú
 (
dú_«me
))

50 
	`CHECK
 (
	`ªmove
 (
fûe_«me
), "remove \"%s\"", file_name);

55 
	`CHECK
 ((
fd
 = 
	`›í
 (".")) > 1, "open \".\"");

56 
	`CHECK
 (
	`ªaddú
 (
fd
, 
«me
[0]), "readdir \".\"");

57 
	`CHECK
 (
	`ªaddú
 (
fd
, 
«me
[1]), "readdir \".\"");

58 
	`CHECK
 (!
	`ªaddú
 (
fd
, 
«me
[2]), "readdir \".\" (should fail)");

59 
	`CHECK
 ((!
	`°rcmp
 (
«me
[0], 
dú_«me
Ë&& !°rcm∞“ame[1], 
fûe_«me
))

60 || (!
	`°rcmp
 (
«me
[1], 
dú_«me
Ë&& !°rcm∞“ame[0], 
fûe_«me
)),

63 
fûe_«me
, 
dú_«me
, 
«me
[0],Çame[1]);

64 
	`˛o£
 (
fd
);

67 
	`CHECK
 (
	`chdú
 (
dú_«me
), "chdir \"%s\"", dir_name);

69 
	`CHECK
 (
i
 > 200, "created filesánd directories onlyÅoÜevel %d", i);

70 
quõt
 = 
Ál£
;

72 
	`msg
 ("removingáll butÅop 10Üevels of filesánd directories...");

73 
quõt
 = 
åue
;

74 
i
-- > 10)

76 
fûe_«me
[16], 
dú_«me
[16];

78 
	`¢¥ötf
 (
fûe_«me
,  fûe_«me, "fûe%d", 
i
);

79 
	`¢¥ötf
 (
dú_«me
,  dú_«me, "dú%d", 
i
);

80 
	`CHECK
 (
	`chdú
 (".."), "chdir \"..\"");

81 
	`CHECK
 (
	`ªmove
 (
dú_«me
), "remove \"%s\"", dir_name);

82 
	`CHECK
 (
	`ªmove
 (
fûe_«me
), "remove \"%s\"", file_name);

84 
quõt
 = 
Ál£
;

85 
	}
}

	@filesys/extended/grow-create.c

3 
	#TEST_SIZE
 0

	)

4 
	~"ã°s/fûesys/¸óã.öc
"

	@filesys/extended/grow-dir-lg.c

4 
	#FILE_CNT
 50

	)

5 
	#DIRECTORY
 "/x"

	)

6 
	~"ã°s/fûesys/exãnded/grow-dú.öc
"

	@filesys/extended/grow-file-size.c

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/fûesys/£q-ã°.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

10 
	gbuf
[2134];

12 
size_t


13 
	$ªtu∫_block_size
 ()

16 
	}
}

19 
	$check_fûe_size
 (
fd
, 
ofs
)

21 
size
 = 
	`fûesize
 (
fd
);

22 i‡(
size
 !
ofs
)

23 
	`Áû
 ("filesizeÇot updatedÖroperly: should be %ld,áctually %ld",

24 
ofs
, 
size
);

25 
	}
}

28 
	$ã°_maö
 ()

30 
	`£q_ã°
 ("testfile",

31 
buf
,  buf, 0,

32 
ªtu∫_block_size
, 
check_fûe_size
);

33 
	}
}

	@filesys/extended/grow-root-lg.c

3 
	#FILE_CNT
 50

	)

4 
	~"ã°s/fûesys/exãnded/grow-dú.öc
"

	@filesys/extended/grow-root-sm.c

3 
	#FILE_CNT
 20

	)

4 
	~"ã°s/fûesys/exãnded/grow-dú.öc
"

	@filesys/extended/grow-seq-lg.c

4 
	#TEST_SIZE
 72943

	)

5 
	~"ã°s/fûesys/exãnded/grow-£q.öc
"

	@filesys/extended/grow-seq-sm.c

4 
	#TEST_SIZE
 5678

	)

5 
	~"ã°s/fûesys/exãnded/grow-£q.öc
"

	@filesys/extended/grow-sparse.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

8 
	gbuf
[76543];

11 
	$ã°_maö
 ()

13 c⁄° *
fûe_«me
 = "testfile";

14 
zîo
 = 0;

15 
fd
;

17 
	`CHECK
 (
	`¸óã
 (
fûe_«me
, 0), "create \"%s\"", file_name);

18 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

19 
	`msg
 ("£ek \"%s\"", 
fûe_«me
);

20 
	`£ek
 (
fd
,  
buf
 - 1);

21 
	`CHECK
 (
	`wrôe
 (
fd
, &
zîo
, 1Ë> 0, "wrôê\"%s\"", 
fûe_«me
);

22 
	`msg
 ("˛o£ \"%s\"", 
fûe_«me
);

23 
	`˛o£
 (
fd
);

24 
	`check_fûe
 (
fûe_«me
, 
buf
,  buf);

25 
	}
}

	@filesys/extended/grow-tell.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/fûesys/£q-ã°.h
"

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

9 
	gbuf
[2134];

11 
size_t


12 
	$ªtu∫_block_size
 ()

15 
	}
}

18 
	$check_ãŒ
 (
fd
, 
ofs
)

20 
pos
 = 
	`ãŒ
 (
fd
);

21 i‡(
pos
 !
ofs
)

22 
	`Áû
 ("fileÖositionÇot updatedÖroperly: should be %ld,áctually %ld",

23 
ofs
, 
pos
);

24 
	}
}

27 
	$ã°_maö
 ()

29 
	`£q_ã°
 ("foobar",

30 
buf
,  buf, 0,

31 
ªtu∫_block_size
, 
check_ãŒ
);

32 
	}
}

	@filesys/extended/grow-two-files.c

4 
	~<øndom.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

9 
	#FILE_SIZE
 8143

	)

10 
	gbuf_a
[
FILE_SIZE
];

11 
	gbuf_b
[
FILE_SIZE
];

14 
	$wrôe_some_byãs
 (c⁄° *
fûe_«me
, 
fd
, c⁄° *
buf
, 
size_t
 *
ofs
)

16 i‡(*
ofs
 < 
FILE_SIZE
)

18 
size_t
 
block_size
 = 
	`øndom_ul⁄g
 (Ë% (
FILE_SIZE
 / 8) + 1;

19 
size_t
 
ªt_vÆ
;

20 i‡(
block_size
 > 
FILE_SIZE
 - *
ofs
)

21 
block_size
 = 
FILE_SIZE
 - *
ofs
;

23 
ªt_vÆ
 = 
	`wrôe
 (
fd
, 
buf
 + *
ofs
, 
block_size
);

24 i‡(
ªt_vÆ
 !
block_size
)

25 
	`Áû
 ("write %zu bytesát offset %zu in \"%s\"Ñeturned %zu",

26 
block_size
, *
ofs
, 
fûe_«me
, 
ªt_vÆ
);

27 *
ofs
 +
block_size
;

29 
	}
}

32 
	$ã°_maö
 ()

34 
fd_a
, 
fd_b
;

35 
size_t
 
ofs_a
 = 0, 
ofs_b
 = 0;

37 
	`øndom_öô
 (0);

38 
	`øndom_byãs
 (
buf_a
,  buf_a);

39 
	`øndom_byãs
 (
buf_b
,  buf_b);

41 
	`CHECK
 (
	`¸óã
 ("a", 0), "create \"a\"");

42 
	`CHECK
 (
	`¸óã
 ("b", 0), "create \"b\"");

44 
	`CHECK
 ((
fd_a
 = 
	`›í
 ("a")) > 1, "open \"a\"");

45 
	`CHECK
 ((
fd_b
 = 
	`›í
 ("b")) > 1, "open \"b\"");

47 
	`msg
 ("write \"a\"ánd \"b\"álternately");

48 
ofs_a
 < 
FILE_SIZE
 || 
ofs_b
 < FILE_SIZE)

50 
	`wrôe_some_byãs
 ("a", 
fd_a
, 
buf_a
, &
ofs_a
);

51 
	`wrôe_some_byãs
 ("b", 
fd_b
, 
buf_b
, &
ofs_b
);

54 
	`msg
 ("close \"a\"");

55 
	`˛o£
 (
fd_a
);

57 
	`msg
 ("close \"b\"");

58 
	`˛o£
 (
fd_b
);

60 
	`check_fûe
 ("a", 
buf_a
, 
FILE_SIZE
);

61 
	`check_fûe
 ("b", 
buf_b
, 
FILE_SIZE
);

62 
	}
}

	@filesys/extended/mk-tree.c

3 
	~<°dio.h
>

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/fûesys/exãnded/mk-åì.h
"

6 
	~"ã°s/lib.h
"

8 
	$do_mkdú
 (c⁄° *
f‹m©
, ...Ë
	`PRINTF_FORMAT
 (1, 2);

9 
	$do_touch
 (c⁄° *
f‹m©
, ...Ë
	`PRINTF_FORMAT
 (1, 2);

12 
	$make_åì
 (
©
, 
bt
, 
˘
, 
dt
)

14 
åy
[128];

15 
a
, 
b
, 
c
, 
d
;

16 
fd
;

18 
	`msg
 ("creating /0/0/0/0Åhrough /%d/%d/%d/%d...",

19 
©
 - 1, 
bt
 - 1, 
˘
 - 1, 
dt
 - 1);

20 
quõt
 = 
åue
;

21 
a
 = 0;á < 
©
;á++)

23 
	`do_mkdú
 ("/%d", 
a
);

24 
b
 = 0; b < 
bt
; b++)

26 
	`do_mkdú
 ("/%d/%d", 
a
, 
b
);

27 
c
 = 0; c < 
˘
; c++)

29 
	`do_mkdú
 ("/%d/%d/%d", 
a
, 
b
, 
c
);

30 
d
 = 0; d < 
dt
; d++)

31 
	`do_touch
 ("/%d/%d/%d/%d", 
a
, 
b
, 
c
, 
d
);

35 
quõt
 = 
Ál£
;

37 
	`¢¥ötf
 (
åy
, Åry, "/%d/%d/%d/%d", 0, 
bt
 - 1, 0, 
dt
 - 1);

38 
	`CHECK
 ((
fd
 = 
	`›í
 (
åy
)) > 1, "open \"%s\"",Åry);

39 
	`msg
 ("˛o£ \"%s\"", 
åy
);

40 
	`˛o£
 (
fd
);

41 
	}
}

44 
	$do_mkdú
 (c⁄° *
f‹m©
, ...)

46 
dú
[128];

47 
va_li°
 
¨gs
;

49 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

50 
	`v¢¥ötf
 (
dú
,  dú, 
f‹m©
, 
¨gs
);

51 
	`va_íd
 (
¨gs
);

53 
	`CHECK
 (
	`mkdú
 (
dú
), "mkdir \"%s\"", dir);

54 
	}
}

57 
	$do_touch
 (c⁄° *
f‹m©
, ...)

59 
fûe
[128];

60 
va_li°
 
¨gs
;

62 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

63 
	`v¢¥ötf
 (
fûe
,  fûe, 
f‹m©
, 
¨gs
);

64 
	`va_íd
 (
¨gs
);

66 
	`CHECK
 (
	`¸óã
 (
fûe
, 0), "create \"%s\"", file);

67 
	}
}

	@filesys/extended/mk-tree.h

1 #i‚de‡
TESTS_FILESYS_EXTENDED_MK_TREE_H


2 
	#TESTS_FILESYS_EXTENDED_MK_TREE_H


	)

4 
make_åì
 (
©
, 
bt
, 
˘
, 
dt
);

	@filesys/extended/syn-rw.c

4 
	~<øndom.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/fûesys/exãnded/syn-rw.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

10 
	gbuf
[
BUF_SIZE
];

12 
	#CHILD_CNT
 4

	)

15 
	$ã°_maö
 ()

17 
pid_t
 
chûdªn
[
CHILD_CNT
];

18 
size_t
 
ofs
;

19 
fd
;

21 
	`CHECK
 (
	`¸óã
 (
fûe_«me
, 0), "create \"%s\"", file_name);

22 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

24 
	`exec_chûdªn
 ("chûd-syn-rw", 
chûdªn
, 
CHILD_CNT
);

26 
	`øndom_byãs
 (
buf
,  buf);

27 
quõt
 = 
åue
;

28 
ofs
 = 0; of†< 
BUF_SIZE
; of†+
CHUNK_SIZE
)

29 
	`CHECK
 (
	`wrôe
 (
fd
, 
buf
 + 
ofs
, 
CHUNK_SIZE
) > 0,

31 (Ë
CHUNK_SIZE
, 
ofs
, 
fûe_«me
);

32 
quõt
 = 
Ál£
;

34 
	`waô_chûdªn
 (
chûdªn
, 
CHILD_CNT
);

35 
	}
}

	@filesys/extended/syn-rw.h

1 #i‚de‡
TESTS_FILESYS_EXTENDED_SYN_RW_H


2 
	#TESTS_FILESYS_EXTENDED_SYN_RW_H


	)

4 
	#CHUNK_SIZE
 8

	)

5 
	#CHUNK_CNT
 512

	)

6 
	#BUF_SIZE
 (
CHUNK_SIZE
 * 
CHUNK_CNT
)

	)

7 c⁄° 
	gfûe_«me
[] = "logfile";

	@filesys/extended/tar.c

5 
	~<u°¨.h
>

6 
	~<sysˇŒ.h
>

7 
	~<°dio.h
>

8 
	~<°rög.h
>

10 
ußge
 ();

11 
boﬁ
 
make_èr_¨chive
 (c⁄° *
¨chive_«me
,

12 *
fûes
[], 
size_t
 
fûe_˙t
);

15 
	$maö
 (
¨gc
, *
¨gv
[])

17 i‡(
¨gc
 < 3)

18 
	`ußge
 ();

20  (
	`make_èr_¨chive
 (
¨gv
[1],árgv + 2, 
¨gc
 - 2)

21 ? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
);

22 
	}
}

25 
	$ußge
 ()

27 
	`¥ötf
 ("tar,Åarárchive creator\n"

33 
	`exô
 (
EXIT_FAILURE
);

34 
	}
}

36 
boﬁ
 
¨chive_fûe
 (
fûe_«me
[], 
size_t
 
fûe_«me_size
,

37 
¨chive_fd
, 
boﬁ
 *
wrôe_îr‹
);

39 
boﬁ
 
¨chive_‹dö¨y_fûe
 (c⁄° *
fûe_«me
, 
fûe_fd
,

40 
¨chive_fd
, 
boﬁ
 *
wrôe_îr‹
);

41 
boﬁ
 
¨chive_dúe˘‹y
 (
fûe_«me
[], 
size_t
 
fûe_«me_size
,

42 
fûe_fd
, 
¨chive_fd
, 
boﬁ
 *
wrôe_îr‹
);

43 
boﬁ
 
wrôe_hódî
 (c⁄° *
fûe_«me
, 
u°¨_ty≥
, 
size
,

44 
¨chive_fd
, 
boﬁ
 *
wrôe_îr‹
);

46 
boﬁ
 
do_wrôe
 (
fd
, c⁄° *
buf„r
, 
size
, boﬁ *
wrôe_îr‹
);

48 
boﬁ


49 
	$make_èr_¨chive
 (c⁄° *
¨chive_«me
, *
fûes
[], 
size_t
 
fûe_˙t
)

51 c⁄° 
zîos
[512];

52 
¨chive_fd
;

53 
boﬁ
 
suc˚ss
 = 
åue
;

54 
boﬁ
 
wrôe_îr‹
 = 
Ál£
;

55 
size_t
 
i
;

57 i‡(!
	`¸óã
 (
¨chive_«me
, 0))

59 
	`¥ötf
 ("%s: cª©êÁûed\n", 
¨chive_«me
);

60  
Ál£
;

62 
¨chive_fd
 = 
	`›í
 (
¨chive_«me
);

63 i‡(
¨chive_fd
 < 0)

65 
	`¥ötf
 ("%s: o≥¿Áûed\n", 
¨chive_«me
);

66  
Ál£
;

69 
i
 = 0; i < 
fûe_˙t
; i++)

71 
fûe_«me
[128];

73 
	`°æ˝y
 (
fûe_«me
, 
fûes
[
i
],  file_name);

74 i‡(!
	`¨chive_fûe
 (
fûe_«me
,  file_name,

75 
¨chive_fd
, &
wrôe_îr‹
))

76 
suc˚ss
 = 
Ál£
;

79 i‡(!
	`do_wrôe
 (
¨chive_fd
, 
zîos
, 512, &
wrôe_îr‹
)

80 || !
	`do_wrôe
 (
¨chive_fd
, 
zîos
, 512, &
wrôe_îr‹
))

81 
suc˚ss
 = 
Ál£
;

83 
	`˛o£
 (
¨chive_fd
);

85  
suc˚ss
;

86 
	}
}

88 
boﬁ


89 
	$¨chive_fûe
 (
fûe_«me
[], 
size_t
 
fûe_«me_size
,

90 
¨chive_fd
, 
boﬁ
 *
wrôe_îr‹
)

92 
fûe_fd
 = 
	`›í
 (
fûe_«me
);

93 i‡(
fûe_fd
 >= 0)

95 
boﬁ
 
suc˚ss
;

97 i‡(
	`öumbî
 (
fûe_fd
Ë!öumbî (
¨chive_fd
))

99 i‡(!
	`isdú
 (
fûe_fd
))

100 
suc˚ss
 = 
	`¨chive_‹dö¨y_fûe
 (
fûe_«me
, 
fûe_fd
,

101 
¨chive_fd
, 
wrôe_îr‹
);

103 
suc˚ss
 = 
	`¨chive_dúe˘‹y
 (
fûe_«me
, 
fûe_«me_size
, 
fûe_fd
,

104 
¨chive_fd
, 
wrôe_îr‹
);

109 
suc˚ss
 = 
åue
;

112 
	`˛o£
 (
fûe_fd
);

114  
suc˚ss
;

118 
	`¥ötf
 ("%s: o≥¿Áûed\n", 
fûe_«me
);

119  
Ál£
;

121 
	}
}

123 
boﬁ


124 
	$¨chive_‹dö¨y_fûe
 (c⁄° *
fûe_«me
, 
fûe_fd
,

125 
¨chive_fd
, 
boﬁ
 *
wrôe_îr‹
)

127 
boﬁ
 
ªad_îr‹
 = 
Ál£
;

128 
boﬁ
 
suc˚ss
 = 
åue
;

129 
fûe_size
 = 
	`fûesize
 (
fûe_fd
);

131 i‡(!
	`wrôe_hódî
 (
fûe_«me
, 
USTAR_REGULAR
, 
fûe_size
,

132 
¨chive_fd
, 
wrôe_îr‹
))

133  
Ál£
;

135 
fûe_size
 > 0)

137 
buf
[512];

138 
chunk_size
 = 
fûe_size
 > 512 ? 512 : file_size;

139 
ªad_ªtvÆ
 = 
	`ªad
 (
fûe_fd
, 
buf
, 
chunk_size
);

140 
byãs_ªad
 = 
ªad_ªtvÆ
 > 0 ?Ñead_retval : 0;

142 i‡(
byãs_ªad
 !
chunk_size
 && !
ªad_îr‹
)

144 
	`¥ötf
 ("%s:ÑódÉº‹\n", 
fûe_«me
);

145 
ªad_îr‹
 = 
åue
;

146 
suc˚ss
 = 
Ál£
;

149 
	`mem£t
 (
buf
 + 
byãs_ªad
, 0, 512 - bytes_read);

150 i‡(!
	`do_wrôe
 (
¨chive_fd
, 
buf
, 512, 
wrôe_îr‹
))

151 
suc˚ss
 = 
Ál£
;

153 
fûe_size
 -
chunk_size
;

156  
suc˚ss
;

157 
	}
}

159 
boﬁ


160 
	$¨chive_dúe˘‹y
 (
fûe_«me
[], 
size_t
 
fûe_«me_size
, 
fûe_fd
,

161 
¨chive_fd
, 
boﬁ
 *
wrôe_îr‹
)

163 
size_t
 
dú_Àn
;

164 
boﬁ
 
suc˚ss
 = 
åue
;

166 
dú_Àn
 = 
	`°æí
 (
fûe_«me
);

167 i‡(
dú_Àn
 + 1 + 
READDIR_MAX_LEN
 + 1 > 
fûe_«me_size
)

169 
	`¥ötf
 ("%s: fûê«mêtoÿl⁄g\n", 
fûe_«me
);

170  
Ál£
;

173 i‡(!
	`wrôe_hódî
 (
fûe_«me
, 
USTAR_DIRECTORY
, 0, 
¨chive_fd
, 
wrôe_îr‹
))

174  
Ál£
;

176 
fûe_«me
[
dú_Àn
] = '/';

177 
	`ªaddú
 (
fûe_fd
, &
fûe_«me
[
dú_Àn
 + 1]))

178 i‡(!
	`¨chive_fûe
 (
fûe_«me
, 
fûe_«me_size
, 
¨chive_fd
, 
wrôe_îr‹
))

179 
suc˚ss
 = 
Ál£
;

180 
fûe_«me
[
dú_Àn
] = '\0';

182  
suc˚ss
;

183 
	}
}

185 
boﬁ


186 
	$wrôe_hódî
 (c⁄° *
fûe_«me
, 
u°¨_ty≥
 
ty≥
, 
size
,

187 
¨chive_fd
, 
boﬁ
 *
wrôe_îr‹
)

189 
hódî
[512];

190  (
	`u°¨_make_hódî
 (
fûe_«me
, 
ty≥
, 
size
, 
hódî
)

191 && 
	`do_wrôe
 (
¨chive_fd
, 
hódî
, 512, 
wrôe_îr‹
));

192 
	}
}

194 
boﬁ


195 
	$do_wrôe
 (
fd
, c⁄° *
buf„r
, 
size
, 
boﬁ
 *
wrôe_îr‹
)

197 i‡(
	`wrôe
 (
fd
, 
buf„r
, 
size
) == size)

198  
åue
;

201 i‡(!*
wrôe_îr‹
)

203 
	`¥ötf
 ("error writingárchive\n");

204 *
wrôe_îr‹
 = 
åue
;

206  
Ál£
;

208 
	}
}

	@filesys/seq-test.c

1 
	~"ã°s/fûesys/£q-ã°.h
"

2 
	~<øndom.h
>

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

7 
£q_ã°
 (c⁄° *
fûe_«me
, *
buf
, 
size_t
 
size
, size_à
öôül_size
,

8 
	$size_t
 (*
block_size_func
) (),

9 (*
check_func
Ë(
fd
, 
ofs
))

11 
size_t
 
ofs
;

12 
fd
;

14 
	`øndom_byãs
 (
buf
, 
size
);

15 
	`CHECK
 (
	`¸óã
 (
fûe_«me
, 
öôül_size
), "create \"%s\"", file_name);

16 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\"", file_name);

18 
ofs
 = 0;

19 
	`msg
 ("wrôög \"%s\"", 
fûe_«me
);

20 
ofs
 < 
size
)

22 
size_t
 
block_size
 = 
	`block_size_func
 ();

23 i‡(
block_size
 > 
size
 - 
ofs
)

24 
block_size
 = 
size
 - 
ofs
;

26 i‡(
	`wrôe
 (
fd
, 
buf
 + 
ofs
, 
block_size
) != () block_size)

27 
	`Áû
 ("write %zu bytesát offset %zu in \"%s\" failed",

28 
block_size
, 
ofs
, 
fûe_«me
);

30 
ofs
 +
block_size
;

31 i‡(
check_func
 !
NULL
)

32 
	`check_func
 (
fd
, 
ofs
);

34 
	`msg
 ("˛o£ \"%s\"", 
fûe_«me
);

35 
	`˛o£
 (
fd
);

36 
	`check_fûe
 (
fûe_«me
, 
buf
, 
size
);

37 
	}
}

	@filesys/seq-test.h

1 #i‚de‡
TESTS_FILESYS_SEQ_TEST_H


2 
	#TESTS_FILESYS_SEQ_TEST_H


	)

4 
	~<°ddef.h
>

6 
£q_ã°
 (c⁄° *
fûe_«me
,

7 *
buf
, 
size_t
 
size
, size_à
öôül_size
,

8 
	$size_t
 (*
block_size_func
) (),

9 (*
check_func
Ë(
fd
, 
ofs
));

	@internal/list.c

10 #unde‡
NDEBUG


11 
	~<debug.h
>

12 
	~<li°.h
>

13 
	~<øndom.h
>

14 
	~<°dio.h
>

15 
	~"thªads/ã°.h
"

19 
	#MAX_SIZE
 64

	)

22 
	svÆue


24 
li°_ñem
 
	mñem
;

25 
	mvÆue
;

28 
shufÊe
 (
vÆue
[], 
size_t
);

29 
boﬁ
 
vÆue_Àss
 (c⁄° 
li°_ñem
 *, const list_elem *,

31 
vîify_li°_fwd
 (
li°
 *, 
size
);

32 
vîify_li°_bkwd
 (
li°
 *, 
size
);

36 
	$ã°
 ()

38 
size
;

40 
	`¥ötf
 ("testing various sizeÜists:");

41 
size
 = 0; sizê< 
MAX_SIZE
; size++)

43 
ª≥©
;

45 
	`¥ötf
 (" %d", 
size
);

46 
ª≥©
 = 0;Ñepeat < 10;Ñepeat++)

48 
vÆue
 
vÆues
[
MAX_SIZE
 * 4];

49 
li°
Üist;

50 
li°_ñem
 *
e
;

51 
i
, 
ofs
;

54 
i
 = 0; i < 
size
; i++)

55 
vÆues
[
i
].
vÆue
 = i;

56 
	`shufÊe
 (
vÆues
, 
size
);

59 
	`li°_öô
 (&
li°
);

60 
i
 = 0; i < 
size
; i++)

61 
	`li°_push_back
 (&
li°
, &
vÆues
[
i
].
ñem
);

64 
e
 = 
	`li°_mö
 (&
li°
, 
vÆue_Àss
, 
NULL
);

65 
	`ASSERT
 (
size
 ? 
	`li°_íåy
 (
e
, 
vÆue
, 
ñem
)->value == 0

66 : 
e
 =
	`li°_begö
 (&
li°
));

67 
e
 = 
	`li°_max
 (&
li°
, 
vÆue_Àss
, 
NULL
);

68 
	`ASSERT
 (
size
 ? 
	`li°_íåy
 (
e
, 
vÆue
, 
ñem
)->value == size - 1

69 : 
e
 =
	`li°_begö
 (&
li°
));

72 
	`li°_s‹t
 (&
li°
, 
vÆue_Àss
, 
NULL
);

73 
	`vîify_li°_fwd
 (&
li°
, 
size
);

76 
	`li°_ªvî£
 (&
li°
);

77 
	`vîify_li°_bkwd
 (&
li°
, 
size
);

81 
	`shufÊe
 (
vÆues
, 
size
);

82 
	`li°_öô
 (&
li°
);

83 
i
 = 0; i < 
size
; i++)

84 
	`li°_ö£π_‹dîed
 (&
li°
, &
vÆues
[
i
].
ñem
,

85 
vÆue_Àss
, 
NULL
);

86 
	`vîify_li°_fwd
 (&
li°
, 
size
);

89 
ofs
 = 
size
;

90 
e
 = 
	`li°_begö
 (&
li°
);É !
	`li°_íd
 (&list);

91 
e
 = 
	`li°_√xt
 (e))

93 
vÆue
 *
v
 = 
	`li°_íåy
 (
e
, vÆue, 
ñem
);

94 
c›õs
 = 
	`øndom_ul⁄g
 () % 4;

95 
c›õs
-- > 0)

97 
vÆues
[
ofs
].
vÆue
 = 
v
->value;

98 
	`li°_ö£π
 (
e
, &
vÆues
[
ofs
++].
ñem
);

101 
	`ASSERT
 ((
size_t
Ë
ofs
 <  
vÆues
 /  *values);

102 
	`li°_unique
 (&
li°
, 
NULL
, 
vÆue_Àss
, NULL);

103 
	`vîify_li°_fwd
 (&
li°
, 
size
);

107 
	`¥ötf
 (" done\n");

108 
	`¥ötf
 ("list: PASS\n");

109 
	}
}

113 
	$shufÊe
 (
vÆue
 *
¨øy
, 
size_t
 
˙t
)

115 
size_t
 
i
;

117 
i
 = 0; i < 
˙t
; i++)

119 
size_t
 
j
 = 
i
 + 
	`øndom_ul⁄g
 (Ë% (
˙t
 - i);

120 
vÆue
 
t
 = 
¨øy
[
j
];

121 
¨øy
[
j
] =áºay[
i
];

122 
¨øy
[
i
] = 
t
;

124 
	}
}

128 
boﬁ


129 
	$vÆue_Àss
 (c⁄° 
li°_ñem
 *
a_
, c⁄° li°_ñem *
b_
,

130 *
aux
 
UNUSED
)

132 c⁄° 
vÆue
 *
a
 = 
	`li°_íåy
 (
a_
, vÆue, 
ñem
);

133 c⁄° 
vÆue
 *
b
 = 
	`li°_íåy
 (
b_
, vÆue, 
ñem
);

135  
a
->
vÆue
 < 
b
->value;

136 
	}
}

141 
	$vîify_li°_fwd
 (
li°
 *li°, 
size
)

143 
li°_ñem
 *
e
;

144 
i
;

146 
i
 = 0, 
e
 = 
	`li°_begö
 (
li°
);

147 
i
 < 
size
 && 
e
 !
	`li°_íd
 (
li°
);

148 
i
++, 
e
 = 
	`li°_√xt
 (e))

150 
vÆue
 *
v
 = 
	`li°_íåy
 (
e
, vÆue, 
ñem
);

151 
	`ASSERT
 (
i
 =
v
->
vÆue
);

153 
	`ASSERT
 (
i
 =
size
);

154 
	`ASSERT
 (
e
 =
	`li°_íd
 (
li°
));

155 
	}
}

160 
	$vîify_li°_bkwd
 (
li°
 *li°, 
size
)

162 
li°_ñem
 *
e
;

163 
i
;

165 
i
 = 0, 
e
 = 
	`li°_rbegö
 (
li°
);

166 
i
 < 
size
 && 
e
 !
	`li°_ªnd
 (
li°
);

167 
i
++, 
e
 = 
	`li°_¥ev
 (e))

169 
vÆue
 *
v
 = 
	`li°_íåy
 (
e
, vÆue, 
ñem
);

170 
	`ASSERT
 (
i
 =
v
->
vÆue
);

172 
	`ASSERT
 (
i
 =
size
);

173 
	`ASSERT
 (
e
 =
	`li°_ªnd
 (
li°
));

174 
	}
}

	@internal/stdio.c

10 #unde‡
NDEBUG


11 
	~<limôs.h
>

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

14 
	~<°dlib.h
>

15 
	~<°dio.h
>

16 
	~<°rög.h
>

17 
	~"thªads/ã°.h
"

20 
	gÁûuª_˙t
;

23 
	$checkf
 (c⁄° *
ex≥˘
, c⁄° *
f‹m©
, ...)

25 
ouçut
[128];

26 
va_li°
 
¨gs
;

28 
	`¥ötf
 ("\"%s\" -> \"%s\": ", 
f‹m©
, 
ex≥˘
);

30 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

31 
	`v¢¥ötf
 (
ouçut
,  ouçut, 
f‹m©
, 
¨gs
);

32 
	`va_íd
 (
¨gs
);

34 i‡(
	`°rcmp
 (
ex≥˘
, 
ouçut
))

36 
	`¥ötf
 ("\nFAIL:á˘uÆ ouçuà\"%s\"\n", 
ouçut
);

37 
Áûuª_˙t
++;

40 
	`¥ötf
 ("okay\n");

41 
	}
}

45 
	$ã°
 ()

47 
	`¥ötf
 ("Testing formats:");

51 
	`checkf
 ("1", "%'d", 1);

52 
	`checkf
 ("12", "%'d", 12);

53 
	`checkf
 ("123", "%'d", 123);

54 
	`checkf
 ("1,234", "%'d", 1234);

55 
	`checkf
 ("12,345", "%'d", 12345);

56 
	`checkf
 ("123,456", "%'ld", 123456L);

57 
	`checkf
 ("1,234,567", "%'ld", 1234567L);

58 
	`checkf
 ("12,345,678", "%'ld", 12345678L);

59 
	`checkf
 ("123,456,789", "%'ld", 123456789L);

60 
	`checkf
 ("1,234,567,890", "%'ld", 1234567890L);

61 
	`checkf
 ("12,345,678,901", "%'lld", 12345678901LL);

62 
	`checkf
 ("123,456,789,012", "%'lld", 123456789012LL);

63 
	`checkf
 ("1,234,567,890,123", "%'lld", 1234567890123LL);

64 
	`checkf
 ("12,345,678,901,234", "%'lld", 12345678901234LL);

65 
	`checkf
 ("123,456,789,012,345", "%'lld", 123456789012345LL);

66 
	`checkf
 ("1,234,567,890,123,456", "%'lld", 1234567890123456LL);

67 
	`checkf
 ("12,345,678,901,234,567", "%'lld", 12345678901234567LL);

68 
	`checkf
 ("123,456,789,012,345,678", "%'lld", 123456789012345678LL);

69 
	`checkf
 ("1,234,567,890,123,456,789", "%'lld", 1234567890123456789LL);

73 
	`checkf
 ("-1", "%'d", -1);

74 
	`checkf
 ("-12", "%'d", -12);

75 
	`checkf
 ("-123", "%'d", -123);

76 
	`checkf
 ("-1,234", "%'d", -1234);

77 
	`checkf
 ("-12,345", "%'d", -12345);

78 
	`checkf
 ("-123,456", "%'ld", -123456L);

79 
	`checkf
 ("-1,234,567", "%'ld", -1234567L);

80 
	`checkf
 ("-12,345,678", "%'ld", -12345678L);

81 
	`checkf
 ("-123,456,789", "%'ld", -123456789L);

82 
	`checkf
 ("-1,234,567,890", "%'ld", -1234567890L);

83 
	`checkf
 ("-12,345,678,901", "%'lld", -12345678901LL);

84 
	`checkf
 ("-123,456,789,012", "%'lld", -123456789012LL);

85 
	`checkf
 ("-1,234,567,890,123", "%'lld", -1234567890123LL);

86 
	`checkf
 ("-12,345,678,901,234", "%'lld", -12345678901234LL);

87 
	`checkf
 ("-123,456,789,012,345", "%'lld", -123456789012345LL);

88 
	`checkf
 ("-1,234,567,890,123,456", "%'lld", -1234567890123456LL);

89 
	`checkf
 ("-12,345,678,901,234,567", "%'lld", -12345678901234567LL);

90 
	`checkf
 ("-123,456,789,012,345,678", "%'lld", -123456789012345678LL);

91 
	`checkf
 ("-1,234,567,890,123,456,789", "%'lld", -1234567890123456789LL);

94 
	`checkf
 (" 0", "%5d", 0);

95 
	`checkf
 ("0 ", "%-5d", 0);

96 
	`checkf
 (" +0", "%+5d", 0);

97 
	`checkf
 ("+0 ", "%+-5d", 0);

98 
	`checkf
 (" 0", "% 5d", 0);

99 
	`checkf
 ("00000", "%05d", 0);

100 
	`checkf
 (" ", "%5.0d", 0);

101 
	`checkf
 (" 00", "%5.2d", 0);

102 
	`checkf
 ("0", "%d", 0);

104 
	`checkf
 (" 1", "%5d", 1);

105 
	`checkf
 ("1 ", "%-5d", 1);

106 
	`checkf
 (" +1", "%+5d", 1);

107 
	`checkf
 ("+1 ", "%+-5d", 1);

108 
	`checkf
 (" 1", "% 5d", 1);

109 
	`checkf
 ("00001", "%05d", 1);

110 
	`checkf
 (" 1", "%5.0d", 1);

111 
	`checkf
 (" 01", "%5.2d", 1);

112 
	`checkf
 ("1", "%d", 1);

114 
	`checkf
 (" -1", "%5d", -1);

115 
	`checkf
 ("-1 ", "%-5d", -1);

116 
	`checkf
 (" -1", "%+5d", -1);

117 
	`checkf
 ("-1 ", "%+-5d", -1);

118 
	`checkf
 (" -1", "% 5d", -1);

119 
	`checkf
 ("-0001", "%05d", -1);

120 
	`checkf
 (" -1", "%5.0d", -1);

121 
	`checkf
 (" -01", "%5.2d", -1);

122 
	`checkf
 ("-1", "%d", -1);

124 
	`checkf
 ("12345", "%5d", 12345);

125 
	`checkf
 ("12345", "%-5d", 12345);

126 
	`checkf
 ("+12345", "%+5d", 12345);

127 
	`checkf
 ("+12345", "%+-5d", 12345);

128 
	`checkf
 (" 12345", "% 5d", 12345);

129 
	`checkf
 ("12345", "%05d", 12345);

130 
	`checkf
 ("12345", "%5.0d", 12345);

131 
	`checkf
 ("12345", "%5.2d", 12345);

132 
	`checkf
 ("12345", "%d", 12345);

134 
	`checkf
 ("123456", "%5d", 123456);

135 
	`checkf
 ("123456", "%-5d", 123456);

136 
	`checkf
 ("+123456", "%+5d", 123456);

137 
	`checkf
 ("+123456", "%+-5d", 123456);

138 
	`checkf
 (" 123456", "% 5d", 123456);

139 
	`checkf
 ("123456", "%05d", 123456);

140 
	`checkf
 ("123456", "%5.0d", 123456);

141 
	`checkf
 ("123456", "%5.2d", 123456);

142 
	`checkf
 ("123456", "%d", 123456);

145 
	`checkf
 (" 0", "%5u", 0);

146 
	`checkf
 (" 0", "%5o", 0);

147 
	`checkf
 (" 0", "%5x", 0);

148 
	`checkf
 (" 0", "%5X", 0);

149 
	`checkf
 (" 0", "%#5o", 0);

150 
	`checkf
 (" 0", "%#5x", 0);

151 
	`checkf
 (" 0", "%#5X", 0);

152 
	`checkf
 (" 00000000", "%#10.8x", 0);

154 
	`checkf
 (" 1", "%5u", 1);

155 
	`checkf
 (" 1", "%5o", 1);

156 
	`checkf
 (" 1", "%5x", 1);

157 
	`checkf
 (" 1", "%5X", 1);

158 
	`checkf
 (" 01", "%#5o", 1);

159 
	`checkf
 (" 0x1", "%#5x", 1);

160 
	`checkf
 (" 0X1", "%#5X", 1);

161 
	`checkf
 ("0x00000001", "%#10.8x", 1);

163 
	`checkf
 ("123456", "%5u", 123456);

164 
	`checkf
 ("361100", "%5o", 123456);

165 
	`checkf
 ("1e240", "%5x", 123456);

166 
	`checkf
 ("1E240", "%5X", 123456);

167 
	`checkf
 ("0361100", "%#5o", 123456);

168 
	`checkf
 ("0x1e240", "%#5x", 123456);

169 
	`checkf
 ("0X1E240", "%#5X", 123456);

170 
	`checkf
 ("0x0001e240", "%#10.8x", 123456);

173 
	`checkf
 ("foobar", "%c%c%c%c%c%c", 'f', 'o', 'o', 'b', 'a', 'r');

174 
	`checkf
 ("Üeft-right ", "%6s%s%-7s", "left", "-", "right");

175 
	`checkf
 ("trim", "%.4s", "trimoff");

176 
	`checkf
 ("%%", "%%%%");

179 
	`checkf
 ("ábcdefgh", "%9s", "abcdefgh");

180 
	`checkf
 ("36657730000", "%- o", () 036657730000);

181 
	`checkf
 ("4139757568", "%- u", () 4139757568UL);

182 
	`checkf
 ("f6bfb000", "%- x", () 0xf6bfb000);

183 
	`checkf
 ("36657730000", "%-to", (
±rdiff_t
) 036657730000);

184 
	`checkf
 ("4139757568", "%-tu", (
±rdiff_t
) 4139757568UL);

185 
	`checkf
 ("-155209728", "%-zi", (
size_t
) -155209728);

186 
	`checkf
 ("-155209728", "%-zd", (
size_t
) -155209728);

187 
	`checkf
 ("036657730000", "%+#o", () 036657730000);

188 
	`checkf
 ("0xf6bfb000", "%+#x", () 0xf6bfb000);

189 
	`checkf
 ("-155209728", "% zi", (
size_t
) -155209728);

190 
	`checkf
 ("-155209728", "% zd", (
size_t
) -155209728);

191 
	`checkf
 ("4139757568", "%Åu", (
±rdiff_t
) 4139757568UL);

192 
	`checkf
 ("036657730000", "% #o", () 036657730000);

193 
	`checkf
 ("0xf6bfb000", "% #x", () 0xf6bfb000);

194 
	`checkf
 ("0xf6bfb000", "%# x", () 0xf6bfb000);

195 
	`checkf
 ("-155209728", "%#zd", (
size_t
) -155209728);

196 
	`checkf
 ("-155209728", "%0zi", (
size_t
) -155209728);

197 
	`checkf
 ("4,139,757,568", "%'tu", (
±rdiff_t
) 4139757568UL);

198 
	`checkf
 ("-155,209,728", "%-'d", -155209728);

199 
	`checkf
 ("-155209728", "%.zi", (
size_t
) -155209728);

200 
	`checkf
 ("-155209728", "%zi", (
size_t
) -155209728);

201 
	`checkf
 ("-155209728", "%zd", (
size_t
) -155209728);

202 
	`checkf
 ("-155209728", "%+zi", (
size_t
) -155209728);

204 i‡(
Áûuª_˙t
 == 0)

205 
	`¥ötf
 ("\nstdio: PASS\n");

207 
	`¥ötf
 ("\n°dio: FAIL: %dÅe°†Áûed\n", 
Áûuª_˙t
);

208 
	}
}

	@internal/stdlib.c

10 #unde‡
NDEBUG


11 
	~<debug.h
>

12 
	~<limôs.h
>

13 
	~<øndom.h
>

14 
	~<°dlib.h
>

15 
	~<°dio.h
>

16 
	~"thªads/ã°.h
"

19 
	#MAX_CNT
 4096

	)

21 
shufÊe
 ([], 
size_t
);

22 
com∑ª_öts
 (const *, const *);

23 
vîify_‹dî
 (c⁄° [], 
size_t
);

24 
vîify_b£¨ch
 (c⁄° [], 
size_t
);

28 
	$ã°
 ()

30 
˙t
;

32 
	`¥ötf
 ("testing various sizeárrays:");

33 
˙t
 = 0; c¡ < 
MAX_CNT
; cnt = cnt * 4 / 3 + 1)

35 
ª≥©
;

37 
	`¥ötf
 (" %zu", 
˙t
);

38 
ª≥©
 = 0;Ñepeat < 10;Ñepeat++)

40 
vÆues
[
MAX_CNT
];

41 
i
;

44 
i
 = 0; i < 
˙t
; i++)

45 
vÆues
[
i
] = i;

46 
	`shufÊe
 (
vÆues
, 
˙t
);

49 
	`qs‹t
 (
vÆues
, 
˙t
,  *vÆues, 
com∑ª_öts
);

50 
	`vîify_‹dî
 (
vÆues
, 
˙t
);

51 
	`vîify_b£¨ch
 (
vÆues
, 
˙t
);

55 
	`¥ötf
 (" done\n");

56 
	`¥ötf
 ("stdlib: PASS\n");

57 
	}
}

61 
	$shufÊe
 (*
¨øy
, 
size_t
 
˙t
)

63 
size_t
 
i
;

65 
i
 = 0; i < 
˙t
; i++)

67 
size_t
 
j
 = 
i
 + 
	`øndom_ul⁄g
 (Ë% (
˙t
 - i);

68 
t
 = 
¨øy
[
j
];

69 
¨øy
[
j
] =áºay[
i
];

70 
¨øy
[
i
] = 
t
;

72 
	}
}

78 
	$com∑ª_öts
 (c⁄° *
a_
, c⁄° *
b_
)

80 c⁄° *
a
 = 
a_
;

81 c⁄° *
b
 = 
b_
;

83  *
a
 < *
b
 ? -1 : *a > *b;

84 
	}
}

88 
	$vîify_‹dî
 (c⁄° *
¨øy
, 
size_t
 
˙t
)

90 
i
;

92 
i
 = 0; (
size_t
Ëò< 
˙t
; i++)

93 
	`ASSERT
 (
¨øy
[
i
] == i);

94 
	}
}

99 
	$vîify_b£¨ch
 (c⁄° *
¨øy
, 
size_t
 
˙t
)

101 
nŸ_ö_¨øy
[] = {0, -1, 
INT_MAX
, 
MAX_CNT
, MAX_CNT + 1, MAX_CNT * 2};

102 
i
;

105 
i
 = 0; (
size_t
Ëò< 
˙t
; i++)

106 
	`ASSERT
 (
	`b£¨ch
 (&
i
, 
¨øy
, 
˙t
,  *¨øy, 
com∑ª_öts
)

107 =
¨øy
 + 
i
);

110 
nŸ_ö_¨øy
[0] = 
˙t
;

111 
i
 = 0; (
size_t
Ëò<  
nŸ_ö_¨øy
 /  *not_in_array; i++)

112 
	`ASSERT
 (
	`b£¨ch
 (&
nŸ_ö_¨øy
[
i
], 
¨øy
, 
˙t
,  *¨øy, 
com∑ª_öts
)

113 =
NULL
);

114 
	}
}

	@lib.c

1 
	~"ã°s/lib.h
"

2 
	~<øndom.h
>

3 
	~<°d¨g.h
>

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~<sysˇŒ.h
>

8 c⁄° *
	gã°_«me
;

9 
boﬁ
 
	gquõt
 = 
Ál£
;

12 
	$vmsg
 (c⁄° *
f‹m©
, 
va_li°
 
¨gs
, c⁄° *
suffix
)

19 
buf
[1024];

21 
	`¢¥ötf
 (
buf
,  buf, "(%sË", 
ã°_«me
);

22 
	`v¢¥ötf
 (
buf
 + 
	`°æí
 (buf),  bu‡- såÀ¿(buf), 
f‹m©
, 
¨gs
);

23 
	`°æ˝y
 (
buf
 + 
	`°æí
 (buf), 
suffix
,  buf - strlen (buf));

24 
	`wrôe
 (
STDOUT_FILENO
, 
buf
, 
	`°æí
 (buf));

25 
	}
}

28 
	$msg
 (c⁄° *
f‹m©
, ...)

30 
va_li°
 
¨gs
;

32 i‡(
quõt
)

34 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

35 
	`vmsg
 (
f‹m©
, 
¨gs
, "\n");

36 
	`va_íd
 (
¨gs
);

37 
	}
}

40 
	$Áû
 (c⁄° *
f‹m©
, ...)

42 
va_li°
 
¨gs
;

44 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

45 
	`vmsg
 (
f‹m©
, 
¨gs
, ": FAILED\n");

46 
	`va_íd
 (
¨gs
);

48 
	`exô
 (1);

49 
	}
}

52 
	$sw≠
 (*
a_
, *
b_
, 
size_t
 
size
)

54 
uöt8_t
 *
a
 = 
a_
;

55 
uöt8_t
 *
b
 = 
b_
;

56 
size_t
 
i
;

58 
i
 = 0; i < 
size
; i++)

60 
uöt8_t
 
t
 = 
a
[
i
];

61 
a
[
i
] = 
b
[i];

62 
b
[
i
] = 
t
;

64 
	}
}

67 
	$shufÊe
 (*
buf_
, 
size_t
 
˙t
, size_à
size
)

69 *
buf
 = 
buf_
;

70 
size_t
 
i
;

72 
i
 = 0; i < 
˙t
; i++)

74 
size_t
 
j
 = 
i
 + 
	`øndom_ul⁄g
 (Ë% (
˙t
 - i);

75 
	`sw≠
 (
buf
 + 
i
 * 
size
, bu‡+ 
j
 * size, size);

77 
	}
}

80 
	$exec_chûdªn
 (c⁄° *
chûd_«me
, 
pid_t
 
pids
[], 
size_t
 
chûd_˙t
)

82 
size_t
 
i
;

84 
i
 = 0; i < 
chûd_˙t
; i++)

86 
cmd_löe
[128];

87 
	`¢¥ötf
 (
cmd_löe
,  cmd_löe, "%†%zu", 
chûd_«me
, 
i
);

88 
	`CHECK
 ((
pids
[
i
] = 
	`exec
 (
cmd_löe
)Ë!
PID_ERROR
,

89 "exe¯chûd %zu o‡%zu: \"%s\"",
i
 + 1, 
chûd_˙t
, 
cmd_löe
);

91 
	}
}

94 
	$waô_chûdªn
 (
pid_t
 
pids
[], 
size_t
 
chûd_˙t
)

96 
size_t
 
i
;

98 
i
 = 0; i < 
chûd_˙t
; i++)

100 
°©us
 = 
	`waô
 (
pids
[
i
]);

101 
	`CHECK
 (
°©us
 =(Ë
i
,

103 
i
 + 1, 
chûd_˙t
, 
°©us
, i);

105 
	}
}

108 
	$check_fûe_h™dÀ
 (
fd
,

109 c⁄° *
fûe_«me
, c⁄° *
buf_
, 
size_t
 
size
)

111 c⁄° *
buf
 = 
buf_
;

112 
size_t
 
ofs
 = 0;

113 
size_t
 
fûe_size
;

118 
fûe_size
 = 
	`fûesize
 (
fd
);

119 i‡(
fûe_size
 !
size
)

120 
	`msg
 ("size of %s (%zu) differs fromÉxpected (%zu)",

121 
fûe_«me
, 
fûe_size
, 
size
);

123 
	`msg
("1\n");

125 
ofs
 < 
size
)

127 
block
[512];

128 
size_t
 
block_size
, 
ªt_vÆ
;

130 
block_size
 = 
size
 - 
ofs
;

131 i‡(
block_size
 >  
block
)

132 
block_size
 =  
block
;

134 
ªt_vÆ
 = 
	`ªad
 (
fd
, 
block
, 
block_size
);

135 i‡(
ªt_vÆ
 !
block_size
)

136 
	`Áû
 ("read of %zu bytesát offset %zu in \"%s\"Ñeturned %zu",

137 
block_size
, 
ofs
, 
fûe_«me
, 
ªt_vÆ
);

138 
	`msg
("2\n");

139 
	`com∑ª_byãs
 (
block
, 
buf
 + 
ofs
, 
block_size
, ofs, 
fûe_«me
);

140 
ofs
 +
block_size
;

143 
	`msg
("3\n");

145 i‡(
fûe_size
 !
size
)

146 
	`Áû
 ("size of %s (%zu) differs fromÉxpected (%zu)",

147 
fûe_«me
, 
fûe_size
, 
size
);

148 
	`msg
("4\n");

149 
	`msg
 ("vîifõd c⁄ã¡†o‡\"%s\"", 
fûe_«me
);

150 
	}
}

153 
	$check_fûe
 (c⁄° *
fûe_«me
, c⁄° *
buf
, 
size_t
 
size
)

155 
fd
;

157 
	`CHECK
 ((
fd
 = 
	`›í
 (
fûe_«me
)) > 1, "open \"%s\" for verification",

158 
fûe_«me
);

159 
	`check_fûe_h™dÀ
 (
fd
, 
fûe_«me
, 
buf
, 
size
);

160 
	`msg
 ("˛o£ \"%s\"", 
fûe_«me
);

161 
	`˛o£
 (
fd
);

162 
	}
}

165 
	$com∑ª_byãs
 (c⁄° *
ªad_d©a_
, c⁄° *
ex≥˘ed_d©a_
, 
size_t
 
size
,

166 
size_t
 
ofs
, c⁄° *
fûe_«me
)

168 c⁄° 
uöt8_t
 *
ªad_d©a
 = 
ªad_d©a_
;

169 c⁄° 
uöt8_t
 *
ex≥˘ed_d©a
 = 
ex≥˘ed_d©a_
;

170 
size_t
 
i
, 
j
;

171 
size_t
 
show_˙t
;

173 i‡(!
	`memcmp
 (
ªad_d©a
, 
ex≥˘ed_d©a
, 
size
))

176 
i
 = 0; i < 
size
; i++)

177 i‡(
ªad_d©a
[
i
] !
ex≥˘ed_d©a
[i])

179 
j
 = 
i
 + 1; j < 
size
; j++)

180 i‡(
ªad_d©a
[
j
] =
ex≥˘ed_d©a
[j])

183 
quõt
 = 
Ál£
;

184 
	`msg
 ("%zu bytesÑead startingát offset %zu in \"%s\" differ "

185 "‰omÉx≥˘ed.", 
j
 - 
i
, 
ofs
 + i, 
fûe_«me
);

186 
show_˙t
 = 
j
 - 
i
;

187 i‡(
j
 - 
i
 > 64)

189 
show_˙t
 = 64;

190 
	`msg
 ("Showög fú° dif„rög %zu byãs.", 
show_˙t
);

192 
	`msg
 ("DataáctuallyÑead:");

193 
	`hex_dump
 (
ofs
 + 
i
, 
ªad_d©a
 + i, 
show_˙t
, 
åue
);

194 
	`msg
 ("Expected data:");

195 
	`hex_dump
 (
ofs
 + 
i
, 
ex≥˘ed_d©a
 + i, 
show_˙t
, 
åue
);

196 
	`Áû
 ("%zu bytesÑead startingát offset %zu in \"%s\" differ "

197 "‰omÉx≥˘ed", 
j
 - 
i
, 
ofs
 + i, 
fûe_«me
);

198 
	}
}

	@lib.h

1 #i‚de‡
TESTS_LIB_H


2 
	#TESTS_LIB_H


	)

4 
	~<debug.h
>

5 
	~<°dboﬁ.h
>

6 
	~<°ddef.h
>

7 
	~<sysˇŒ.h
>

9 c⁄° *
ã°_«me
;

10 
boﬁ
 
quõt
;

12 
	$msg
 (c⁄° *, ...Ë
	`PRINTF_FORMAT
 (1, 2);

13 
	$Áû
 (c⁄° *, ...Ë
	$PRINTF_FORMAT
 (1, 2Ë
NO_RETURN
;

29 
	#CHECK
(
SUCCESS
, ...) \

32 
	`msg
 (
__VA_ARGS__
); \

33 i‡(!(
SUCCESS
)) \

34 
	`Áû
 (
__VA_ARGS__
); \

35 
	}
} \

36 0)

	)

38 
shufÊe
 (*, 
size_t
 
˙t
, size_à
size
);

40 
exec_chûdªn
 (c⁄° *
chûd_«me
, 
pid_t
 
pids
[], 
size_t
 
chûd_˙t
);

41 
waô_chûdªn
 (
pid_t
 
pids
[], 
size_t
 
chûd_˙t
);

43 
check_fûe_h™dÀ
 (
fd
, c⁄° *
fûe_«me
,

44 c⁄° *
buf_
, 
size_t
 
fûesize
);

45 
check_fûe
 (c⁄° *
fûe_«me
, c⁄° *
buf
, 
size_t
 
fûesize
);

47 
com∑ª_byãs
 (c⁄° *
ªad_d©a
, c⁄° *
ex≥˘ed_d©a
,

48 
size_t
 
size
, size_à
ofs
, c⁄° *
fûe_«me
);

	@main.c

1 
	~<øndom.h
>

2 
	~"ã°s/lib.h
"

3 
	~"ã°s/maö.h
"

6 
	$maö
 (
¨gc
 
UNUSED
, *
¨gv
[])

8 
ã°_«me
 = 
¨gv
[0];

10 
	`msg
 ("begin");

11 
	`øndom_öô
 (0);

12 
	`ã°_maö
 ();

13 
	`msg
 ("end");

15 
	}
}

	@main.h

1 #i‚de‡
TESTS_MAIN_H


2 
	#TESTS_MAIN_H


	)

4 
ã°_maö
 ();

	@threads/alarm-negative.c

3 
	~<°dio.h
>

4 
	~"ã°s/thªads/ã°s.h
"

5 
	~"thªads/mÆloc.h
"

6 
	~"thªads/synch.h
"

7 
	~"thªads/thªad.h
"

8 
	~"devi˚s/timî.h
"

11 
	$ã°_Æ¨m_√g©ive
 ()

13 
	`timî_¶ìp
 (-100);

14 
	`∑ss
 ();

15 
	}
}

	@threads/alarm-priority.c

4 
	~<°dio.h
>

5 
	~"ã°s/thªads/ã°s.h
"

6 
	~"thªads/öô.h
"

7 
	~"thªads/mÆloc.h
"

8 
	~"thªads/synch.h
"

9 
	~"thªads/thªad.h
"

10 
	~"devi˚s/timî.h
"

12 
thªad_func
 
	gÆ¨m_¥i‹ôy_thªad
;

13 
öt64_t
 
	gwake_time
;

14 
£m≠h‹e
 
	gwaô_£ma
;

17 
	$ã°_Æ¨m_¥i‹ôy
 ()

19 
i
;

22 
	`ASSERT
 (!
thªad_mlfqs
);

24 
wake_time
 = 
	`timî_ticks
 (Ë+ 5 * 
TIMER_FREQ
;

25 
	`£ma_öô
 (&
waô_£ma
, 0);

27 
i
 = 0; i < 10; i++)

29 
¥i‹ôy
 = 
PRI_DEFAULT
 - (
i
 + 5) % 10 - 1;

30 
«me
[16];

31 
	`¢¥ötf
 (
«me
, Çame, "¥i‹ôy %d", 
¥i‹ôy
);

32 
	`thªad_¸óã
 (
«me
, 
¥i‹ôy
, 
Æ¨m_¥i‹ôy_thªad
, 
NULL
);

35 
	`thªad_£t_¥i‹ôy
 (
PRI_MIN
);

37 
i
 = 0; i < 10; i++)

38 
	`£ma_down
 (&
waô_£ma
);

39 
	}
}

42 
	$Æ¨m_¥i‹ôy_thªad
 (*
aux
 
UNUSED
)

45 
öt64_t
 
°¨t_time
 = 
	`timî_ticks
 ();

46 
	`timî_ñ≠£d
 (
°¨t_time
) == 0)

52 
	`timî_¶ìp
 (
wake_time
 - 
	`timî_ticks
 ());

55 
	`msg
 ("Thªad %†wokêup.", 
	`thªad_«me
 ());

57 
	`£ma_up
 (&
waô_£ma
);

58 
	}
}

	@threads/alarm-simultaneous.c

5 
	~<°dio.h
>

6 
	~"ã°s/thªads/ã°s.h
"

7 
	~"thªads/öô.h
"

8 
	~"thªads/mÆloc.h
"

9 
	~"thªads/synch.h
"

10 
	~"thªads/thªad.h
"

11 
	~"devi˚s/timî.h
"

13 
ã°_¶ìp
 (
thªad_˙t
, 
ôî©i⁄s
);

16 
	$ã°_Æ¨m_simu…™eous
 ()

18 
	`ã°_¶ìp
 (3, 5);

19 
	}
}

22 
	s¶ìp_ã°


24 
öt64_t
 
	m°¨t
;

25 
	môî©i⁄s
;

26 *
	mouçut_pos
;

29 
¶ì≥r
 (*);

33 
	$ã°_¶ìp
 (
thªad_˙t
, 
ôî©i⁄s
)

35 
¶ìp_ã°
 
ã°
;

36 *
ouçut
;

37 
i
;

40 
	`ASSERT
 (!
thªad_mlfqs
);

42 
	`msg
 ("Cª©ög %dÅhªad†tÿ¶ì∞%dÅime†óch.", 
thªad_˙t
, 
ôî©i⁄s
);

43 
	`msg
 ("EachÅhread sleeps 10ÅicksÉachÅime.");

44 
	`msg
 ("Withinán iteration,állÅhreads should wake up onÅhe sameÅick.");

47 
ouçut
 = 
	`mÆloc
 ( *ouçuà* 
ôî©i⁄s
 * 
thªad_˙t
 * 2);

48 i‡(
ouçut
 =
NULL
)

49 
	`PANIC
 ("couldn'tállocate memory forÅest");

52 
ã°
.
°¨t
 = 
	`timî_ticks
 () + 100;

53 
ã°
.
ôî©i⁄s
 = iterations;

54 
ã°
.
ouçut_pos
 = 
ouçut
;

57 
	`ASSERT
 (
ouçut
 !
NULL
);

58 
i
 = 0; i < 
thªad_˙t
; i++)

60 
«me
[16];

61 
	`¢¥ötf
 (
«me
, Çame, "thªad %d", 
i
);

62 
	`thªad_¸óã
 (
«me
, 
PRI_DEFAULT
, 
¶ì≥r
, &
ã°
);

66 
	`timî_¶ìp
 (100 + 
ôî©i⁄s
 * 10 + 100);

69 
	`msg
 ("ôî©i⁄ 0,Åhªad 0: wokêu∞a·î %dÅicks", 
ouçut
[0]);

70 
i
 = 1; i < 
ã°
.
ouçut_pos
 - 
ouçut
; i++)

71 
	`msg
 ("iteration %d,Åhread %d: woke up %dÅicksÜater",

72 
i
 / 
thªad_˙t
, i %Åhªad_˙t, 
ouçut
[i] - output[i - 1]);

74 
	`‰ì
 (
ouçut
);

75 
	}
}

79 
	$¶ì≥r
 (*
ã°_
)

81 
¶ìp_ã°
 *
ã°
 = 
ã°_
;

82 
i
;

85 
	`timî_¶ìp
 (1);

87 
i
 = 1; i <
ã°
->
ôî©i⁄s
; i++)

89 
öt64_t
 
¶ìp_u¡û
 = 
ã°
->
°¨t
 + 
i
 * 10;

90 
	`timî_¶ìp
 (
¶ìp_u¡û
 - 
	`timî_ticks
 ());

91 *
ã°
->
ouçut_pos
++ = 
	`timî_ticks
 (Ë-Åe°->
°¨t
;

92 
	`thªad_yõld
 ();

94 
	}
}

	@threads/alarm-wait.c

5 
	~<°dio.h
>

6 
	~"ã°s/thªads/ã°s.h
"

7 
	~"thªads/öô.h
"

8 
	~"thªads/mÆloc.h
"

9 
	~"thªads/synch.h
"

10 
	~"thªads/thªad.h
"

11 
	~"devi˚s/timî.h
"

13 
ã°_¶ìp
 (
thªad_˙t
, 
ôî©i⁄s
);

16 
	$ã°_Æ¨m_sögÀ
 ()

18 
	`ã°_¶ìp
 (5, 1);

19 
	}
}

22 
	$ã°_Æ¨m_mu…ùÀ
 ()

24 
	`ã°_¶ìp
 (5, 7);

25 
	}
}

28 
	s¶ìp_ã°


30 
öt64_t
 
	m°¨t
;

31 
	môî©i⁄s
;

34 
lock
 
	mouçut_lock
;

35 *
	mouçut_pos
;

39 
	s¶ìp_thªad


41 
¶ìp_ã°
 *
	mã°
;

42 
	mid
;

43 
	mduøti⁄
;

44 
	môî©i⁄s
;

47 
¶ì≥r
 (*);

51 
	$ã°_¶ìp
 (
thªad_˙t
, 
ôî©i⁄s
)

53 
¶ìp_ã°
 
ã°
;

54 
¶ìp_thªad
 *
thªads
;

55 *
ouçut
, *
›
;

56 
¥odu˘
;

57 
i
;

60 
	`ASSERT
 (!
thªad_mlfqs
);

62 
	`msg
 ("Cª©ög %dÅhªad†tÿ¶ì∞%dÅime†óch.", 
thªad_˙t
, 
ôî©i⁄s
);

63 
	`msg
 ("Thread 0 sleeps 10ÅicksÉachÅime,");

64 
	`msg
 ("thread 1 sleeps 20ÅicksÉachÅime,ánd so on.");

65 
	`msg
 ("If successful,Öroduct of iteration countánd");

66 
	`msg
 ("sleep duration willáppear inÇondescending order.");

69 
thªads
 = 
	`mÆloc
 ( *thªad†* 
thªad_˙t
);

70 
ouçut
 = 
	`mÆloc
 ( *ouçuà* 
ôî©i⁄s
 * 
thªad_˙t
 * 2);

71 i‡(
thªads
 =
NULL
 || 
ouçut
 == NULL)

72 
	`PANIC
 ("couldn'tállocate memory forÅest");

75 
ã°
.
°¨t
 = 
	`timî_ticks
 () + 100;

76 
ã°
.
ôî©i⁄s
 = iterations;

77 
	`lock_öô
 (&
ã°
.
ouçut_lock
);

78 
ã°
.
ouçut_pos
 = 
ouçut
;

81 
	`ASSERT
 (
ouçut
 !
NULL
);

82 
i
 = 0; i < 
thªad_˙t
; i++)

84 
¶ìp_thªad
 *
t
 = 
thªads
 + 
i
;

85 
«me
[16];

87 
t
->
ã°
 = &test;

88 
t
->
id
 = 
i
;

89 
t
->
duøti⁄
 = (
i
 + 1) * 10;

90 
t
->
ôî©i⁄s
 = 0;

92 
	`¢¥ötf
 (
«me
, Çame, "thªad %d", 
i
);

93 
	`thªad_¸óã
 (
«me
, 
PRI_DEFAULT
, 
¶ì≥r
, 
t
);

97 
	`timî_¶ìp
 (100 + 
thªad_˙t
 * 
ôî©i⁄s
 * 10 + 100);

101 
	`lock_acquúe
 (&
ã°
.
ouçut_lock
);

104 
¥odu˘
 = 0;

105 
›
 = 
ouçut
; o∞< 
ã°
.
ouçut_pos
; op++)

107 
¶ìp_thªad
 *
t
;

108 
√w_¥od
;

110 
	`ASSERT
 (*
›
 >0 && *› < 
thªad_˙t
);

111 
t
 = 
thªads
 + *
›
;

113 
√w_¥od
 = ++
t
->
ôî©i⁄s
 *Å->
duøti⁄
;

115 
	`msg
 ("thread %d: duration=%d, iteration=%d,Öroduct=%d",

116 
t
->
id
,Å->
duøti⁄
,Å->
ôî©i⁄s
, 
√w_¥od
);

118 i‡(
√w_¥od
 >
¥odu˘
)

119 
¥odu˘
 = 
√w_¥od
;

121 
	`Áû
 ("thread %d woke up out of order (%d > %d)!",

122 
t
->
id
, 
¥odu˘
, 
√w_¥od
);

126 
i
 = 0; i < 
thªad_˙t
; i++)

127 i‡(
thªads
[
i
].
ôî©i⁄s
 != iterations)

128 
	`Áû
 ("thread %d woke up %dÅimes instead of %d",

129 
i
, 
thªads
[i].
ôî©i⁄s
, iterations);

131 
	`lock_ªÀa£
 (&
ã°
.
ouçut_lock
);

132 
	`‰ì
 (
ouçut
);

133 
	`‰ì
 (
thªads
);

134 
	}
}

138 
	$¶ì≥r
 (*
t_
)

140 
¶ìp_thªad
 *
t
 = 
t_
;

141 
¶ìp_ã°
 *
ã°
 = 
t
->test;

142 
i
;

144 
i
 = 1; i <
ã°
->
ôî©i⁄s
; i++)

146 
öt64_t
 
¶ìp_u¡û
 = 
ã°
->
°¨t
 + 
i
 * 
t
->
duøti⁄
;

147 
	`timî_¶ìp
 (
¶ìp_u¡û
 - 
	`timî_ticks
 ());

148 
	`lock_acquúe
 (&
ã°
->
ouçut_lock
);

149 *
ã°
->
ouçut_pos
++ = 
t
->
id
;

150 
	`lock_ªÀa£
 (&
ã°
->
ouçut_lock
);

152 
	}
}

	@threads/alarm-zero.c

3 
	~<°dio.h
>

4 
	~"ã°s/thªads/ã°s.h
"

5 
	~"thªads/mÆloc.h
"

6 
	~"thªads/synch.h
"

7 
	~"thªads/thªad.h
"

8 
	~"devi˚s/timî.h
"

11 
	$ã°_Æ¨m_zîo
 ()

13 
	`timî_¶ìp
 (0);

14 
	`∑ss
 ();

15 
	}
}

	@threads/mlfqs-block.c

12 
	~<°dio.h
>

13 
	~"ã°s/thªads/ã°s.h
"

14 
	~"thªads/öô.h
"

15 
	~"thªads/mÆloc.h
"

16 
	~"thªads/synch.h
"

17 
	~"thªads/thªad.h
"

18 
	~"devi˚s/timî.h
"

20 
block_thªad
 (*
lock_
);

23 
	$ã°_mlfqs_block
 ()

25 
öt64_t
 
°¨t_time
;

26 
lock
Üock;

28 
	`ASSERT
 (
thªad_mlfqs
);

30 
	`msg
 ("MainÅhreadácquiringÜock.");

31 
	`lock_öô
 (&
lock
);

32 
	`lock_acquúe
 (&
lock
);

34 
	`msg
 ("MainÅhread creating blockÅhread, sleeping 25 seconds...");

35 
	`thªad_¸óã
 ("block", 
PRI_DEFAULT
, 
block_thªad
, &
lock
);

36 
	`timî_¶ìp
 (25 * 
TIMER_FREQ
);

38 
	`msg
 ("MainÅhread spinning for 5 seconds...");

39 
°¨t_time
 = 
	`timî_ticks
 ();

40 
	`timî_ñ≠£d
 (
°¨t_time
Ë< 5 * 
TIMER_FREQ
)

43 
	`msg
 ("MainÅhreadÑeleasingÜock.");

44 
	`lock_ªÀa£
 (&
lock
);

46 
	`msg
 ("BlockÅhread should haveálreadyácquiredÜock.");

47 
	}
}

50 
	$block_thªad
 (*
lock_
)

52 
lock
 *lock = 
lock_
;

53 
öt64_t
 
°¨t_time
;

55 
	`msg
 ("BlockÅhread spinning for 20 seconds...");

56 
°¨t_time
 = 
	`timî_ticks
 ();

57 
	`timî_ñ≠£d
 (
°¨t_time
Ë< 20 * 
TIMER_FREQ
)

60 
	`msg
 ("BlockÅhreadácquiringÜock...");

61 
	`lock_acquúe
 (
lock
);

63 
	`msg
 ("...got it.");

64 
	}
}

	@threads/mlfqs-fair.c

18 
	~<°dio.h
>

19 
	~<öây≥s.h
>

20 
	~"ã°s/thªads/ã°s.h
"

21 
	~"thªads/öô.h
"

22 
	~"thªads/mÆloc.h
"

23 
	~"thªads/∑Œoc.h
"

24 
	~"thªads/synch.h
"

25 
	~"thªads/thªad.h
"

26 
	~"devi˚s/timî.h
"

28 
ã°_mlfqs_Áú
 (
thªad_˙t
, 
ni˚_mö
, 
ni˚_°ï
);

31 
	$ã°_mlfqs_Áú_2
 ()

33 
	`ã°_mlfqs_Áú
 (2, 0, 0);

34 
	}
}

37 
	$ã°_mlfqs_Áú_20
 ()

39 
	`ã°_mlfqs_Áú
 (20, 0, 0);

40 
	}
}

43 
	$ã°_mlfqs_ni˚_2
 ()

45 
	`ã°_mlfqs_Áú
 (2, 0, 5);

46 
	}
}

49 
	$ã°_mlfqs_ni˚_10
 ()

51 
	`ã°_mlfqs_Áú
 (10, 0, 1);

52 
	}
}

54 
	#MAX_THREAD_CNT
 20

	)

56 
	sthªad_öfo


58 
öt64_t
 
	m°¨t_time
;

59 
	mtick_cou¡
;

60 
	mni˚
;

63 
lﬂd_thªad
 (*
aux
);

66 
	$ã°_mlfqs_Áú
 (
thªad_˙t
, 
ni˚_mö
, 
ni˚_°ï
)

68 
thªad_öfo
 
öfo
[
MAX_THREAD_CNT
];

69 
öt64_t
 
°¨t_time
;

70 
ni˚
;

71 
i
;

73 
	`ASSERT
 (
thªad_mlfqs
);

74 
	`ASSERT
 (
thªad_˙t
 <
MAX_THREAD_CNT
);

75 
	`ASSERT
 (
ni˚_mö
 >= -10);

76 
	`ASSERT
 (
ni˚_°ï
 >= 0);

77 
	`ASSERT
 (
ni˚_mö
 + 
ni˚_°ï
 * (
thªad_˙t
 - 1) <= 20);

79 
	`thªad_£t_ni˚
 (-20);

81 
°¨t_time
 = 
	`timî_ticks
 ();

82 
	`msg
 ("Sèπög %dÅhªads...", 
thªad_˙t
);

83 
ni˚
 = 
ni˚_mö
;

84 
i
 = 0; i < 
thªad_˙t
; i++)

86 
thªad_öfo
 *
ti
 = &
öfo
[
i
];

87 
«me
[16];

89 
ti
->
°¨t_time
 = start_time;

90 
ti
->
tick_cou¡
 = 0;

91 
ti
->
ni˚
 =Çice;

93 
	`¢¥ötf
(
«me
, Çame, "lﬂd %d", 
i
);

94 
	`thªad_¸óã
 (
«me
, 
PRI_DEFAULT
, 
lﬂd_thªad
, 
ti
);

96 
ni˚
 +
ni˚_°ï
;

98 
	`msg
 ("SèπögÅhªad†took %"
PRId64
"Åicks.", 
	`timî_ñ≠£d
 (
°¨t_time
));

100 
	`msg
 ("Sleeping 40 secondsÅoÜetÅhreadsÑun,Ölease wait...");

101 
	`timî_¶ìp
 (40 * 
TIMER_FREQ
);

103 
i
 = 0; i < 
thªad_˙t
; i++)

104 
	`msg
 ("Thªad %dÑe˚ived %dÅicks.", 
i
, 
öfo
[i].
tick_cou¡
);

105 
	}
}

108 
	$lﬂd_thªad
 (*
ti_
)

110 
thªad_öfo
 *
ti
 = 
ti_
;

111 
öt64_t
 
¶ìp_time
 = 5 * 
TIMER_FREQ
;

112 
öt64_t
 
•ö_time
 = 
¶ìp_time
 + 30 * 
TIMER_FREQ
;

113 
öt64_t
 
œ°_time
 = 0;

115 
	`thªad_£t_ni˚
 (
ti
->
ni˚
);

116 
	`timî_¶ìp
 (
¶ìp_time
 - 
	`timî_ñ≠£d
 (
ti
->
°¨t_time
));

117 
	`timî_ñ≠£d
 (
ti
->
°¨t_time
Ë< 
•ö_time
)

119 
öt64_t
 
cur_time
 = 
	`timî_ticks
 ();

120 i‡(
cur_time
 !
œ°_time
)

121 
ti
->
tick_cou¡
++;

122 
œ°_time
 = 
cur_time
;

124 
	}
}

	@threads/mlfqs-load-1.c

9 
	~<°dio.h
>

10 
	~"ã°s/thªads/ã°s.h
"

11 
	~"thªads/öô.h
"

12 
	~"thªads/mÆloc.h
"

13 
	~"thªads/synch.h
"

14 
	~"thªads/thªad.h
"

15 
	~"devi˚s/timî.h
"

18 
	$ã°_mlfqs_lﬂd_1
 ()

20 
öt64_t
 
°¨t_time
;

21 
ñ≠£d
;

22 
lﬂd_avg
;

24 
	`ASSERT
 (
thªad_mlfqs
);

26 
	`msg
 ("spinning for upÅo 45 seconds,Ölease wait...");

28 
°¨t_time
 = 
	`timî_ticks
 ();

31 
lﬂd_avg
 = 
	`thªad_gë_lﬂd_avg
 ();

32 
	`ASSERT
 (
lﬂd_avg
 >= 0);

33 
ñ≠£d
 = 
	`timî_ñ≠£d
 (
°¨t_time
Ë/ 
TIMER_FREQ
;

34 i‡(
lﬂd_avg
 > 100)

35 
	`Áû
 ("loadáverage is %d.%02d "

37 
lﬂd_avg
 / 100,Üﬂd_avg % 100, 
ñ≠£d
);

38 i‡(
lﬂd_avg
 > 50)

40 i‡(
ñ≠£d
 > 45)

41 
	`Áû
 ("loadáverage stayed below 0.5 for moreÅhan 45 seconds");

44 i‡(
ñ≠£d
 < 38)

45 
	`Áû
 ("lﬂdávîagêtook o∆y %d sec⁄d†tÿri£ábovê0.5", 
ñ≠£d
);

46 
	`msg
 ("lﬂdávîagêro£Åÿ0.5á·î %d sec⁄ds", 
ñ≠£d
);

48 
	`msg
 ("sleeping foránother 10 seconds,Ölease wait...");

49 
	`timî_¶ìp
 (
TIMER_FREQ
 * 10);

51 
lﬂd_avg
 = 
	`thªad_gë_lﬂd_avg
 ();

52 i‡(
lﬂd_avg
 < 0)

53 
	`Áû
 ("loadáverage fell below 0");

54 i‡(
lﬂd_avg
 > 50)

55 
	`Áû
 ("loadáverage stayedábove 0.5 for moreÅhan 10 seconds");

56 
	`msg
 ("loadáverage fell back below 0.5 (to %d.%02d)",

57 
lﬂd_avg
 / 100,Üoad_avg % 100);

59 
	`∑ss
 ();

60 
	}
}

	@threads/mlfqs-load-60.c

100 
	~<°dio.h
>

101 
	~"ã°s/thªads/ã°s.h
"

102 
	~"thªads/öô.h
"

103 
	~"thªads/mÆloc.h
"

104 
	~"thªads/synch.h
"

105 
	~"thªads/thªad.h
"

106 
	~"devi˚s/timî.h
"

108 
öt64_t
 
	g°¨t_time
;

110 
lﬂd_thªad
 (*
aux
);

112 
	#THREAD_CNT
 60

	)

115 
	$ã°_mlfqs_lﬂd_60
 ()

117 
i
;

119 
	`ASSERT
 (
thªad_mlfqs
);

121 
°¨t_time
 = 
	`timî_ticks
 ();

122 
	`msg
 ("Sèπög %dÇi˚dÜﬂdÅhªads...", 
THREAD_CNT
);

123 
i
 = 0; i < 
THREAD_CNT
; i++)

125 
«me
[16];

126 
	`¢¥ötf
(
«me
, Çame, "lﬂd %d", 
i
);

127 
	`thªad_¸óã
 (
«me
, 
PRI_DEFAULT
, 
lﬂd_thªad
, 
NULL
);

129 
	`msg
 ("StartingÅhreadsÅook %d seconds.",

130 
	`timî_ñ≠£d
 (
°¨t_time
Ë/ 
TIMER_FREQ
);

132 
i
 = 0; i < 90; i++)

134 
öt64_t
 
¶ìp_u¡û
 = 
°¨t_time
 + 
TIMER_FREQ
 * (2 * 
i
 + 10);

135 
lﬂd_avg
;

136 
	`timî_¶ìp
 (
¶ìp_u¡û
 - 
	`timî_ticks
 ());

137 
lﬂd_avg
 = 
	`thªad_gë_lﬂd_avg
 ();

138 
	`msg
 ("After %d seconds,Üoadáverage=%d.%02d.",

139 
i
 * 2, 
lﬂd_avg
 / 100,Üoad_avg % 100);

141 
	}
}

144 
	$lﬂd_thªad
 (*
aux
 
UNUSED
)

146 
öt64_t
 
¶ìp_time
 = 10 * 
TIMER_FREQ
;

147 
öt64_t
 
•ö_time
 = 
¶ìp_time
 + 60 * 
TIMER_FREQ
;

148 
öt64_t
 
exô_time
 = 
•ö_time
 + 60 * 
TIMER_FREQ
;

150 
	`thªad_£t_ni˚
 (20);

151 
	`timî_¶ìp
 (
¶ìp_time
 - 
	`timî_ñ≠£d
 (
°¨t_time
));

152 
	`timî_ñ≠£d
 (
°¨t_time
Ë< 
•ö_time
)

154 
	`timî_¶ìp
 (
exô_time
 - 
	`timî_ñ≠£d
 (
°¨t_time
));

155 
	}
}

	@threads/mlfqs-load-avg.c

111 
	~<°dio.h
>

112 
	~"ã°s/thªads/ã°s.h
"

113 
	~"thªads/öô.h
"

114 
	~"thªads/mÆloc.h
"

115 
	~"thªads/synch.h
"

116 
	~"thªads/thªad.h
"

117 
	~"devi˚s/timî.h
"

119 
öt64_t
 
	g°¨t_time
;

121 
lﬂd_thªad
 (*
£q_no
);

123 
	#THREAD_CNT
 60

	)

126 
	$ã°_mlfqs_lﬂd_avg
 ()

128 
i
;

130 
	`ASSERT
 (
thªad_mlfqs
);

132 
°¨t_time
 = 
	`timî_ticks
 ();

133 
	`msg
 ("Sèπög %dÜﬂdÅhªads...", 
THREAD_CNT
);

134 
i
 = 0; i < 
THREAD_CNT
; i++)

136 
«me
[16];

137 
	`¢¥ötf
(
«me
, Çame, "lﬂd %d", 
i
);

138 
	`thªad_¸óã
 (
«me
, 
PRI_DEFAULT
, 
lﬂd_thªad
, (*Ë
i
);

140 
	`msg
 ("StartingÅhreadsÅook %d seconds.",

141 
	`timî_ñ≠£d
 (
°¨t_time
Ë/ 
TIMER_FREQ
);

142 
	`thªad_£t_ni˚
 (-20);

144 
i
 = 0; i < 90; i++)

146 
öt64_t
 
¶ìp_u¡û
 = 
°¨t_time
 + 
TIMER_FREQ
 * (2 * 
i
 + 10);

147 
lﬂd_avg
;

148 
	`timî_¶ìp
 (
¶ìp_u¡û
 - 
	`timî_ticks
 ());

149 
lﬂd_avg
 = 
	`thªad_gë_lﬂd_avg
 ();

150 
	`msg
 ("After %d seconds,Üoadáverage=%d.%02d.",

151 
i
 * 2, 
lﬂd_avg
 / 100,Üoad_avg % 100);

153 
	}
}

156 
	$lﬂd_thªad
 (*
£q_no_
)

158 
£q_no
 = (Ë
£q_no_
;

159 
¶ìp_time
 = 
TIMER_FREQ
 * (10 + 
£q_no
);

160 
•ö_time
 = 
¶ìp_time
 + 
TIMER_FREQ
 * 
THREAD_CNT
;

161 
exô_time
 = 
TIMER_FREQ
 * (
THREAD_CNT
 * 2);

163 
	`timî_¶ìp
 (
¶ìp_time
 - 
	`timî_ñ≠£d
 (
°¨t_time
));

164 
	`timî_ñ≠£d
 (
°¨t_time
Ë< 
•ö_time
)

166 
	`timî_¶ìp
 (
exô_time
 - 
	`timî_ñ≠£d
 (
°¨t_time
));

167 
	}
}

	@threads/mlfqs-recent-1.c

98 
	~<°dio.h
>

99 
	~"ã°s/thªads/ã°s.h
"

100 
	~"thªads/öô.h
"

101 
	~"thªads/mÆloc.h
"

102 
	~"thªads/synch.h
"

103 
	~"thªads/thªad.h
"

104 
	~"devi˚s/timî.h
"

110 
	$ã°_mlfqs_ª˚¡_1
 ()

112 
öt64_t
 
°¨t_time
;

113 
œ°_ñ≠£d
 = 0;

115 
	`ASSERT
 (
thªad_mlfqs
);

119 
	`msg
 ("Sleeping 10 secondsÅoállowÑecent_cpuÅo decay,Ölease wait...");

120 
°¨t_time
 = 
	`timî_ticks
 ();

121 
	`timî_¶ìp
 (
	`DIV_ROUND_UP
 (
°¨t_time
, 
TIMER_FREQ
) - start_time

122 + 10 * 
TIMER_FREQ
);

124 
	`thªad_gë_ª˚¡_˝u
 () > 700);

126 
°¨t_time
 = 
	`timî_ticks
 ();

129 
ñ≠£d
 = 
	`timî_ñ≠£d
 (
°¨t_time
);

130 i‡(
ñ≠£d
 % (
TIMER_FREQ
 * 2Ë=0 &&Éœp£d > 
œ°_ñ≠£d
)

132 
ª˚¡_˝u
 = 
	`thªad_gë_ª˚¡_˝u
 ();

133 
lﬂd_avg
 = 
	`thªad_gë_lﬂd_avg
 ();

134 
ñ≠£d_£c⁄ds
 = 
ñ≠£d
 / 
TIMER_FREQ
;

135 
	`msg
 ("After %d seconds,Ñecent_cpu is %d.%02d,Üoad_avg is %d.%02d.",

136 
ñ≠£d_£c⁄ds
,

137 
ª˚¡_˝u
 / 100,Ñecent_cpu % 100,

138 
lﬂd_avg
 / 100,Üoad_avg % 100);

139 i‡(
ñ≠£d_£c⁄ds
 >= 180)

142 
œ°_ñ≠£d
 = 
ñ≠£d
;

144 
	}
}

	@threads/priority-change.c

5 
	~<°dio.h
>

6 
	~"ã°s/thªads/ã°s.h
"

7 
	~"thªads/öô.h
"

8 
	~"thªads/thªad.h
"

10 
thªad_func
 
	gch™gög_thªad
;

13 
	$ã°_¥i‹ôy_ch™ge
 ()

16 
	`ASSERT
 (!
thªad_mlfqs
);

18 
	`msg
 ("Creatingá high-priorityÅhread 2.");

19 
	`thªad_¸óã
 ("thªad 2", 
PRI_DEFAULT
 + 1, 
ch™gög_thªad
, 
NULL
);

20 
	`msg
 ("Thread 2 should have justÜowered itsÖriority.");

21 
	`thªad_£t_¥i‹ôy
 (
PRI_DEFAULT
 - 2);

22 
	`msg
 ("Thread 2 should have justÉxited.");

23 
	}
}

26 
	$ch™gög_thªad
 (*
aux
 
UNUSED
)

28 
	`msg
 ("Thread 2ÇowÜoweringÖriority.");

29 
	`thªad_£t_¥i‹ôy
 (
PRI_DEFAULT
 - 1);

30 
	`msg
 ("Thread 2Éxiting.");

31 
	}
}

	@threads/priority-condvar.c

4 
	~<°dio.h
>

5 
	~"ã°s/thªads/ã°s.h
"

6 
	~"thªads/öô.h
"

7 
	~"thªads/mÆloc.h
"

8 
	~"thªads/synch.h
"

9 
	~"thªads/thªad.h
"

10 
	~"devi˚s/timî.h
"

12 
thªad_func
 
	g¥i‹ôy_c⁄dv¨_thªad
;

13 
lock
 
	glock
;

14 
c⁄dôi⁄
 
	gc⁄dôi⁄
;

17 
	$ã°_¥i‹ôy_c⁄dv¨
 ()

19 
i
;

22 
	`ASSERT
 (!
thªad_mlfqs
);

24 
	`lock_öô
 (&
lock
);

25 
	`c⁄d_öô
 (&
c⁄dôi⁄
);

27 
	`thªad_£t_¥i‹ôy
 (
PRI_MIN
);

28 
i
 = 0; i < 10; i++)

30 
¥i‹ôy
 = 
PRI_DEFAULT
 - (
i
 + 7) % 10 - 1;

31 
«me
[16];

32 
	`¢¥ötf
 (
«me
, Çame, "¥i‹ôy %d", 
¥i‹ôy
);

33 
	`thªad_¸óã
 (
«me
, 
¥i‹ôy
, 
¥i‹ôy_c⁄dv¨_thªad
, 
NULL
);

36 
i
 = 0; i < 10; i++)

38 
	`lock_acquúe
 (&
lock
);

39 
	`msg
 ("Signaling...");

40 
	`c⁄d_sig«l
 (&
c⁄dôi⁄
, &
lock
);

41 
	`lock_ªÀa£
 (&
lock
);

43 
	}
}

46 
	$¥i‹ôy_c⁄dv¨_thªad
 (*
aux
 
UNUSED
)

48 
	`msg
 ("Thªad %†°¨tög.", 
	`thªad_«me
 ());

49 
	`lock_acquúe
 (&
lock
);

50 
	`c⁄d_waô
 (&
c⁄dôi⁄
, &
lock
);

51 
	`msg
 ("Thªad %†wokêup.", 
	`thªad_«me
 ());

52 
	`lock_ªÀa£
 (&
lock
);

53 
	}
}

	@threads/priority-donate-chain.c

27 
	~<°dio.h
>

28 
	~"ã°s/thªads/ã°s.h
"

29 
	~"thªads/öô.h
"

30 
	~"thªads/synch.h
"

31 
	~"thªads/thªad.h
"

33 
	#NESTING_DEPTH
 8

	)

35 
	slock_∑ú


37 
lock
 *
	m£c⁄d
;

38 
lock
 *
	mfú°
;

41 
thªad_func
 
	gd⁄‹_thªad_func
;

42 
thªad_func
 
	göãæ›î_thªad_func
;

45 
	$ã°_¥i‹ôy_d⁄©e_chaö
 ()

47 
i
;

48 
lock
 
locks
[
NESTING_DEPTH
 - 1];

49 
lock_∑ú
 
lock_∑ús
[
NESTING_DEPTH
];

52 
	`ASSERT
 (!
thªad_mlfqs
);

54 
	`thªad_£t_¥i‹ôy
 (
PRI_MIN
);

56 
i
 = 0; i < 
NESTING_DEPTH
 - 1; i++)

57 
	`lock_öô
 (&
locks
[
i
]);

59 
	`lock_acquúe
 (&
locks
[0]);

60 
	`msg
 ("%†gŸÜock.", 
	`thªad_«me
 ());

62 
i
 = 1; i < 
NESTING_DEPTH
; i++)

64 
«me
[16];

65 
thªad_¥i‹ôy
;

67 
	`¢¥ötf
 (
«me
, Çame, "thªad %d", 
i
);

68 
thªad_¥i‹ôy
 = 
PRI_MIN
 + 
i
 * 3;

69 
lock_∑ús
[
i
].
fú°
 = i < 
NESTING_DEPTH
 - 1 ? 
locks
 + i: 
NULL
;

70 
lock_∑ús
[
i
].
£c⁄d
 = 
locks
 + i - 1;

72 
	`thªad_¸óã
 (
«me
, 
thªad_¥i‹ôy
, 
d⁄‹_thªad_func
, 
lock_∑ús
 + 
i
);

73 
	`msg
 ("%s should haveÖriority %d. ActualÖriority: %d.",

74 
	`thªad_«me
 (), 
thªad_¥i‹ôy
, 
	`thªad_gë_¥i‹ôy
 ());

76 
	`¢¥ötf
 (
«me
, Çame, "öãæ›î %d", 
i
);

77 
	`thªad_¸óã
 (
«me
, 
thªad_¥i‹ôy
 - 1, 
öãæ›î_thªad_func
, 
NULL
);

80 
	`lock_ªÀa£
 (&
locks
[0]);

81 
	`msg
 ("%†föishög wôhÖri‹ôy %d.", 
	`thªad_«me
 (),

82 
	`thªad_gë_¥i‹ôy
 ());

83 
	}
}

86 
	$d⁄‹_thªad_func
 (*
locks_
)

88 
lock_∑ú
 *
locks
 = 
locks_
;

90 i‡(
locks
->
fú°
)

91 
	`lock_acquúe
 (
locks
->
fú°
);

93 
	`lock_acquúe
 (
locks
->
£c⁄d
);

94 
	`msg
 ("%†gŸÜock", 
	`thªad_«me
 ());

96 
	`lock_ªÀa£
 (
locks
->
£c⁄d
);

97 
	`msg
 ("%s should haveÖriority %d. ActualÖriority: %d",

98 
	`thªad_«me
 (), (
NESTING_DEPTH
 - 1) * 3,

99 
	`thªad_gë_¥i‹ôy
 ());

101 i‡(
locks
->
fú°
)

102 
	`lock_ªÀa£
 (
locks
->
fú°
);

104 
	`msg
 ("%†föishög wôhÖri‹ôy %d.", 
	`thªad_«me
 (),

105 
	`thªad_gë_¥i‹ôy
 ());

106 
	}
}

109 
	$öãæ›î_thªad_func
 (*
¨g_
 
UNUSED
)

111 
	`msg
 ("%†föished.", 
	`thªad_«me
 ());

112 
	}
}

	@threads/priority-donate-lower.c

7 
	~<°dio.h
>

8 
	~"ã°s/thªads/ã°s.h
"

9 
	~"thªads/öô.h
"

10 
	~"thªads/synch.h
"

11 
	~"thªads/thªad.h
"

13 
thªad_func
 
	gacquúe_thªad_func
;

16 
	$ã°_¥i‹ôy_d⁄©e_lowî
 ()

18 
lock
Üock;

21 
	`ASSERT
 (!
thªad_mlfqs
);

24 
	`ASSERT
 (
	`thªad_gë_¥i‹ôy
 (Ë=
PRI_DEFAULT
);

26 
	`lock_öô
 (&
lock
);

27 
	`lock_acquúe
 (&
lock
);

28 
	`thªad_¸óã
 ("acquúe", 
PRI_DEFAULT
 + 10, 
acquúe_thªad_func
, &
lock
);

29 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

30 
PRI_DEFAULT
 + 10, 
	`thªad_gë_¥i‹ôy
 ());

32 
	`msg
 ("Lowering baseÖriority...");

33 
	`thªad_£t_¥i‹ôy
 (
PRI_DEFAULT
 - 10);

34 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

35 
PRI_DEFAULT
 + 10, 
	`thªad_gë_¥i‹ôy
 ());

36 
	`lock_ªÀa£
 (&
lock
);

37 
	`msg
 ("acquire mustálready have finished.");

38 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

39 
PRI_DEFAULT
 - 10, 
	`thªad_gë_¥i‹ôy
 ());

40 
	}
}

43 
	$acquúe_thªad_func
 (*
lock_
)

45 
lock
 *lock = 
lock_
;

47 
	`lock_acquúe
 (
lock
);

48 
	`msg
 ("acquire: gotÅheÜock");

49 
	`lock_ªÀa£
 (
lock
);

50 
	`msg
 ("acquire: done");

51 
	}
}

	@threads/priority-donate-multiple.c

12 
	~<°dio.h
>

13 
	~"ã°s/thªads/ã°s.h
"

14 
	~"thªads/öô.h
"

15 
	~"thªads/synch.h
"

16 
	~"thªads/thªad.h
"

18 
thªad_func
 
	ga_thªad_func
;

19 
thªad_func
 
	gb_thªad_func
;

22 
	$ã°_¥i‹ôy_d⁄©e_mu…ùÀ
 ()

24 
lock
 
a
, 
b
;

27 
	`ASSERT
 (!
thªad_mlfqs
);

30 
	`ASSERT
 (
	`thªad_gë_¥i‹ôy
 (Ë=
PRI_DEFAULT
);

32 
	`lock_öô
 (&
a
);

33 
	`lock_öô
 (&
b
);

35 
	`lock_acquúe
 (&
a
);

36 
	`lock_acquúe
 (&
b
);

38 
	`thªad_¸óã
 ("a", 
PRI_DEFAULT
 + 1, 
a_thªad_func
, &
a
);

39 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

40 
PRI_DEFAULT
 + 1, 
	`thªad_gë_¥i‹ôy
 ());

42 
	`thªad_¸óã
 ("b", 
PRI_DEFAULT
 + 2, 
b_thªad_func
, &
b
);

43 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

44 
PRI_DEFAULT
 + 2, 
	`thªad_gë_¥i‹ôy
 ());

46 
	`lock_ªÀa£
 (&
b
);

47 
	`msg
 ("Thread b should have just finished.");

48 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

49 
PRI_DEFAULT
 + 1, 
	`thªad_gë_¥i‹ôy
 ());

51 
	`lock_ªÀa£
 (&
a
);

52 
	`msg
 ("Threadá should have just finished.");

53 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

54 
PRI_DEFAULT
, 
	`thªad_gë_¥i‹ôy
 ());

55 
	}
}

58 
	$a_thªad_func
 (*
lock_
)

60 
lock
 *lock = 
lock_
;

62 
	`lock_acquúe
 (
lock
);

63 
	`msg
 ("ThreadáácquiredÜocká.");

64 
	`lock_ªÀa£
 (
lock
);

65 
	`msg
 ("Threadá finished.");

66 
	}
}

69 
	$b_thªad_func
 (*
lock_
)

71 
lock
 *lock = 
lock_
;

73 
	`lock_acquúe
 (
lock
);

74 
	`msg
 ("Thread bácquiredÜock b.");

75 
	`lock_ªÀa£
 (
lock
);

76 
	`msg
 ("Thread b finished.");

77 
	}
}

	@threads/priority-donate-multiple2.c

17 
	~<°dio.h
>

18 
	~"ã°s/thªads/ã°s.h
"

19 
	~"thªads/öô.h
"

20 
	~"thªads/synch.h
"

21 
	~"thªads/thªad.h
"

23 
thªad_func
 
	ga_thªad_func
;

24 
thªad_func
 
	gb_thªad_func
;

25 
thªad_func
 
	gc_thªad_func
;

28 
	$ã°_¥i‹ôy_d⁄©e_mu…ùÀ2
 ()

30 
lock
 
a
, 
b
;

33 
	`ASSERT
 (!
thªad_mlfqs
);

36 
	`ASSERT
 (
	`thªad_gë_¥i‹ôy
 (Ë=
PRI_DEFAULT
);

38 
	`lock_öô
 (&
a
);

39 
	`lock_öô
 (&
b
);

41 
	`lock_acquúe
 (&
a
);

42 
	`lock_acquúe
 (&
b
);

44 
	`thªad_¸óã
 ("a", 
PRI_DEFAULT
 + 3, 
a_thªad_func
, &
a
);

45 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

46 
PRI_DEFAULT
 + 3, 
	`thªad_gë_¥i‹ôy
 ());

48 
	`thªad_¸óã
 ("c", 
PRI_DEFAULT
 + 1, 
c_thªad_func
, 
NULL
);

50 
	`thªad_¸óã
 ("b", 
PRI_DEFAULT
 + 5, 
b_thªad_func
, &
b
);

51 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

52 
PRI_DEFAULT
 + 5, 
	`thªad_gë_¥i‹ôy
 ());

54 
	`lock_ªÀa£
 (&
a
);

55 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

56 
PRI_DEFAULT
 + 5, 
	`thªad_gë_¥i‹ôy
 ());

58 
	`lock_ªÀa£
 (&
b
);

59 
	`msg
 ("Threads b,á, c should have just finished, inÅhat order.");

60 
	`msg
 ("MainÅhread should haveÖriority %d. ActualÖriority: %d.",

61 
PRI_DEFAULT
, 
	`thªad_gë_¥i‹ôy
 ());

62 
	}
}

65 
	$a_thªad_func
 (*
lock_
)

67 
lock
 *lock = 
lock_
;

69 
	`lock_acquúe
 (
lock
);

70 
	`msg
 ("ThreadáácquiredÜocká.");

71 
	`lock_ªÀa£
 (
lock
);

72 
	`msg
 ("Threadá finished.");

73 
	}
}

76 
	$b_thªad_func
 (*
lock_
)

78 
lock
 *lock = 
lock_
;

80 
	`lock_acquúe
 (
lock
);

81 
	`msg
 ("Thread bácquiredÜock b.");

82 
	`lock_ªÀa£
 (
lock
);

83 
	`msg
 ("Thread b finished.");

84 
	}
}

87 
	$c_thªad_func
 (*
a_
 
UNUSED
)

89 
	`msg
 ("Thread c finished.");

90 
	}
}

	@threads/priority-donate-nest.c

12 
	~<°dio.h
>

13 
	~"ã°s/thªads/ã°s.h
"

14 
	~"thªads/öô.h
"

15 
	~"thªads/synch.h
"

16 
	~"thªads/thªad.h
"

18 
	slocks


20 
lock
 *
	ma
;

21 
lock
 *
	mb
;

24 
thªad_func
 
	gmedium_thªad_func
;

25 
thªad_func
 
	ghigh_thªad_func
;

28 
	$ã°_¥i‹ôy_d⁄©e_√°
 ()

30 
lock
 
a
, 
b
;

31 
locks
Üocks;

34 
	`ASSERT
 (!
thªad_mlfqs
);

37 
	`ASSERT
 (
	`thªad_gë_¥i‹ôy
 (Ë=
PRI_DEFAULT
);

39 
	`lock_öô
 (&
a
);

40 
	`lock_öô
 (&
b
);

42 
	`lock_acquúe
 (&
a
);

44 
locks
.
a
 = &a;

45 
locks
.
b
 = &b;

46 
	`thªad_¸óã
 ("medium", 
PRI_DEFAULT
 + 1, 
medium_thªad_func
, &
locks
);

47 
	`thªad_yõld
 ();

48 
	`msg
 ("LowÅhread should haveÖriority %d. ActualÖriority: %d.",

49 
PRI_DEFAULT
 + 1, 
	`thªad_gë_¥i‹ôy
 ());

51 
	`thªad_¸óã
 ("high", 
PRI_DEFAULT
 + 2, 
high_thªad_func
, &
b
);

52 
	`thªad_yõld
 ();

53 
	`msg
 ("LowÅhread should haveÖriority %d. ActualÖriority: %d.",

54 
PRI_DEFAULT
 + 2, 
	`thªad_gë_¥i‹ôy
 ());

56 
	`lock_ªÀa£
 (&
a
);

57 
	`thªad_yõld
 ();

58 
	`msg
 ("MediumÅhread should just have finished.");

59 
	`msg
 ("LowÅhread should haveÖriority %d. ActualÖriority: %d.",

60 
PRI_DEFAULT
, 
	`thªad_gë_¥i‹ôy
 ());

61 
	}
}

64 
	$medium_thªad_func
 (*
locks_
)

66 
locks
 *lock†
locks_
;

68 
	`lock_acquúe
 (
locks
->
b
);

69 
	`lock_acquúe
 (
locks
->
a
);

71 
	`msg
 ("MediumÅhread should haveÖriority %d. ActualÖriority: %d.",

72 
PRI_DEFAULT
 + 2, 
	`thªad_gë_¥i‹ôy
 ());

73 
	`msg
 ("MediumÅhread gotÅheÜock.");

75 
	`lock_ªÀa£
 (
locks
->
a
);

76 
	`thªad_yõld
 ();

78 
	`lock_ªÀa£
 (
locks
->
b
);

79 
	`thªad_yõld
 ();

81 
	`msg
 ("HighÅhread should have just finished.");

82 
	`msg
 ("MiddleÅhread finished.");

83 
	}
}

86 
	$high_thªad_func
 (*
lock_
)

88 
lock
 *lock = 
lock_
;

90 
	`lock_acquúe
 (
lock
);

91 
	`msg
 ("HighÅhread gotÅheÜock.");

92 
	`lock_ªÀa£
 (
lock
);

93 
	`msg
 ("HighÅhread finished.");

94 
	}
}

	@threads/priority-donate-one.c

12 
	~<°dio.h
>

13 
	~"ã°s/thªads/ã°s.h
"

14 
	~"thªads/öô.h
"

15 
	~"thªads/synch.h
"

16 
	~"thªads/thªad.h
"

18 
thªad_func
 
	gacquúe1_thªad_func
;

19 
thªad_func
 
	gacquúe2_thªad_func
;

22 
	$ã°_¥i‹ôy_d⁄©e_⁄e
 ()

24 
lock
Üock;

27 
	`ASSERT
 (!
thªad_mlfqs
);

30 
	`ASSERT
 (
	`thªad_gë_¥i‹ôy
 (Ë=
PRI_DEFAULT
);

32 
	`lock_öô
 (&
lock
);

33 
	`lock_acquúe
 (&
lock
);

34 
	`thªad_¸óã
 ("acquúe1", 
PRI_DEFAULT
 + 1, 
acquúe1_thªad_func
, &
lock
);

35 
	`msg
 ("ThisÅhread should haveÖriority %d. ActualÖriority: %d.",

36 
PRI_DEFAULT
 + 1, 
	`thªad_gë_¥i‹ôy
 ());

37 
	`thªad_¸óã
 ("acquúe2", 
PRI_DEFAULT
 + 2, 
acquúe2_thªad_func
, &
lock
);

38 
	`msg
 ("ThisÅhread should haveÖriority %d. ActualÖriority: %d.",

39 
PRI_DEFAULT
 + 2, 
	`thªad_gë_¥i‹ôy
 ());

40 
	`lock_ªÀa£
 (&
lock
);

41 
	`msg
 ("acquire2,ácquire1 mustálready have finished, inÅhat order.");

42 
	`msg
 ("This should beÅheÜastÜine before finishingÅhisÅest.");

43 
	}
}

46 
	$acquúe1_thªad_func
 (*
lock_
)

48 
lock
 *lock = 
lock_
;

50 
	`lock_acquúe
 (
lock
);

51 
	`msg
 ("acquire1: gotÅheÜock");

52 
	`lock_ªÀa£
 (
lock
);

53 
	`msg
 ("acquire1: done");

54 
	}
}

57 
	$acquúe2_thªad_func
 (*
lock_
)

59 
lock
 *lock = 
lock_
;

61 
	`lock_acquúe
 (
lock
);

62 
	`msg
 ("acquire2: gotÅheÜock");

63 
	`lock_ªÀa£
 (
lock
);

64 
	`msg
 ("acquire2: done");

65 
	}
}

	@threads/priority-donate-sema.c

13 
	~<°dio.h
>

14 
	~"ã°s/thªads/ã°s.h
"

15 
	~"thªads/öô.h
"

16 
	~"thªads/synch.h
"

17 
	~"thªads/thªad.h
"

19 
	slock_™d_£ma


21 
lock
 
	mlock
;

22 
£m≠h‹e
 
	m£ma
;

25 
thªad_func
 
	gl_thªad_func
;

26 
thªad_func
 
	gm_thªad_func
;

27 
thªad_func
 
	gh_thªad_func
;

30 
	$ã°_¥i‹ôy_d⁄©e_£ma
 ()

32 
lock_™d_£ma
 
ls
;

35 
	`ASSERT
 (!
thªad_mlfqs
);

38 
	`ASSERT
 (
	`thªad_gë_¥i‹ôy
 (Ë=
PRI_DEFAULT
);

40 
	`lock_öô
 (&
ls
.
lock
);

41 
	`£ma_öô
 (&
ls
.
£ma
, 0);

42 
	`thªad_¸óã
 ("low", 
PRI_DEFAULT
 + 1, 
l_thªad_func
, &
ls
);

43 
	`thªad_¸óã
 ("med", 
PRI_DEFAULT
 + 3, 
m_thªad_func
, &
ls
);

44 
	`thªad_¸óã
 ("high", 
PRI_DEFAULT
 + 5, 
h_thªad_func
, &
ls
);

45 
	`£ma_up
 (&
ls
.
£ma
);

46 
	`msg
 ("MainÅhread finished.");

47 
	}
}

50 
	$l_thªad_func
 (*
ls_
)

52 
lock_™d_£ma
 *
ls
 = 
ls_
;

54 
	`lock_acquúe
 (&
ls
->
lock
);

55 
	`msg
 ("Thread LácquiredÜock.");

56 
	`£ma_down
 (&
ls
->
£ma
);

57 
	`msg
 ("Thread L downed semaphore.");

58 
	`lock_ªÀa£
 (&
ls
->
lock
);

59 
	`msg
 ("Thread L finished.");

60 
	}
}

63 
	$m_thªad_func
 (*
ls_
)

65 
lock_™d_£ma
 *
ls
 = 
ls_
;

67 
	`£ma_down
 (&
ls
->
£ma
);

68 
	`msg
 ("Thread M finished.");

69 
	}
}

72 
	$h_thªad_func
 (*
ls_
)

74 
lock_™d_£ma
 *
ls
 = 
ls_
;

76 
	`lock_acquúe
 (&
ls
->
lock
);

77 
	`msg
 ("Thread HácquiredÜock.");

79 
	`£ma_up
 (&
ls
->
£ma
);

80 
	`lock_ªÀa£
 (&
ls
->
lock
);

81 
	`msg
 ("Thread H finished.");

82 
	}
}

	@threads/priority-fifo.c

10 
	~<°dio.h
>

11 
	~"ã°s/thªads/ã°s.h
"

12 
	~"thªads/öô.h
"

13 
	~"devi˚s/timî.h
"

14 
	~"thªads/mÆloc.h
"

15 
	~"thªads/synch.h
"

16 
	~"thªads/thªad.h
"

18 
	ssim∂e_thªad_d©a


20 
	mid
;

21 
	môî©i⁄s
;

22 
lock
 *
	mlock
;

23 **
	m›
;

26 
	#THREAD_CNT
 16

	)

27 
	#ITER_CNT
 16

	)

29 
thªad_func
 
	gsim∂e_thªad_func
;

32 
	$ã°_¥i‹ôy_fifo
 ()

34 
sim∂e_thªad_d©a
 
d©a
[
THREAD_CNT
];

35 
lock
Üock;

36 *
ouçut
, *
›
;

37 
i
, 
˙t
;

40 
	`ASSERT
 (!
thªad_mlfqs
);

43 
	`ASSERT
 (
	`thªad_gë_¥i‹ôy
 (Ë=
PRI_DEFAULT
);

45 
	`msg
 ("%dÅhreads will iterate %dÅimes inÅhe same orderÉachÅime.",

46 
THREAD_CNT
, 
ITER_CNT
);

47 
	`msg
 ("IfÅhe order variesÅhenÅhere isá bug.");

49 
ouçut
 = 
›
 = 
	`mÆloc
 ( *ouçuà* 
THREAD_CNT
 * 
ITER_CNT
 * 2);

50 
	`ASSERT
 (
ouçut
 !
NULL
);

51 
	`lock_öô
 (&
lock
);

53 
	`thªad_£t_¥i‹ôy
 (
PRI_DEFAULT
 + 2);

54 
i
 = 0; i < 
THREAD_CNT
; i++)

56 
«me
[16];

57 
sim∂e_thªad_d©a
 *
d
 = 
d©a
 + 
i
;

58 
	`¢¥ötf
 (
«me
, Çame, "%d", 
i
);

59 
d
->
id
 = 
i
;

60 
d
->
ôî©i⁄s
 = 0;

61 
d
->
lock
 = &lock;

62 
d
->
›
 = &op;

63 
	`thªad_¸óã
 (
«me
, 
PRI_DEFAULT
 + 1, 
sim∂e_thªad_func
, 
d
);

66 
	`thªad_£t_¥i‹ôy
 (
PRI_DEFAULT
);

68 
	`ASSERT
 (
lock
.
hﬁdî
 =
NULL
);

70 
˙t
 = 0;

71 ; 
ouçut
 < 
›
; output++)

73 
sim∂e_thªad_d©a
 *
d
;

75 
	`ASSERT
 (*
ouçut
 >0 && *ouçuà< 
THREAD_CNT
);

76 
d
 = 
d©a
 + *
ouçut
;

77 i‡(
˙t
 % 
THREAD_CNT
 == 0)

78 
	`¥ötf
 ("(priority-fifo) iteration:");

79 
	`¥ötf
 (" %d", 
d
->
id
);

80 i‡(++
˙t
 % 
THREAD_CNT
 == 0)

81 
	`¥ötf
 ("\n");

82 
d
->
ôî©i⁄s
++;

84 
	}
}

87 
	$sim∂e_thªad_func
 (*
d©a_
)

89 
sim∂e_thªad_d©a
 *
d©a
 = 
d©a_
;

90 
i
;

92 
i
 = 0; i < 
ITER_CNT
; i++)

94 
	`lock_acquúe
 (
d©a
->
lock
);

95 *(*
d©a
->
›
)++ = d©a->
id
;

96 
	`lock_ªÀa£
 (
d©a
->
lock
);

97 
	`thªad_yõld
 ();

99 
	}
}

	@threads/priority-preempt.c

9 
	~<°dio.h
>

10 
	~"ã°s/thªads/ã°s.h
"

11 
	~"thªads/öô.h
"

12 
	~"thªads/synch.h
"

13 
	~"thªads/thªad.h
"

15 
thªad_func
 
	gsim∂e_thªad_func
;

18 
	$ã°_¥i‹ôy_¥ìm±
 ()

21 
	`ASSERT
 (!
thªad_mlfqs
);

24 
	`ASSERT
 (
	`thªad_gë_¥i‹ôy
 (Ë=
PRI_DEFAULT
);

26 
	`thªad_¸óã
 ("high-¥i‹ôy", 
PRI_DEFAULT
 + 1, 
sim∂e_thªad_func
, 
NULL
);

27 
	`msg
 ("The high-priorityÅhread should haveálready completed.");

28 
	}
}

31 
	$sim∂e_thªad_func
 (*
aux
 
UNUSED
)

33 
i
;

35 
i
 = 0; i < 5; i++)

37 
	`msg
 ("Thªad %†ôî©i⁄ %d", 
	`thªad_«me
 (), 
i
);

38 
	`thªad_yõld
 ();

40 
	`msg
 ("Thªad %†d⁄e!", 
	`thªad_«me
 ());

41 
	}
}

	@threads/priority-sema.c

4 
	~<°dio.h
>

5 
	~"ã°s/thªads/ã°s.h
"

6 
	~"thªads/öô.h
"

7 
	~"thªads/mÆloc.h
"

8 
	~"thªads/synch.h
"

9 
	~"thªads/thªad.h
"

10 
	~"devi˚s/timî.h
"

12 
thªad_func
 
	g¥i‹ôy_£ma_thªad
;

13 
£m≠h‹e
 
	g£ma
;

16 
	$ã°_¥i‹ôy_£ma
 ()

18 
i
;

21 
	`ASSERT
 (!
thªad_mlfqs
);

23 
	`£ma_öô
 (&
£ma
, 0);

24 
	`thªad_£t_¥i‹ôy
 (
PRI_MIN
);

25 
i
 = 0; i < 10; i++)

27 
¥i‹ôy
 = 
PRI_DEFAULT
 - (
i
 + 3) % 10 - 1;

28 
«me
[16];

29 
	`¢¥ötf
 (
«me
, Çame, "¥i‹ôy %d", 
¥i‹ôy
);

30 
	`thªad_¸óã
 (
«me
, 
¥i‹ôy
, 
¥i‹ôy_£ma_thªad
, 
NULL
);

33 
i
 = 0; i < 10; i++)

35 
	`£ma_up
 (&
£ma
);

36 
	`msg
 ("Back in mainÅhread.");

38 
	}
}

41 
	$¥i‹ôy_£ma_thªad
 (*
aux
 
UNUSED
)

43 
	`£ma_down
 (&
£ma
);

44 
	`msg
 ("Thªad %†wokêup.", 
	`thªad_«me
 ());

45 
	}
}

	@threads/tests.c

1 
	~"ã°s/thªads/ã°s.h
"

2 
	~<debug.h
>

3 
	~<°rög.h
>

4 
	~<°dio.h
>

6 
	sã°


8 c⁄° *
	m«me
;

9 
ã°_func
 *
	mfun˘i⁄
;

12 c⁄° 
ã°
 
	gã°s
[] =

14 {"Æ¨m-sögÀ", 
ã°_Æ¨m_sögÀ
},

15 {"Æ¨m-mu…ùÀ", 
ã°_Æ¨m_mu…ùÀ
},

16 {"Æ¨m-simu…™eous", 
ã°_Æ¨m_simu…™eous
},

17 {"Æ¨m-¥i‹ôy", 
ã°_Æ¨m_¥i‹ôy
},

18 {"Æ¨m-zîo", 
ã°_Æ¨m_zîo
},

19 {"Æ¨m-√g©ive", 
ã°_Æ¨m_√g©ive
},

20 {"¥i‹ôy-ch™ge", 
ã°_¥i‹ôy_ch™ge
},

21 {"¥i‹ôy-d⁄©e-⁄e", 
ã°_¥i‹ôy_d⁄©e_⁄e
},

22 {"¥i‹ôy-d⁄©e-mu…ùÀ", 
ã°_¥i‹ôy_d⁄©e_mu…ùÀ
},

23 {"¥i‹ôy-d⁄©e-mu…ùÀ2", 
ã°_¥i‹ôy_d⁄©e_mu…ùÀ2
},

24 {"¥i‹ôy-d⁄©e-√°", 
ã°_¥i‹ôy_d⁄©e_√°
},

25 {"¥i‹ôy-d⁄©e-£ma", 
ã°_¥i‹ôy_d⁄©e_£ma
},

26 {"¥i‹ôy-d⁄©e-lowî", 
ã°_¥i‹ôy_d⁄©e_lowî
},

27 {"¥i‹ôy-d⁄©e-chaö", 
ã°_¥i‹ôy_d⁄©e_chaö
},

28 {"¥i‹ôy-fifo", 
ã°_¥i‹ôy_fifo
},

29 {"¥i‹ôy-¥ìm±", 
ã°_¥i‹ôy_¥ìm±
},

30 {"¥i‹ôy-£ma", 
ã°_¥i‹ôy_£ma
},

31 {"¥i‹ôy-c⁄dv¨", 
ã°_¥i‹ôy_c⁄dv¨
},

32 {"mlfqs-lﬂd-1", 
ã°_mlfqs_lﬂd_1
},

33 {"mlfqs-lﬂd-60", 
ã°_mlfqs_lﬂd_60
},

34 {"mlfqs-lﬂd-avg", 
ã°_mlfqs_lﬂd_avg
},

35 {"mlfqs-ª˚¡-1", 
ã°_mlfqs_ª˚¡_1
},

36 {"mlfqs-Áú-2", 
ã°_mlfqs_Áú_2
},

37 {"mlfqs-Áú-20", 
ã°_mlfqs_Áú_20
},

38 {"mlfqs-ni˚-2", 
ã°_mlfqs_ni˚_2
},

39 {"mlfqs-ni˚-10", 
ã°_mlfqs_ni˚_10
},

40 {"mlfqs-block", 
ã°_mlfqs_block
},

43 c⁄° *
	gã°_«me
;

47 
	$run_ã°
 (c⁄° *
«me
)

49 c⁄° 
ã°
 *
t
;

51 
t
 = 
ã°s
;Å <Åests + Åests /  *tests;Å++)

52 i‡(!
	`°rcmp
 (
«me
, 
t
->name))

54 
ã°_«me
 = 
«me
;

55 
	`msg
 ("begin");

56 
t
->
	`fun˘i⁄
 ();

57 
	`msg
 ("end");

60 
	`PANIC
 ("nÿã°Çamed \"%s\"", 
«me
);

61 
	}
}

67 
	$msg
 (c⁄° *
f‹m©
, ...)

69 
va_li°
 
¨gs
;

71 
	`¥ötf
 ("(%sË", 
ã°_«me
);

72 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

73 
	`v¥ötf
 (
f‹m©
, 
¨gs
);

74 
	`va_íd
 (
¨gs
);

75 
	`putch¨
 ('\n');

76 
	}
}

83 
	$Áû
 (c⁄° *
f‹m©
, ...)

85 
va_li°
 
¨gs
;

87 
	`¥ötf
 ("(%sËFAIL: ", 
ã°_«me
);

88 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

89 
	`v¥ötf
 (
f‹m©
, 
¨gs
);

90 
	`va_íd
 (
¨gs
);

91 
	`putch¨
 ('\n');

93 
	`PANIC
 ("test failed");

94 
	}
}

98 
	$∑ss
 ()

100 
	`¥ötf
 ("(%sËPASS\n", 
ã°_«me
);

101 
	}
}

	@threads/tests.h

1 #i‚de‡
TESTS_THREADS_TESTS_H


2 
	#TESTS_THREADS_TESTS_H


	)

4 
run_ã°
 (const *);

6 
	tã°_func
 ();

8 
ã°_func
 
ã°_Æ¨m_sögÀ
;

9 
ã°_func
 
ã°_Æ¨m_mu…ùÀ
;

10 
ã°_func
 
ã°_Æ¨m_simu…™eous
;

11 
ã°_func
 
ã°_Æ¨m_¥i‹ôy
;

12 
ã°_func
 
ã°_Æ¨m_zîo
;

13 
ã°_func
 
ã°_Æ¨m_√g©ive
;

14 
ã°_func
 
ã°_¥i‹ôy_ch™ge
;

15 
ã°_func
 
ã°_¥i‹ôy_d⁄©e_⁄e
;

16 
ã°_func
 
ã°_¥i‹ôy_d⁄©e_mu…ùÀ
;

17 
ã°_func
 
ã°_¥i‹ôy_d⁄©e_mu…ùÀ2
;

18 
ã°_func
 
ã°_¥i‹ôy_d⁄©e_£ma
;

19 
ã°_func
 
ã°_¥i‹ôy_d⁄©e_√°
;

20 
ã°_func
 
ã°_¥i‹ôy_d⁄©e_lowî
;

21 
ã°_func
 
ã°_¥i‹ôy_d⁄©e_chaö
;

22 
ã°_func
 
ã°_¥i‹ôy_fifo
;

23 
ã°_func
 
ã°_¥i‹ôy_¥ìm±
;

24 
ã°_func
 
ã°_¥i‹ôy_£ma
;

25 
ã°_func
 
ã°_¥i‹ôy_c⁄dv¨
;

26 
ã°_func
 
ã°_mlfqs_lﬂd_1
;

27 
ã°_func
 
ã°_mlfqs_lﬂd_60
;

28 
ã°_func
 
ã°_mlfqs_lﬂd_avg
;

29 
ã°_func
 
ã°_mlfqs_ª˚¡_1
;

30 
ã°_func
 
ã°_mlfqs_Áú_2
;

31 
ã°_func
 
ã°_mlfqs_Áú_20
;

32 
ã°_func
 
ã°_mlfqs_ni˚_2
;

33 
ã°_func
 
ã°_mlfqs_ni˚_10
;

34 
ã°_func
 
ã°_mlfqs_block
;

36 
msg
 (const *, ...);

37 
Áû
 (const *, ...);

38 
∑ss
 ();

	@userprog/args.c

6 
	~"ã°s/lib.h
"

9 
	$maö
 (
¨gc
, *
¨gv
[])

11 
i
;

13 
ã°_«me
 = "args";

15 
	`msg
 ("begin");

16 
	`msg
 ("¨g¯%d", 
¨gc
);

17 
i
 = 0; i <
¨gc
; i++)

18 i‡(
¨gv
[
i
] !
NULL
)

19 
	`msg
 ("¨gv[%d] = '%s'", 
i
, 
¨gv
[i]);

21 
	`msg
 ("¨gv[%d] =ÇuŒ", 
i
);

22 
	`msg
 ("end");

25 
	}
}

	@userprog/bad-jump.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`msg
 ("Congratulations - you have successfully called NULL: %d",

11 (((*)())
NULL
)());

12 
	`Áû
 ("should haveÉxited with -1");

13 
	}
}

	@userprog/bad-jump2.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`msg
 ("Congratulations - you have successfully called kernel code: %d",

12 
	`Áû
 ("should haveÉxited with -1");

13 
	}
}

	@userprog/bad-read.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`msg
 ("Congratulations - you have successfully dereferenced NULL: %d",

11 *(*)
NULL
);

12 
	`Áû
 ("should haveÉxited with -1");

13 
	}
}

	@userprog/bad-read2.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`msg
 ("Congratulations - you have successfullyÑead kernel memory: %d",

12 
	`Áû
 ("should haveÉxited with -1");

13 
	}
}

	@userprog/bad-write.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 *(*)
NULL
 = 42;

11 
	`Áû
 ("should haveÉxited with -1");

12 
	}
}

	@userprog/bad-write2.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

11 
	`Áû
 ("should haveÉxited with -1");

12 
	}
}

	@userprog/boundary.c

5 
	~<öây≥s.h
>

6 
	~<round.h
>

7 
	~<°rög.h
>

8 
	~"ã°s/u£Ωrog/bound¨y.h
"

10 
	gd°
[8192];

15 
	$gë_bound¨y_¨ó
 ()

17 *
p
 = (*Ë
	`ROUND_UP
 ((
uöçå_t
Ë
d°
, 4096);

18 i‡(
p
 - 
d°
 < 2048)

19 
p
 += 4096;

20  
p
;

21 
	}
}

26 
	$c›y_°rög_a¸oss_bound¨y
 (c⁄° *
§c
)

28 *
p
 = 
	`gë_bound¨y_¨ó
 ();

29 
p
 -
	`°æí
 (
§c
) < 4096 ? strlen (src) / 2 : 4096;

30 
	`°æ˝y
 (
p
, 
§c
, 4096);

31  
p
;

32 
	}
}

	@userprog/boundary.h

1 #i‚de‡
TESTS_USERPROG_BOUNDARY_H


2 
	#TESTS_USERPROG_BOUNDARY_H


	)

4 *
gë_bound¨y_¨ó
 ();

5 *
c›y_°rög_a¸oss_bound¨y
 (const *);

	@userprog/child-bad.c

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
asm
 volatile ("movl $0x20101234, %esp; int $0x30");

13 
	`Áû
 ("should haveÉxited with -1");

14 
	}
}

	@userprog/child-close.c

10 
	~<˘y≥.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<sysˇŒ.h
>

14 
	~"ã°s/lib.h
"

16 c⁄° *
	gã°_«me
 = "child-close";

19 
	$maö
 (
¨gc
 
UNUSED
, *
¨gv
[])

21 
	`msg
 ("begin");

22 i‡(!
	`isdigô
 (*
¨gv
[1]))

23 
	`Áû
 ("bad command-lineárguments");

24 
	`˛o£
 (
	`©oi
 (
¨gv
[1]));

25 
	`msg
 ("end");

28 
	}
}

	@userprog/child-rox.c

7 
	~<˘y≥.h
>

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<sysˇŒ.h
>

11 
	~"ã°s/lib.h
"

13 c⁄° *
	gã°_«me
 = "child-rox";

16 
	$åy_wrôe
 ()

18 
h™dÀ
;

19 
buf„r
[19];

21 
quõt
 = 
åue
;

22 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("child-rox")) > 1, "open \"child-rox\"");

23 
quõt
 = 
Ál£
;

25 
	`CHECK
 (
	`wrôe
 (
h™dÀ
, 
buf„r
,  buffer) == 0,

28 
	`˛o£
 (
h™dÀ
);

29 
	}
}

32 
	$maö
 (
¨gc
 
UNUSED
, *
¨gv
[])

34 
	`msg
 ("begin");

35 
	`åy_wrôe
 ();

37 i‡(!
	`isdigô
 (*
¨gv
[1]))

38 
	`Áû
 ("bad command-lineárguments");

39 i‡(
	`©oi
 (
¨gv
[1]) > 1)

41 
cmd
[128];

42 
chûd
;

44 
	`¢¥ötf
 (
cmd
,  cmd, "chûd-rox %d", 
	`©oi
 (
¨gv
[1]) - 1);

45 
	`CHECK
 ((
chûd
 = 
	`exec
 (
cmd
)) != -1, "exec \"%s\"", cmd);

46 
quõt
 = 
åue
;

47 
	`CHECK
 (
	`waô
 (
chûd
) == 12, "wait for \"child-rox\"");

48 
quõt
 = 
Ál£
;

51 
	`åy_wrôe
 ();

52 
	`msg
 ("end");

55 
	}
}

	@userprog/child-simple.c

5 
	~<°dio.h
>

6 
	~"ã°s/lib.h
"

8 c⁄° *
	gã°_«me
 = "child-simple";

11 
	$maö
 ()

13 
	`msg
 ("run");

15 
	}
}

	@userprog/close-bad-fd.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`˛o£
 (0x20101234);

11 
	}
}

	@userprog/close-normal.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
h™dÀ
;

11 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

12 
	`msg
 ("close \"sample.txt\"");

13 
	`˛o£
 (
h™dÀ
);

14 
	}
}

	@userprog/close-stdin.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`˛o£
 (0);

11 
	}
}

	@userprog/close-stdout.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`˛o£
 (1);

11 
	}
}

	@userprog/close-twice.c

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
h™dÀ
;

13 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

14 
	`msg
 ("close \"sample.txt\"");

15 
	`˛o£
 (
h™dÀ
);

16 
	`msg
 ("close \"sample.txt\"ágain");

17 
	`˛o£
 (
h™dÀ
);

18 
	}
}

	@userprog/create-bad-ptr.c

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`msg
 ("¸óã(0x20101234): %d", 
	`¸óã
 ((*) 0x20101234, 0));

12 
	}
}

	@userprog/create-bound.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/u£Ωrog/bound¨y.h
"

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
	`msg
 ("create(\"quux.dat\"): %d",

13 
	`¸óã
 (
	`c›y_°rög_a¸oss_bound¨y
 ("quux.dat"), 0));

14 
	}
}

	@userprog/create-empty.c

3 
	~"ã°s/lib.h
"

4 
	~"ã°s/maö.h
"

7 
	$ã°_maö
 ()

9 
	`msg
 ("¸óã(\"\"): %d", 
	`¸óã
 ("", 0));

10 
	}
}

	@userprog/create-exists.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`CHECK
 (
	`¸óã
 ("quux.dat", 0), "create quux.dat");

12 
	`CHECK
 (
	`¸óã
 ("warble.dat", 0), "create warble.dat");

13 
	`CHECK
 (!
	`¸óã
 ("quux.dat", 0), "tryÅoÑe-create quux.dat");

14 
	`CHECK
 (
	`¸óã
 ("baffle.dat", 0), "create baffle.dat");

15 
	`CHECK
 (!
	`¸óã
 ("warble.dat", 0), "tryÅoÑe-create quux.dat");

16 
	}
}

	@userprog/create-long.c

4 
	~<°rög.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
«me
[512];

13 
	`mem£t
 (
«me
, 'x', Çame);

14 
«me
[Çame - 1] = '\0';

16 
	`msg
 ("¸óã(\"x...\"): %d", 
	`¸óã
 (
«me
, 0));

17 
	}
}

	@userprog/create-normal.c

3 
	~"ã°s/lib.h
"

4 
	~"ã°s/maö.h
"

7 
	$ã°_maö
 ()

9 
	`CHECK
 (
	`¸óã
 ("quux.dat", 0), "create quux.dat");

10 
	}
}

	@userprog/create-null.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`msg
 ("¸óã(NULL): %d", 
	`¸óã
 (
NULL
, 0));

11 
	}
}

	@userprog/exec-arg.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/maö.h
"

7 
	$ã°_maö
 ()

9 
	`waô
 (
	`exec
 ("child-args childarg"));

10 
	}
}

	@userprog/exec-bad-ptr.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`exec
 ((*) 0x20101234);

11 
	}
}

	@userprog/exec-missing.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`msg
 ("exec(\"no-such-fûe\"): %d", 
	`exec
 ("no-such-file"));

12 
	}
}

	@userprog/exec-multiple.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`waô
 (
	`exec
 ("child-simple"));

11 
	`waô
 (
	`exec
 ("child-simple"));

12 
	`waô
 (
	`exec
 ("child-simple"));

13 
	`waô
 (
	`exec
 ("child-simple"));

14 
	}
}

	@userprog/exec-once.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`waô
 (
	`exec
 ("child-simple"));

11 
	}
}

	@userprog/exit.c

3 
	~"ã°s/lib.h
"

4 
	~"ã°s/maö.h
"

7 
	$ã°_maö
 ()

9 
	`exô
 (57);

10 
	`Áû
 ("should have calledÉxit(57)");

11 
	}
}

	@userprog/halt.c

3 
	~"ã°s/lib.h
"

4 
	~"ã°s/maö.h
"

7 
	$ã°_maö
 ()

9 
	`hÆt
 ();

10 
	`Áû
 ("should have halted");

11 
	}
}

	@userprog/multi-child-fd.c

6 
	~<°dio.h
>

7 
	~<sysˇŒ.h
>

8 
	~"ã°s/u£Ωrog/ßm∂e.öc
"

9 
	~"ã°s/lib.h
"

10 
	~"ã°s/maö.h
"

13 
	$ã°_maö
 ()

15 
chûd_cmd
[128];

16 
h™dÀ
;

18 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

20 
	`¢¥ötf
 (
chûd_cmd
,  chûd_cmd, "chûd-˛o£ %d", 
h™dÀ
);

22 
	`msg
 ("waô”xec()Ë%d", 
	`waô
 (
	`exec
 (
chûd_cmd
)));

24 
	`check_fûe_h™dÀ
 (
h™dÀ
, "ßm∂e.txt", 
ßm∂e
,  sample - 1);

25 
	}
}

	@userprog/multi-recurse.c

4 
	~<debug.h
>

5 
	~<°dlib.h
>

6 
	~<°dio.h
>

7 
	~<sysˇŒ.h
>

8 
	~"ã°s/lib.h
"

10 c⁄° *
	gã°_«me
 = "multi-recurse";

13 
	$maö
 (
¨gc
 
UNUSED
, *
¨gv
[])

15 
n
 = 
	`©oi
 (
¨gv
[1]);

17 
	`msg
 ("begö %d", 
n
);

18 i‡(
n
 != 0)

20 
chûd_cmd
[128];

21 
pid_t
 
chûd_pid
;

22 
code
;

24 
	`¢¥ötf
 (
chûd_cmd
,  chûd_cmd, "mu…i-ªcur£ %d", 
n
 - 1);

25 
	`CHECK
 ((
chûd_pid
 = 
	`exec
 (
chûd_cmd
)) != -1, "exec(\"%s\")", child_cmd);

27 
code
 = 
	`waô
 (
chûd_pid
);

28 i‡(
code
 !
n
 - 1)

29 
	`Áû
 ("waô”xec(\"%s\")Ëªtu∫ed %d", 
chûd_cmd
, 
code
);

32 
	`msg
 ("íd %d", 
n
);

33  
n
;

34 
	}
}

	@userprog/no-vm/multi-oom.c

18 
	~<debug.h
>

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

22 
	~<°dboﬁ.h
>

23 
	~<sysˇŒ.h
>

24 
	~<øndom.h
>

25 
	~"ã°s/lib.h
"

27 c⁄° 
	gEXPECTED_DEPTH_TO_PASS
 = 30;

28 c⁄° 
	gEXPECTED_REPETITIONS
 = 10;

30 c⁄° *
	gã°_«me
 = "multi-oom";

32 
	echûd_ãrmö©i⁄_mode
 { 
	mRECURSE
, 
	mCRASH
 };

36 
pid_t


37 
	$•awn_chûd
 (
c
, 
chûd_ãrmö©i⁄_mode
 
mode
)

39 
chûd_cmd
[128];

40 
	`¢¥ötf
 (
chûd_cmd
,  child_cmd,

41 "%†%d %s", 
ã°_«me
, 
c
, 
mode
 =
CRASH
 ? "-k" : "");

42  
	`exec
 (
chûd_cmd
);

43 
	}
}

49 
	$c⁄sume_some_ªsour˚s
 ()

51 
fd
, 
fdmax
 = 126;

58 
fd
 = 0; fd < 
fdmax
; fd++)

59 i‡(
	`›í
 (
ã°_«me
) == -1)

61 
	}
}

65 
NO_INLINE


66 
	$c⁄sume_some_ªsour˚s_™d_dõ
 (
£ed
)

68 
	`c⁄sume_some_ªsour˚s
 ();

69 
	`øndom_öô
 (
£ed
);

70 *
PHYS_BASE
 = (*)0xC0000000;

72 
	`øndom_ul⁄g
 () % 5)

75 *(*Ë
NULL
 = 42;

78  *(*Ë
NULL
;

81  *
PHYS_BASE
;

84 *
PHYS_BASE
 = 42;

87 
	`›í
 ((*)
PHYS_BASE
);

88 
	`exô
 (-1);

91 
	`NOT_REACHED
 ();

94 
	}
}

106 
	$maö
 (
¨gc
, *
¨gv
[])

108 
n
;

110 
n
 = 
¨gc
 > 1 ? 
	`©oi
 (
¨gv
[1]) : 0;

111 
boﬁ
 
is_©_roŸ
 = (
n
 == 0);

112 i‡(
is_©_roŸ
)

113 
	`msg
 ("begin");

116 i‡(
¨gc
 > 2 && !
	`°rcmp
(
¨gv
[2], "-k"))

118 
	`c⁄sume_some_ªsour˚s_™d_dõ
 (
n
);

119 
	`NOT_REACHED
 ();

122 
howm™y
 = 
is_©_roŸ
 ? 
EXPECTED_REPETITIONS
 : 1;

123 
i
, 
ex≥˘ed_dïth
 = -1;

125 
i
 = 0; i < 
howm™y
; i++)

127 
pid_t
 
chûd_pid
;

132 i‡(
n
 > 
EXPECTED_DEPTH_TO_PASS
/2)

134 
chûd_pid
 = 
	`•awn_chûd
 (
n
 + 1, 
CRASH
);

135 i‡(
chûd_pid
 != -1)

137 i‡(
	`waô
 (
chûd_pid
) != -1)

138 
	`Áû
 ("crashed child shouldÑeturn -1.");

145 
chûd_pid
 = 
	`•awn_chûd
 (
n
 + 1, 
RECURSE
);

148 i‡(
chûd_pid
 == -1)

149  
n
;

152 
ªached_dïth
 = 
	`waô
 (
chûd_pid
);

153 i‡(
ªached_dïth
 == -1)

154 
	`Áû
 ("waitÑeturned -1.");

159 i‡(
i
 == 0)

160 
ex≥˘ed_dïth
 = 
ªached_dïth
;

161 i‡(
ex≥˘ed_dïth
 !
ªached_dïth
)

162 
	`Áû
 ("afterÑun %d/%d,Éxpected depth %d,áctual depth %d.",

163 
i
, 
howm™y
, 
ex≥˘ed_dïth
, 
ªached_dïth
);

164 
	`ASSERT
 (
ex≥˘ed_dïth
 =
ªached_dïth
);

167 
	`c⁄sume_some_ªsour˚s
 ();

169 i‡(
n
 == 0)

171 i‡(
ex≥˘ed_dïth
 < 
EXPECTED_DEPTH_TO_PASS
)

172 
	`Áû
 ("should havêf‹kedáàÀa° %dÅimes.", 
EXPECTED_DEPTH_TO_PASS
);

173 
	`msg
 ("suc˚ss.Örogøm f‹ked %dÅimes.", 
howm™y
);

174 
	`msg
 ("end");

177  
ex≥˘ed_dïth
;

178 
	}
}

	@userprog/open-bad-ptr.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`msg
 ("›í(0x20101234): %d", 
	`›í
 ((*) 0x20101234));

12 
	`Áû
 ("should have calledÉxit(-1)");

13 
	}
}

	@userprog/open-boundary.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/u£Ωrog/bound¨y.h
"

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
	`CHECK
 (
	`›í
 (
	`c›y_°rög_a¸oss_bound¨y
 ("sample.txt")) > 1,

14 
	}
}

	@userprog/open-empty.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
h™dÀ
 = 
	`›í
 ("");

11 i‡(
h™dÀ
 != -1)

12 
	`Áû
 ("›í(Ëªtu∫ed %d in°ód o‡-1", 
h™dÀ
);

13 
	}
}

	@userprog/open-missing.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
h™dÀ
 = 
	`›í
 ("no-such-file");

11 i‡(
h™dÀ
 != -1)

12 
	`Áû
 ("›í(Ëªtu∫ed %d", 
h™dÀ
);

13 
	}
}

	@userprog/open-normal.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
h™dÀ
 = 
	`›í
 ("sample.txt");

11 i‡(
h™dÀ
 < 2)

12 
	`Áû
 ("›í(Ëªtu∫ed %d", 
h™dÀ
);

13 
	}
}

	@userprog/open-null.c

4 
	~<°ddef.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
	`›í
 (
NULL
);

12 
	}
}

	@userprog/open-twice.c

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
h1
 = 
	`›í
 ("sample.txt");

13 
h2
 = 
	`›í
 ("sample.txt");

15 
	`CHECK
 ((
h1
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\" once");

16 
	`CHECK
 ((
h2
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"ágain");

17 i‡(
h1
 =
h2
)

18 
	`Áû
 ("›í(Ëªtu∫ed %d bŸhÅimes", 
h1
);

19 
	}
}

	@userprog/read-bad-fd.c

5 
	~<limôs.h
>

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 
buf
;

14 
	`ªad
 (0x20101234, &
buf
, 1);

15 
	`ªad
 (5, &
buf
, 1);

16 
	`ªad
 (1234, &
buf
, 1);

17 
	`ªad
 (-1, &
buf
, 1);

18 
	`ªad
 (-1024, &
buf
, 1);

19 
	`ªad
 (
INT_MIN
, &
buf
, 1);

20 
	`ªad
 (
INT_MAX
, &
buf
, 1);

21 
	}
}

	@userprog/read-bad-ptr.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
h™dÀ
;

12 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

14 
	`ªad
 (
h™dÀ
, (*) 0xc0100000, 123);

15 
	`Áû
 ("shouldÇot have survivedÑead()");

16 
	}
}

	@userprog/read-boundary.c

4 
	~<°rög.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/u£Ωrog/bound¨y.h
"

7 
	~"ã°s/u£Ωrog/ßm∂e.öc
"

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

12 
	$ã°_maö
 ()

14 
h™dÀ
;

15 
byã_˙t
;

16 *
buf„r
;

18 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

20 
buf„r
 = 
	`gë_bound¨y_¨ó
 (Ë-  
ßm∂e
 / 2;

21 
byã_˙t
 = 
	`ªad
 (
h™dÀ
, 
buf„r
,  
ßm∂e
 - 1);

22 i‡(
byã_˙t
 ! 
ßm∂e
 - 1)

23 
	`Áû
 ("ªad(Ëªtu∫ed %d in°ód o‡%zu", 
byã_˙t
,  
ßm∂e
 - 1);

24 i‡(
	`°rcmp
 (
ßm∂e
, 
buf„r
))

26 
	`msg
 ("ex≥˘edÅext:\n%s", 
ßm∂e
);

27 
	`msg
 ("ãxàa˘uÆlyÑód:\n%s", 
buf„r
);

28 
	`Áû
 ("expectedÅext differs fromáctual");

30 
	}
}

	@userprog/read-normal.c

3 
	~"ã°s/u£Ωrog/ßm∂e.öc
"

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`check_fûe
 ("ßm∂e.txt", 
ßm∂e
,  sample - 1);

11 
	}
}

	@userprog/read-stdout.c

5 
	~<°dio.h
>

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
buf
;

13 
	`ªad
 (
STDOUT_FILENO
, &
buf
, 1);

14 
	}
}

	@userprog/read-zero.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
h™dÀ
, 
byã_˙t
;

12 
buf
;

14 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

16 
buf
 = 123;

17 
byã_˙t
 = 
	`ªad
 (
h™dÀ
, &
buf
, 0);

18 i‡(
byã_˙t
 != 0)

19 
	`Áû
 ("ªad(Ëªtu∫ed %d in°ód o‡0", 
byã_˙t
);

20 i‡(
buf
 != 123)

21 
	`Áû
 ("0-byteÑead() modified buffer");

22 
	}
}

	@userprog/rox-child.c

4 
	#CHILD_CNT
 "1"

	)

5 
	~"ã°s/u£Ωrog/rox-chûd.öc
"

	@userprog/rox-multichild.c

4 
	#CHILD_CNT
 "5"

	)

5 
	~"ã°s/u£Ωrog/rox-chûd.öc
"

	@userprog/rox-simple.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
h™dÀ
;

12 
buf„r
[16];

14 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("rox-simple")) > 1, "open \"rox-simple\"");

15 
	`CHECK
 (
	`ªad
 (
h™dÀ
, 
buf„r
,  buffer) == ()  buffer,

17 
	`CHECK
 (
	`wrôe
 (
h™dÀ
, 
buf„r
,  buffer) == 0,

19 
	}
}

	@userprog/sc-bad-arg.c

7 
	~<sysˇŒ-ƒ.h
>

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

12 
	$ã°_maö
 ()

14 
asm
 volatile ("movl $0xbffffffc, %%esp; movl %0, (%%esp); int $0x30"

15 : : "i" (
SYS_EXIT
));

16 
	`Áû
 ("should have calledÉxit(-1)");

17 
	}
}

	@userprog/sc-bad-sp.c

12 
	~"ã°s/lib.h
"

13 
	~"ã°s/maö.h
"

16 
	$ã°_maö
 ()

18 
asm
 volatile ("movl $.-(64*1024*1024), %esp; int $0x30");

19 
	`Áû
 ("should have calledÉxit(-1)");

20 
	}
}

	@userprog/sc-boundary-2.c

5 
	~<sysˇŒ-ƒ.h
>

6 
	~"ã°s/u£Ωrog/bound¨y.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

15 *
p
 = (*Ë((*Ë
	`gë_bound¨y_¨ó
 () - 7);

16 
p
[0] = 
SYS_EXIT
;

17 
p
[1] = 67;

20 
asm
 vﬁ©ûê("mov»%0, %%e•; i¡ $0x30" : : "g" (
p
));

21 
	`Áû
 ("should have calledÉxit(67)");

22 
	}
}

	@userprog/sc-boundary.c

4 
	~<sysˇŒ-ƒ.h
>

5 
	~"ã°s/u£Ωrog/bound¨y.h
"

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

14 *
p
 = 
	`gë_bound¨y_¨ó
 ();

15 
p
--;

16 
p
[0] = 
SYS_EXIT
;

17 
p
[1] = 42;

20 
asm
 vﬁ©ûê("mov»%0, %%e•; i¡ $0x30" : : "g" (
p
));

21 
	`Áû
 ("should have calledÉxit(42)");

22 
	}
}

	@userprog/wait-bad-pid.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`waô
 ((
pid_t
) 0x0c020301);

11 
	}
}

	@userprog/wait-killed.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`msg
 ("waô”xec()Ë%d", 
	`waô
 (
	`exec
 ("child-bad")));

11 
	}
}

	@userprog/wait-simple.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`msg
 ("waô”xec()Ë%d", 
	`waô
 (
	`exec
 ("child-simple")));

11 
	}
}

	@userprog/wait-twice.c

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
pid_t
 
chûd
 = 
	`exec
 ("child-simple");

13 
	`msg
 ("waô”xec()Ë%d", 
	`waô
 (
chûd
));

14 
	`msg
 ("waô”xec()Ë%d", 
	`waô
 (
chûd
));

15 
	}
}

	@userprog/write-bad-fd.c

5 
	~<limôs.h
>

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
buf
 = 123;

13 
	`wrôe
 (0x01012342, &
buf
, 1);

14 
	`wrôe
 (7, &
buf
, 1);

15 
	`wrôe
 (2546, &
buf
, 1);

16 
	`wrôe
 (-5, &
buf
, 1);

17 
	`wrôe
 (-8192, &
buf
, 1);

18 
	`wrôe
 (
INT_MIN
 + 1, &
buf
, 1);

19 
	`wrôe
 (
INT_MAX
 - 1, &
buf
, 1);

20 
	}
}

	@userprog/write-bad-ptr.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
h™dÀ
;

12 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

14 
	`wrôe
 (
h™dÀ
, (*) 0x10123420, 123);

15 
	`Áû
 ("should haveÉxited with -1");

16 
	}
}

	@userprog/write-boundary.c

4 
	~<°rög.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/u£Ωrog/bound¨y.h
"

7 
	~"ã°s/u£Ωrog/ßm∂e.öc
"

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

12 
	$ã°_maö
 ()

14 
h™dÀ
;

15 
byã_˙t
;

16 *
ßm∂e_p
;

18 
ßm∂e_p
 = 
	`c›y_°rög_a¸oss_bound¨y
 (
ßm∂e
);

20 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

22 
byã_˙t
 = 
	`wrôe
 (
h™dÀ
, 
ßm∂e_p
,  
ßm∂e
 - 1);

23 i‡(
byã_˙t
 ! 
ßm∂e
 - 1)

24 
	`Áû
 ("wrôe(Ëªtu∫ed %d in°ód o‡%zu", 
byã_˙t
,  
ßm∂e
 - 1);

25 
	}
}

	@userprog/write-normal.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/u£Ωrog/ßm∂e.öc
"

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
h™dÀ
, 
byã_˙t
;

13 
	`CHECK
 (
	`¸óã
 ("ã°.txt",  
ßm∂e
 - 1), "create \"test.txt\"");

14 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("test.txt")) > 1, "open \"test.txt\"");

16 
byã_˙t
 = 
	`wrôe
 (
h™dÀ
, 
ßm∂e
,  sample - 1);

17 i‡(
byã_˙t
 ! 
ßm∂e
 - 1)

18 
	`Áû
 ("wrôe(Ëªtu∫ed %d in°ód o‡%zu", 
byã_˙t
,  
ßm∂e
 - 1);

19 
	}
}

	@userprog/write-stdin.c

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
buf
 = 123;

13 
	`wrôe
 (0, &
buf
, 1);

14 
	}
}

	@userprog/write-zero.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
h™dÀ
, 
byã_˙t
;

12 
buf
;

14 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

16 
buf
 = 123;

17 
byã_˙t
 = 
	`wrôe
 (
h™dÀ
, &
buf
, 0);

18 i‡(
byã_˙t
 != 0)

19 
	`Áû
("wrôe(Ëªtu∫ed %d in°ód o‡0", 
byã_˙t
);

20 
	}
}

	@vm/child-inherit.c

5 
	~<°rög.h
>

6 
	~"ã°s/vm/ßm∂e.öc
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 
	`mem£t
 ((*) 0x54321000, 0, 4096);

14 
	`Áû
 ("child can modifyÖarent's memory mappings");

15 
	}
}

	@vm/child-linear.c

5 
	~<°rög.h
>

6 
	~"ã°s/¨c4.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

10 c⁄° *
	gã°_«me
 = "child-linear";

12 
	#SIZE
 (1024 * 1024)

	)

13 
	gbuf
[
SIZE
];

16 
	$maö
 (
¨gc
, *
¨gv
[])

18 c⁄° *
key
 = 
¨gv
[
¨gc
 - 1];

19 
¨c4
árc4;

20 
size_t
 
i
;

23 
	`¨c4_öô
 (&
¨c4
, 
key
, 
	`°æí
 (key));

24 
	`¨c4_¸y±
 (&
¨c4
, 
buf
, 
SIZE
);

27 
	`¨c4_öô
 (&
¨c4
, 
key
, 
	`°æí
 (key));

28 
	`¨c4_¸y±
 (&
¨c4
, 
buf
, 
SIZE
);

31 
i
 = 0; i < 
SIZE
; i++)

32 i‡(
buf
[
i
] != '\0')

33 
	`Áû
 ("byã %zu !0", 
i
);

36 
	}
}

	@vm/child-mm-wrt.c

6 
	~<°rög.h
>

7 
	~<sysˇŒ.h
>

8 
	~"ã°s/vm/ßm∂e.öc
"

9 
	~"ã°s/lib.h
"

10 
	~"ã°s/maö.h
"

12 
	#ACTUAL
 ((*Ë0x10000000)

	)

15 
	$ã°_maö
 ()

17 
h™dÀ
;

19 
	`CHECK
 (
	`¸óã
 ("ßm∂e.txt",  
ßm∂e
), "create \"sample.txt\"");

20 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

21 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, 
ACTUAL
Ë!
MAP_FAILED
, "mmap \"sample.txt\"");

22 
	`mem˝y
 (
ACTUAL
, 
ßm∂e
,  sample);

23 
	}
}

	@vm/child-qsort-mm.c

4 
	~<debug.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

8 
	~"ã°s/vm/qs‹t.h
"

10 c⁄° *
	gã°_«me
 = "child-qsort-mm";

13 
	$maö
 (
¨gc
 
UNUSED
, *
¨gv
[])

15 
h™dÀ
;

16 *
p
 = (*) 0x10000000;

18 
quõt
 = 
åue
;

20 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 (
¨gv
[1])) > 1, "open \"%s\"",árgv[1]);

21 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, 
p
Ë!
MAP_FAILED
, "mm≠ \"%s\"", 
¨gv
[1]);

22 
	`qs‹t_byãs
 (
p
, 1024 * 128);

25 
	}
}

	@vm/child-qsort.c

6 
	~<debug.h
>

7 
	~<sysˇŒ.h
>

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

10 
	~"ã°s/vm/qs‹t.h
"

12 c⁄° *
	gã°_«me
 = "child-qsort";

15 
	$maö
 (
¨gc
 
UNUSED
, *
¨gv
[])

17 
h™dÀ
;

18 
buf
[128 * 1024];

19 
size_t
 
size
;

21 
quõt
 = 
åue
;

23 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 (
¨gv
[1])) > 1, "open \"%s\"",árgv[1]);

25 
size
 = 
	`ªad
 (
h™dÀ
, 
buf
,  buf);

26 
	`qs‹t_byãs
 (
buf
,  buf);

27 
	`£ek
 (
h™dÀ
, 0);

28 
	`wrôe
 (
h™dÀ
, 
buf
, 
size
);

29 
	`˛o£
 (
h™dÀ
);

32 
	}
}

	@vm/child-sort.c

5 
	~<debug.h
>

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

10 c⁄° *
	gã°_«me
 = "child-sort";

12 
	gbuf
[128 * 1024];

13 
size_t
 
	ghi°ogøm
[256];

16 
	$maö
 (
¨gc
 
UNUSED
, *
¨gv
[])

18 
h™dÀ
;

19 *
p
;

20 
size_t
 
size
;

21 
size_t
 
i
;

23 
quõt
 = 
åue
;

25 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 (
¨gv
[1])) > 1, "open \"%s\"",árgv[1]);

27 
size
 = 
	`ªad
 (
h™dÀ
, 
buf
,  buf);

28 
i
 = 0; i < 
size
; i++)

29 
hi°ogøm
[
buf
[
i
]]++;

30 
p
 = 
buf
;

31 
i
 = 0; i <  
hi°ogøm
 /  *histogram; i++)

33 
size_t
 
j
 = 
hi°ogøm
[
i
];

34 
j
-- > 0)

35 *
p
++ = 
i
;

37 
	`£ek
 (
h™dÀ
, 0);

38 
	`wrôe
 (
h™dÀ
, 
buf
, 
size
);

39 
	`˛o£
 (
h™dÀ
);

42 
	}
}

	@vm/mmap-bad-fd.c

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
	`CHECK
 (
	`mm≠
 (0x5678, (*Ë0x10000000Ë=
MAP_FAILED
,

14 
	}
}

	@vm/mmap-clean.c

4 
	~<°rög.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/vm/ßm∂e.öc
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 c⁄° 
ovîwrôe
[] = "Now isÅheÅime foráll good...";

14 
buf„r
[ 
ßm∂e
 - 1];

15 *
a˘uÆ
 = (*) 0x54321000;

16 
h™dÀ
;

17 
m≠id_t
 
m≠
;

20 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

21 
	`CHECK
 ((
m≠
 = 
	`mm≠
 (
h™dÀ
, 
a˘uÆ
)Ë!
MAP_FAILED
, "mmap \"sample.txt\"");

22 i‡(
	`memcmp
 (
a˘uÆ
, 
ßm∂e
, 
	`°æí
 (sample)))

23 
	`Áû
 ("read of mmap'd fileÑeported bad data");

26 
	`CHECK
 (
	`wrôe
 (
h™dÀ
, 
ovîwrôe
, 
	`°æí
 (overwrite))

27 =(Ë
	`°æí
 (
ovîwrôe
),

32 
	`msg
 ("munmap \"sample.txt\"");

33 
	`munm≠
 (
m≠
);

36 
	`msg
 ("seek \"sample.txt\"");

37 
	`£ek
 (
h™dÀ
, 0);

38 
	`CHECK
 (
	`ªad
 (
h™dÀ
, 
buf„r
,  buffer) ==  buffer,

42 i‡(
	`memcmp
 (
buf„r
, 
ovîwrôe
, 
	`°æí
 (overwrite))

43 || 
	`memcmp
 (
buf„r
 + 
	`°æí
 (
ovîwrôe
), 
ßm∂e
 + strlen (overwrite),

44 
	`°æí
 (
ßm∂e
Ë- såÀ¿(
ovîwrôe
)))

46 i‡(!
	`memcmp
 (
buf„r
, 
ßm∂e
, 
	`°æí
 (sample)))

47 
	`Áû
 ("munmap wrote back cleanÖage");

49 
	`Áû
 ("read surprising data from file");

52 
	`msg
 ("file change wasÑetainedáfter munmap");

53 
	}
}

	@vm/mmap-close.c

3 
	~<°rög.h
>

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/vm/ßm∂e.öc
"

6 
	~"ã°s/¨c4.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

10 
	#ACTUAL
 ((*Ë0x10000000)

	)

13 
	$ã°_maö
 ()

15 
h™dÀ
;

16 
m≠id_t
 
m≠
;

18 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

19 
	`CHECK
 ((
m≠
 = 
	`mm≠
 (
h™dÀ
, 
ACTUAL
)Ë!
MAP_FAILED
, "mmap \"sample.txt\"");

21 
	`˛o£
 (
h™dÀ
);

23 i‡(
	`memcmp
 (
ACTUAL
, 
ßm∂e
, 
	`°æí
 (sample)))

24 
	`Áû
 ("read of mmap'd fileÑeported bad data");

26 
	`munm≠
 (
m≠
);

27 
	}
}

	@vm/mmap-exit.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/vm/ßm∂e.öc
"

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
pid_t
 
chûd
;

15 
quõt
 = 
åue
;

16 
	`CHECK
 ((
chûd
 = 
	`exec
 ("child-mm-wrt")) != -1, "exec \"child-mm-wrt\"");

17 
	`CHECK
 (
	`waô
 (
chûd
) == 0, "wait for child (shouldÑeturn 0)");

18 
quõt
 = 
Ál£
;

21 
	`check_fûe
 ("ßm∂e.txt", 
ßm∂e
,  sample);

22 
	}
}

	@vm/mmap-inherit.c

4 
	~<°rög.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/vm/ßm∂e.öc
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 *
a˘uÆ
 = (*) 0x54321000;

14 
h™dÀ
;

15 
pid_t
 
chûd
;

18 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

19 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, 
a˘uÆ
Ë!
MAP_FAILED
, "mmap \"sample.txt\"");

20 i‡(
	`memcmp
 (
a˘uÆ
, 
ßm∂e
, 
	`°æí
 (sample)))

21 
	`Áû
 ("read of mmap'd fileÑeported bad data");

24 
	`CHECK
 ((
chûd
 = 
	`exec
 ("child-inherit")) != -1, "exec \"child-inherit\"");

25 
quõt
 = 
åue
;

26 
	`CHECK
 (
	`waô
 (
chûd
) == -1, "wait for child (shouldÑeturn -1)");

27 
quõt
 = 
Ál£
;

30 
	`CHECK
 (!
	`memcmp
 (
a˘uÆ
, 
ßm∂e
, 
	`°æí
 (sample)),

32 
	}
}

	@vm/mmap-misalign.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
h™dÀ
;

12 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

13 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, (*Ë0x10001234Ë=
MAP_FAILED
,

15 
	}
}

	@vm/mmap-null.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
h™dÀ
;

12 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

13 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, 
NULL
Ë=
MAP_FAILED
, "tryÅo mmapátáddress 0");

14 
	}
}

	@vm/mmap-over-code.c

3 
	~<°döt.h
>

4 
	~<round.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
uöçå_t
 
ã°_maö_∑ge
 = 
	`ROUND_DOWN
 ((uöçå_tË
ã°_maö
, 4096);

13 
h™dÀ
;

15 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

16 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, (*Ë
ã°_maö_∑ge
Ë=
MAP_FAILED
,

18 
	}
}

	@vm/mmap-over-data.c

3 
	~<°döt.h
>

4 
	~<round.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

9 
	gx
;

12 
	$ã°_maö
 ()

14 
uöçå_t
 
x_∑ge
 = 
	`ROUND_DOWN
 ((uöçå_tË&
x
, 4096);

15 
h™dÀ
;

17 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

18 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, (*Ë
x_∑ge
Ë=
MAP_FAILED
,

20 
	}
}

	@vm/mmap-over-stk.c

3 
	~<°döt.h
>

4 
	~<round.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 
h™dÀ
;

13 
uöçå_t
 
h™dÀ_∑ge
 = 
	`ROUND_DOWN
 ((uöçå_tË&
h™dÀ
, 4096);

15 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

16 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, (*Ë
h™dÀ_∑ge
Ë=
MAP_FAILED
,

18 
	}
}

	@vm/mmap-overlap.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/vm/ßm∂e.öc
"

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 *
°¨t
 = (*) 0x10000000;

12 
fd
[2];

14 
	`CHECK
 ((
fd
[0] = 
	`›í
 ("zeros")) > 1, "open \"zeros\" once");

15 
	`CHECK
 (
	`mm≠
 (
fd
[0], 
°¨t
Ë!
MAP_FAILED
, "mmap \"zeros\"");

16 
	`CHECK
 ((
fd
[1] = 
	`›í
 ("zeros")) > 1 && fd[0] != fd[1],

18 
	`CHECK
 (
	`mm≠
 (
fd
[1], 
°¨t
 + 4096Ë=
MAP_FAILED
,

20 
	}
}

	@vm/mmap-read.c

3 
	~<°rög.h
>

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/vm/ßm∂e.öc
"

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

10 
	$ã°_maö
 ()

12 *
a˘uÆ
 = (*) 0x10000000;

13 
h™dÀ
;

14 
m≠id_t
 
m≠
;

15 
size_t
 
i
;

17 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

18 
	`CHECK
 ((
m≠
 = 
	`mm≠
 (
h™dÀ
, 
a˘uÆ
)Ë!
MAP_FAILED
, "mmap \"sample.txt\"");

21 i‡(
	`memcmp
 (
a˘uÆ
, 
ßm∂e
, 
	`°æí
 (sample)))

22 
	`Áû
 ("read of mmap'd fileÑeported bad data");

25 
i
 = 
	`°æí
 (
ßm∂e
); i < 4096; i++)

26 i‡(
a˘uÆ
[
i
] != 0)

27 
	`Áû
 ("byte %zu of mmap'dÑegion has value %02hhx (should be 0)",

28 
i
, 
a˘uÆ
[i]);

30 
	`munm≠
 (
m≠
);

31 
	`˛o£
 (
h™dÀ
);

32 
	}
}

	@vm/mmap-remove.c

4 
	~<°rög.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/vm/ßm∂e.öc
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 *
a˘uÆ
 = (*) 0x10000000;

14 
h™dÀ
;

15 
m≠id_t
 
m≠
;

16 
size_t
 
i
;

19 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

20 
	`CHECK
 ((
m≠
 = 
	`mm≠
 (
h™dÀ
, 
a˘uÆ
)Ë!
MAP_FAILED
, "mmap \"sample.txt\"");

23 
	`˛o£
 (
h™dÀ
);

24 
	`CHECK
 (
	`ªmove
 ("sample.txt"), "remove \"sample.txt\"");

25 
	`CHECK
 (
	`›í
 ("sample.txt") == -1, "tryÅo open \"sample.txt\"");

30 
	`CHECK
 (
	`¸óã
 ("another", 4096 * 10), "create \"another\"");

33 i‡(
	`memcmp
 (
a˘uÆ
, 
ßm∂e
, 
	`°æí
 (sample)))

34 
	`Áû
 ("read of mmap'd fileÑeported bad data");

37 
i
 = 
	`°æí
 (
ßm∂e
); i < 4096; i++)

38 i‡(
a˘uÆ
[
i
] != 0)

39 
	`Áû
 ("byte %zu of mmap'dÑegion has value %02hhx (should be 0)",

40 
i
, 
a˘uÆ
[i]);

42 
	`munm≠
 (
m≠
);

43 
	}
}

	@vm/mmap-shuffle.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/¨c4.h
"

8 
	~"ã°s/cksum.h
"

9 
	~"ã°s/lib.h
"

10 
	~"ã°s/maö.h
"

12 
	#SIZE
 (128 * 1024)

	)

14 *
	gbuf
 = (*) 0x10000000;

17 
	$ã°_maö
 ()

19 
size_t
 
i
;

20 
h™dÀ
;

23 
	`CHECK
 (
	`¸óã
 ("buf„r", 
SIZE
), "create \"buffer\"");

24 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("buffer")) > 1, "open \"buffer\"");

25 
	`CHECK
 (
	`mm≠
 (
h™dÀ
, 
buf
Ë!
MAP_FAILED
, "mmap \"buffer\"");

28 
i
 = 0; i < 
SIZE
; i++)

29 
buf
[
i
] = i * 257;

30 
	`msg
 ("öô: cksum=%lu", 
	`cksum
 (
buf
, 
SIZE
));

33 
i
 = 0; i < 10; i++)

35 
	`shufÊe
 (
buf
, 
SIZE
, 1);

36 
	`msg
 ("shufÊê%zu: cksum=%lu", 
i
, 
	`cksum
 (
buf
, 
SIZE
));

38 
	}
}

	@vm/mmap-twice.c

4 
	~<°rög.h
>

5 
	~<sysˇŒ.h
>

6 
	~"ã°s/vm/ßm∂e.öc
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 *
a˘uÆ
[2] = {(*) 0x10000000, (*) 0x20000000};

14 
size_t
 
i
;

15 
h™dÀ
[2];

17 
i
 = 0; i < 2; i++)

19 
	`CHECK
 ((
h™dÀ
[
i
] = 
	`›í
 ("sample.txt")) > 1,

20 "›í \"ßm∂e.txt\" #%zu", 
i
);

21 
	`CHECK
 (
	`mm≠
 (
h™dÀ
[
i
], 
a˘uÆ
[i]Ë!
MAP_FAILED
,

22 "mm≠ \"ßm∂e.txt\" #%zuáà%p", 
i
, (*Ë
a˘uÆ
[i]);

25 
i
 = 0; i < 2; i++)

26 
	`CHECK
 (!
	`memcmp
 (
a˘uÆ
[
i
], 
ßm∂e
, 
	`°æí
 (sample)),

27 "com∑ª mm≠'d fûê%zuágaö° d©a", 
i
);

28 
	}
}

	@vm/mmap-unmap.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/vm/ßm∂e.öc
"

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

9 
	#ACTUAL
 ((*Ë0x10000000)

	)

12 
	$ã°_maö
 ()

14 
h™dÀ
;

15 
m≠id_t
 
m≠
;

17 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

18 
	`CHECK
 ((
m≠
 = 
	`mm≠
 (
h™dÀ
, 
ACTUAL
)Ë!
MAP_FAILED
, "mmap \"sample.txt\"");

20 
	`munm≠
 (
m≠
);

22 
	`Áû
 ("unm≠≥d mem‹y i†ªadabÀ (%d)", *(*Ë
ACTUAL
);

23 
	}
}

	@vm/mmap-write.c

5 
	~<°rög.h
>

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/vm/ßm∂e.öc
"

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

11 
	#ACTUAL
 ((*Ë0x10000000)

	)

14 
	$ã°_maö
 ()

16 
h™dÀ
;

17 
m≠id_t
 
m≠
;

18 
buf
[1024];

21 
	`CHECK
 (
	`¸óã
 ("ßm∂e.txt", 
	`°æí
 (
ßm∂e
)), "create \"sample.txt\"");

22 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

23 
	`CHECK
 ((
m≠
 = 
	`mm≠
 (
h™dÀ
, 
ACTUAL
)Ë!
MAP_FAILED
, "mmap \"sample.txt\"");

24 
	`mem˝y
 (
ACTUAL
, 
ßm∂e
, 
	`°æí
 (sample));

25 
	`munm≠
 (
m≠
);

28 
	`ªad
 (
h™dÀ
, 
buf
, 
	`°æí
 (
ßm∂e
));

29 
	`CHECK
 (!
	`memcmp
 (
buf
, 
ßm∂e
, 
	`°æí
 (sample)),

31 
	`˛o£
 (
h™dÀ
);

32 
	}
}

	@vm/mmap-zero.c

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 *
d©a
 = (*) 0x7f000000;

14 
h™dÀ
;

16 
	`CHECK
 (
	`¸óã
 ("empty", 0), "createÉmpty file \"empty\"");

17 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("empty")) > 1, "open \"empty\"");

20 
	`msg
 ("mmap \"empty\"");

21 
	`mm≠
 (
h™dÀ
, 
d©a
);

25 
	`Áû
 ("unm≠≥d mem‹y i†ªadabÀ (%d)", *
d©a
);

26 
	}
}

	@vm/mmap=read.c

	@vm/page-linear.c

4 
	~<°rög.h
>

5 
	~"ã°s/¨c4.h
"

6 
	~"ã°s/lib.h
"

7 
	~"ã°s/maö.h
"

9 
	#SIZE
 (2 * 1024 * 1024)

	)

11 
	gbuf
[
SIZE
];

14 
	$ã°_maö
 ()

16 
¨c4
árc4;

17 
size_t
 
i
;

20 
	`msg
 ("initialize");

21 
	`mem£t
 (
buf
, 0x5a,  buf);

24 
	`msg
 ("readÖass");

25 
i
 = 0; i < 
SIZE
; i++)

26 i‡(
buf
[
i
] != 0x5a)

27 
	`Áû
 ("byã %zu !0x5a", 
i
);

30 
	`msg
 ("read/modify/writeÖass one");

31 
	`¨c4_öô
 (&
¨c4
, "foobar", 6);

32 
	`¨c4_¸y±
 (&
¨c4
, 
buf
, 
SIZE
);

35 
	`msg
 ("read/modify/writeÖassÅwo");

36 
	`¨c4_öô
 (&
¨c4
, "foobar", 6);

37 
	`¨c4_¸y±
 (&
¨c4
, 
buf
, 
SIZE
);

40 
	`msg
 ("readÖass");

41 
i
 = 0; i < 
SIZE
; i++)

42 i‡(
buf
[
i
] != 0x5a)

43 
	`Áû
 ("byã %zu !0x5a", 
i
);

44 
	}
}

	@vm/page-merge-mm.c

1 
	~"ã°s/maö.h
"

2 
	~"ã°s/vm/∑øŒñ-mîge.h
"

5 
	$ã°_maö
 ()

7 
	`∑øŒñ_mîge
 ("child-qsort-mm", 80);

8 
	}
}

	@vm/page-merge-par.c

1 
	~"ã°s/maö.h
"

2 
	~"ã°s/vm/∑øŒñ-mîge.h
"

5 
	$ã°_maö
 ()

7 
	`∑øŒñ_mîge
 ("child-sort", 123);

8 
	}
}

	@vm/page-merge-seq.c

6 
	~<sysˇŒ.h
>

7 
	~"ã°s/¨c4.h
"

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

14 
	#CHUNK_SIZE
 (126 * 512)

	)

15 
	#CHUNK_CNT
 16

	)

16 
	#DATA_SIZE
 (
CHUNK_CNT
 * 
CHUNK_SIZE
Ë

	)

18 
	gbuf1
[
DATA_SIZE
], 
	gbuf2
[DATA_SIZE];

19 
size_t
 
	ghi°ogøm
[256];

24 
	$öô
 ()

26 
¨c4
árc4;

27 
size_t
 
i
;

29 
	`msg
 ("init");

31 
	`¨c4_öô
 (&
¨c4
, "foobar", 6);

32 
	`¨c4_¸y±
 (&
¨c4
, 
buf1
,  buf1);

33 
i
 = 0; i <  
buf1
; i++)

34 
hi°ogøm
[
buf1
[
i
]]++;

35 
	}
}

39 
	$s‹t_chunks
 ()

41 
size_t
 
i
;

43 
	`¸óã
 ("buf„r", 
CHUNK_SIZE
);

44 
i
 = 0; i < 
CHUNK_CNT
; i++)

46 
pid_t
 
chûd
;

47 
h™dÀ
;

49 
	`msg
 ("s‹àchunk %zu", 
i
);

52 
quõt
 = 
åue
;

53 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("buffer")) > 1, "open \"buffer\"");

54 
	`wrôe
 (
h™dÀ
, 
buf1
 + 
CHUNK_SIZE
 * 
i
, CHUNK_SIZE);

55 
	`˛o£
 (
h™dÀ
);

58 
	`CHECK
 ((
chûd
 = 
	`exec
 ("child-sort buffer")) != -1,

60 
	`CHECK
 (
	`waô
 (
chûd
) == 123, "wait for child-sort");

63 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("buffer")) > 1, "open \"buffer\"");

64 
	`ªad
 (
h™dÀ
, 
buf1
 + 
CHUNK_SIZE
 * 
i
, CHUNK_SIZE);

65 
	`˛o£
 (
h™dÀ
);

67 
quõt
 = 
Ál£
;

69 
	}
}

73 
	$mîge
 ()

75 *
mp
[
CHUNK_CNT
];

76 
size_t
 
mp_À·
;

77 *
›
;

78 
size_t
 
i
;

80 
	`msg
 ("merge");

83 
mp_À·
 = 
CHUNK_CNT
;

84 
i
 = 0; i < 
CHUNK_CNT
; i++)

85 
mp
[
i
] = 
buf1
 + 
CHUNK_SIZE
 * i;

88 
›
 = 
buf2
;

89 
mp_À·
 > 0)

92 
size_t
 
mö
 = 0;

93 
i
 = 1; i < 
mp_À·
; i++)

94 i‡(*
mp
[
i
] < *mp[
mö
])

95 
mö
 = 
i
;

98 *
›
++ = *
mp
[
mö
];

102 i‡((++
mp
[
mö
] - 
buf1
Ë% 
CHUNK_SIZE
 == 0)

103 
mp
[
mö
] = mp[--
mp_À·
];

105 
	}
}

108 
	$vîify
 ()

110 
size_t
 
buf_idx
;

111 
size_t
 
hi°_idx
;

113 
	`msg
 ("verify");

115 
buf_idx
 = 0;

116 
hi°_idx
 = 0; hi°_idx <  
hi°ogøm
 /  *histogram;

117 
hi°_idx
++)

119 
hi°ogøm
[
hi°_idx
]-- > 0)

121 i‡(
buf2
[
buf_idx
] !
hi°_idx
)

122 
	`Áû
 ("bad vÆuê%d i¿byã %zu", 
buf2
[
buf_idx
], buf_idx);

123 
buf_idx
++;

127 
	`msg
 ("suc˚ss, buf_idx=%'zu", 
buf_idx
);

128 
	}
}

131 
	$ã°_maö
 ()

133 
	`öô
 ();

134 
	`s‹t_chunks
 ();

135 
	`mîge
 ();

136 
	`vîify
 ();

137 
	}
}

	@vm/page-merge-stk.c

1 
	~"ã°s/maö.h
"

2 
	~"ã°s/vm/∑øŒñ-mîge.h
"

5 
	$ã°_maö
 ()

7 
	`∑øŒñ_mîge
 ("child-qsort", 72);

8 
	}
}

	@vm/page-parallel.c

3 
	~<sysˇŒ.h
>

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

7 
	#CHILD_CNT
 4

	)

10 
	$ã°_maö
 ()

12 
pid_t
 
chûdªn
[
CHILD_CNT
];

13 
i
;

15 
i
 = 0; i < 
CHILD_CNT
; i++)

16 
	`CHECK
 ((
chûdªn
[
i
] = 
	`exec
 ("child-linear")) != -1,

19 
i
 = 0; i < 
CHILD_CNT
; i++)

20 
	`CHECK
 (
	`waô
 (
chûdªn
[
i
]) == 0x42, "wait for child %d", i);

21 
	}
}

	@vm/page-shuffle.c

4 
	~<°dboﬁ.h
>

5 
	~"ã°s/¨c4.h
"

6 
	~"ã°s/cksum.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

10 
	#SIZE
 (128 * 1024)

	)

12 
	gbuf
[
SIZE
];

15 
	$ã°_maö
 ()

17 
size_t
 
i
;

20 
i
 = 0; i <  
buf
; i++)

21 
buf
[
i
] = i * 257;

22 
	`msg
 ("öô: cksum=%lu", 
	`cksum
 (
buf
,  buf));

25 
i
 = 0; i < 10; i++)

27 
	`shufÊe
 (
buf
,  buf, 1);

28 
	`msg
 ("shufÊê%zu: cksum=%lu", 
i
, 
	`cksum
 (
buf
,  buf));

30 
	}
}

	@vm/parallel-merge.c

6 
	~"ã°s/vm/∑øŒñ-mîge.h
"

7 
	~<°dio.h
>

8 
	~<sysˇŒ.h
>

9 
	~"ã°s/¨c4.h
"

10 
	~"ã°s/lib.h
"

11 
	~"ã°s/maö.h
"

13 
	#CHUNK_SIZE
 (128 * 1024)

	)

14 
	#CHUNK_CNT
 8

	)

15 
	#DATA_SIZE
 (
CHUNK_CNT
 * 
CHUNK_SIZE
Ë

	)

17 
	gbuf1
[
DATA_SIZE
], 
	gbuf2
[DATA_SIZE];

18 
size_t
 
	ghi°ogøm
[256];

23 
	$öô
 ()

25 
¨c4
árc4;

26 
size_t
 
i
;

28 
	`msg
 ("init");

30 
	`¨c4_öô
 (&
¨c4
, "foobar", 6);

31 
	`¨c4_¸y±
 (&
¨c4
, 
buf1
,  buf1);

32 
i
 = 0; i <  
buf1
; i++)

33 
hi°ogøm
[
buf1
[
i
]]++;

34 
	}
}

39 
	$s‹t_chunks
 (c⁄° *
sub¥o˚ss
, 
exô_°©us
)

41 
pid_t
 
chûdªn
[
CHUNK_CNT
];

42 
size_t
 
i
;

44 
i
 = 0; i < 
CHUNK_CNT
; i++)

46 
‚
[128];

47 
cmd
[128];

48 
h™dÀ
;

50 
	`msg
 ("s‹àchunk %zu", 
i
);

53 
	`¢¥ötf
 (
‚
,  fn, "buf%zu", 
i
);

54 
	`¸óã
 (
‚
, 
CHUNK_SIZE
);

55 
quõt
 = 
åue
;

56 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 (
‚
)) > 1, "open \"%s\"", fn);

57 
	`wrôe
 (
h™dÀ
, 
buf1
 + 
CHUNK_SIZE
 * 
i
, CHUNK_SIZE);

58 
	`˛o£
 (
h™dÀ
);

61 
	`¢¥ötf
 (
cmd
,  cmd, "%†%s", 
sub¥o˚ss
, 
‚
);

62 
	`CHECK
 ((
chûdªn
[
i
] = 
	`exec
 (
cmd
)) != -1, "exec \"%s\"", cmd);

63 
quõt
 = 
Ál£
;

66 
i
 = 0; i < 
CHUNK_CNT
; i++)

68 
‚
[128];

69 
h™dÀ
;

71 
	`CHECK
 (
	`waô
 (
chûdªn
[
i
]Ë=
exô_°©us
, "wait for child %zu", i);

74 
quõt
 = 
åue
;

75 
	`¢¥ötf
 (
‚
,  fn, "buf%zu", 
i
);

76 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 (
‚
)) > 1, "open \"%s\"", fn);

77 
	`ªad
 (
h™dÀ
, 
buf1
 + 
CHUNK_SIZE
 * 
i
, CHUNK_SIZE);

78 
	`˛o£
 (
h™dÀ
);

79 
quõt
 = 
Ál£
;

81 
	}
}

85 
	$mîge
 ()

87 *
mp
[
CHUNK_CNT
];

88 
size_t
 
mp_À·
;

89 *
›
;

90 
size_t
 
i
;

92 
	`msg
 ("merge");

95 
mp_À·
 = 
CHUNK_CNT
;

96 
i
 = 0; i < 
CHUNK_CNT
; i++)

97 
mp
[
i
] = 
buf1
 + 
CHUNK_SIZE
 * i;

100 
›
 = 
buf2
;

101 
mp_À·
 > 0)

104 
size_t
 
mö
 = 0;

105 
i
 = 1; i < 
mp_À·
; i++)

106 i‡(*
mp
[
i
] < *mp[
mö
])

107 
mö
 = 
i
;

110 *
›
++ = *
mp
[
mö
];

114 i‡((++
mp
[
mö
] - 
buf1
Ë% 
CHUNK_SIZE
 == 0)

115 
mp
[
mö
] = mp[--
mp_À·
];

117 
	}
}

120 
	$vîify
 ()

122 
size_t
 
buf_idx
;

123 
size_t
 
hi°_idx
;

125 
	`msg
 ("verify");

127 
buf_idx
 = 0;

128 
hi°_idx
 = 0; hi°_idx <  
hi°ogøm
 /  *histogram;

129 
hi°_idx
++)

131 
hi°ogøm
[
hi°_idx
]-- > 0)

133 i‡(
buf2
[
buf_idx
] !
hi°_idx
)

134 
	`Áû
 ("bad vÆuê%d i¿byã %zu", 
buf2
[
buf_idx
], buf_idx);

135 
buf_idx
++;

139 
	`msg
 ("suc˚ss, buf_idx=%'zu", 
buf_idx
);

140 
	}
}

143 
	$∑øŒñ_mîge
 (c⁄° *
chûd_«me
, 
exô_°©us
)

145 
	`öô
 ();

146 
	`s‹t_chunks
 (
chûd_«me
, 
exô_°©us
);

147 
	`mîge
 ();

148 
	`vîify
 ();

149 
	}
}

	@vm/parallel-merge.h

1 #i‚de‡
TESTS_VM_PARALLEL_MERGE


2 
	#TESTS_VM_PARALLEL_MERGE
 1

	)

4 
∑øŒñ_mîge
 (c⁄° *
chûd_«me
, 
exô_°©us
);

	@vm/pt-bad-addr.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
	`Áû
 ("badáddrÑeadás %d", *(*) 0x04000000);

11 
	}
}

	@vm/pt-bad-read.c

4 
	~<sysˇŒ.h
>

5 
	~"ã°s/lib.h
"

6 
	~"ã°s/maö.h
"

9 
	$ã°_maö
 ()

11 
h™dÀ
;

13 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

14 
	`ªad
 (
h™dÀ
, (*) &handle - 4096, 1);

15 
	`Áû
 ("survivedÑeading data into badáddress");

16 
	}
}

	@vm/pt-big-stk-obj.c

4 
	~<°rög.h
>

5 
	~"ã°s/¨c4.h
"

6 
	~"ã°s/cksum.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 
°k_obj
[65536];

14 
¨c4
árc4;

16 
	`¨c4_öô
 (&
¨c4
, "foobar", 6);

17 
	`mem£t
 (
°k_obj
, 0,  stk_obj);

18 
	`¨c4_¸y±
 (&
¨c4
, 
°k_obj
,  stk_obj);

19 
	`msg
 ("cksum: %lu", 
	`cksum
 (
°k_obj
,  stk_obj));

20 
	}
}

	@vm/pt-grow-bad.c

4 
	~<°rög.h
>

5 
	~"ã°s/¨c4.h
"

6 
	~"ã°s/cksum.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 
asm
 volatile ("movl -4096(%esp), %eax");

14 
	}
}

	@vm/pt-grow-pusha.c

5 
	~<°rög.h
>

6 
	~"ã°s/¨c4.h
"

7 
	~"ã°s/cksum.h
"

8 
	~"ã°s/lib.h
"

9 
	~"ã°s/maö.h
"

12 
	$ã°_maö
 ()

14 
asm
 volatile

20 
	}
}

	@vm/pt-grow-stack.c

4 
	~<°rög.h
>

5 
	~"ã°s/¨c4.h
"

6 
	~"ã°s/cksum.h
"

7 
	~"ã°s/lib.h
"

8 
	~"ã°s/maö.h
"

11 
	$ã°_maö
 ()

13 
°ack_obj
[4096];

14 
¨c4
árc4;

16 
	`¨c4_öô
 (&
¨c4
, "foobar", 6);

17 
	`mem£t
 (
°ack_obj
, 0,  stack_obj);

18 
	`¨c4_¸y±
 (&
¨c4
, 
°ack_obj
,  stack_obj);

19 
	`msg
 ("cksum: %lu", 
	`cksum
 (
°ack_obj
,  stack_obj));

20 
	}
}

	@vm/pt-grow-stk-sc.c

7 
	~<°rög.h
>

8 
	~<sysˇŒ.h
>

9 
	~"ã°s/vm/ßm∂e.öc
"

10 
	~"ã°s/lib.h
"

11 
	~"ã°s/maö.h
"

14 
	$ã°_maö
 ()

16 
h™dÀ
;

17 
¶í
 = 
	`°æí
 (
ßm∂e
);

18 
buf2
[65536];

21 
	`CHECK
 (
	`¸óã
 ("ßm∂e.txt", 
¶í
), "create \"sample.txt\"");

22 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

23 
	`CHECK
 (
	`wrôe
 (
h™dÀ
, 
ßm∂e
, 
¶í
) == slen, "write \"sample.txt\"");

24 
	`˛o£
 (
h™dÀ
);

27 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "2nd open \"sample.txt\"");

28 
	`CHECK
 (
	`ªad
 (
h™dÀ
, 
buf2
 + 32768, 
¶í
) == slen, "read \"sample.txt\"");

30 
	`CHECK
 (!
	`memcmp
 (
ßm∂e
, 
buf2
 + 32768, 
¶í
), "compare written dataágainstÑead data");

31 
	`˛o£
 (
h™dÀ
);

32 
	}
}

	@vm/pt-write-code-2.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 
h™dÀ
;

12 
	`CHECK
 ((
h™dÀ
 = 
	`›í
 ("sample.txt")) > 1, "open \"sample.txt\"");

13 
	`ªad
 (
h™dÀ
, (*Ë
ã°_maö
, 1);

14 
	`Áû
 ("survivedÑeading data into code segment");

15 
	}
}

	@vm/pt-write-code.c

4 
	~"ã°s/lib.h
"

5 
	~"ã°s/maö.h
"

8 
	$ã°_maö
 ()

10 *(*Ë
ã°_maö
 = 0;

11 
	`Áû
 ("writingÅhe code segment succeeded");

12 
	}
}

	@vm/qsort.c

1 
	~"ã°s/vm/qs‹t.h
"

2 
	~<°dboﬁ.h
>

3 
	~<debug.h
>

4 
	~<øndom.h
>

8 
	$pick_pivŸ
 (*
buf
, 
size_t
 
size
)

10 
	`ASSERT
 (
size
 >= 1);

11  
buf
[
	`øndom_ul⁄g
 (Ë% 
size
];

12 
	}
}

18 
boﬁ


19 
	$is_∑πôi⁄ed
 (c⁄° *
¨øy
, 
size_t
 
size
,

20 
pivŸ
, 
size_t
 
À·_size
)

22 
size_t
 
i
;

24 
i
 = 0; i < 
À·_size
; i++)

25 i‡(
¨øy
[
i
] >
pivŸ
)

26  
Ál£
;

28 ; 
i
 < 
size
; i++)

29 i‡(
¨øy
[
i
] < 
pivŸ
)

30  
Ál£
;

32  
åue
;

33 
	}
}

37 
	$sw≠
 (*
a
, *
b
)

39 
t
 = *
a
;

40 *
a
 = *
b
;

41 *
b
 = 
t
;

42 
	}
}

47 
size_t


48 
	$∑πôi⁄
 (*
¨øy
, 
size_t
 
size
, 
pivŸ
)

50 
size_t
 
À·_size
 = 
size
;

51 *
fú°
 = 
¨øy
;

52 *
œ°
 = 
fú°
 + 
À·_size
;

60 i‡(
fú°
 =
œ°
)

62 
	`ASSERT
 (
	`is_∑πôi⁄ed
 (
¨øy
, 
size
, 
pivŸ
, 
À·_size
));

63  
À·_size
;

65 i‡(*
fú°
 >
pivŸ
)

68 
fú°
++;

70 
À·_size
--;

76 
œ°
--;

78 i‡(
fú°
 =
œ°
)

80 
	`ASSERT
 (
	`is_∑πôi⁄ed
 (
¨øy
, 
size
, 
pivŸ
, 
À·_size
));

81  
À·_size
;

83 i‡(*
œ°
 < 
pivŸ
)

86 
À·_size
--;

92 
	`sw≠
 (
fú°
, 
œ°
);

93 
fú°
++;

95 
	}
}

99 
boﬁ


100 
	$is_s‹ãd
 (c⁄° *
buf
, 
size_t
 
size
)

102 
size_t
 
i
;

104 
i
 = 1; i < 
size
; i++)

105 i‡(
buf
[
i
 - 1] > buf[i])

106  
Ál£
;

108  
åue
;

109 
	}
}

114 
	$qs‹t_byãs
 (*
buf
, 
size_t
 
size
)

116 i‡(!
	`is_s‹ãd
 (
buf
, 
size
))

118 
pivŸ
 = 
	`pick_pivŸ
 (
buf
, 
size
);

120 *
À·_hÆf
 = 
buf
;

121 
size_t
 
À·_size
 = 
	`∑πôi⁄
 (
buf
, 
size
, 
pivŸ
);

122 *
right_hÆf
 = 
À·_hÆf
 + 
À·_size
;

123 
size_t
 
right_size
 = 
size
 - 
À·_size
;

125 i‡(
À·_size
 <
right_size
)

127 
	`qs‹t_byãs
 (
À·_hÆf
, 
À·_size
);

128 
	`qs‹t_byãs
 (
right_hÆf
, 
right_size
);

132 
	`qs‹t_byãs
 (
right_hÆf
, 
right_size
);

133 
	`qs‹t_byãs
 (
À·_hÆf
, 
À·_size
);

136 
	}
}

	@vm/qsort.h

1 #i‚de‡
TESTS_VM_QSORT_H


2 
	#TESTS_VM_QSORT_H
 1

	)

4 
	~<°ddef.h
>

6 
qs‹t_byãs
 (*
buf
, 
size_t
 
size
);

	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

46 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


48 #i‡
__WORDSIZE
 == 64

49 
	#__PRI64_PREFIX
 "l"

	)

50 
	#__PRIPTR_PREFIX
 "l"

	)

52 
	#__PRI64_PREFIX
 "Œ"

	)

53 
	#__PRIPTR_PREFIX


	)

59 
	#PRId8
 "d"

	)

60 
	#PRId16
 "d"

	)

61 
	#PRId32
 "d"

	)

62 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdLEAST8
 "d"

	)

65 
	#PRIdLEAST16
 "d"

	)

66 
	#PRIdLEAST32
 "d"

	)

67 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

69 
	#PRIdFAST8
 "d"

	)

70 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

71 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

75 
	#PRIi8
 "i"

	)

76 
	#PRIi16
 "i"

	)

77 
	#PRIi32
 "i"

	)

78 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiLEAST8
 "i"

	)

81 
	#PRIiLEAST16
 "i"

	)

82 
	#PRIiLEAST32
 "i"

	)

83 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

85 
	#PRIiFAST8
 "i"

	)

86 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

87 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

91 
	#PRIo8
 "o"

	)

92 
	#PRIo16
 "o"

	)

93 
	#PRIo32
 "o"

	)

94 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoLEAST8
 "o"

	)

97 
	#PRIoLEAST16
 "o"

	)

98 
	#PRIoLEAST32
 "o"

	)

99 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

101 
	#PRIoFAST8
 "o"

	)

102 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

103 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

107 
	#PRIu8
 "u"

	)

108 
	#PRIu16
 "u"

	)

109 
	#PRIu32
 "u"

	)

110 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuLEAST8
 "u"

	)

113 
	#PRIuLEAST16
 "u"

	)

114 
	#PRIuLEAST32
 "u"

	)

115 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

117 
	#PRIuFAST8
 "u"

	)

118 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

119 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

123 
	#PRIx8
 "x"

	)

124 
	#PRIx16
 "x"

	)

125 
	#PRIx32
 "x"

	)

126 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxLEAST8
 "x"

	)

129 
	#PRIxLEAST16
 "x"

	)

130 
	#PRIxLEAST32
 "x"

	)

131 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

133 
	#PRIxFAST8
 "x"

	)

134 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

135 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

139 
	#PRIX8
 "X"

	)

140 
	#PRIX16
 "X"

	)

141 
	#PRIX32
 "X"

	)

142 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXLEAST8
 "X"

	)

145 
	#PRIXLEAST16
 "X"

	)

146 
	#PRIXLEAST32
 "X"

	)

147 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

149 
	#PRIXFAST8
 "X"

	)

150 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

151 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

156 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

157 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

158 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

159 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

160 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

161 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

165 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

166 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

167 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

168 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

169 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

170 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

176 
	#SCNd8
 "hhd"

	)

177 
	#SCNd16
 "hd"

	)

178 
	#SCNd32
 "d"

	)

179 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdLEAST8
 "hhd"

	)

182 
	#SCNdLEAST16
 "hd"

	)

183 
	#SCNdLEAST32
 "d"

	)

184 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

186 
	#SCNdFAST8
 "hhd"

	)

187 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

188 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

192 
	#SCNi8
 "hhi"

	)

193 
	#SCNi16
 "hi"

	)

194 
	#SCNi32
 "i"

	)

195 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiLEAST8
 "hhi"

	)

198 
	#SCNiLEAST16
 "hi"

	)

199 
	#SCNiLEAST32
 "i"

	)

200 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

202 
	#SCNiFAST8
 "hhi"

	)

203 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

204 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

208 
	#SCNu8
 "hhu"

	)

209 
	#SCNu16
 "hu"

	)

210 
	#SCNu32
 "u"

	)

211 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuLEAST8
 "hhu"

	)

214 
	#SCNuLEAST16
 "hu"

	)

215 
	#SCNuLEAST32
 "u"

	)

216 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

218 
	#SCNuFAST8
 "hhu"

	)

219 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

220 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

224 
	#SCNo8
 "hho"

	)

225 
	#SCNo16
 "ho"

	)

226 
	#SCNo32
 "o"

	)

227 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoLEAST8
 "hho"

	)

230 
	#SCNoLEAST16
 "ho"

	)

231 
	#SCNoLEAST32
 "o"

	)

232 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

234 
	#SCNoFAST8
 "hho"

	)

235 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

236 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

240 
	#SCNx8
 "hhx"

	)

241 
	#SCNx16
 "hx"

	)

242 
	#SCNx32
 "x"

	)

243 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxLEAST8
 "hhx"

	)

246 
	#SCNxLEAST16
 "hx"

	)

247 
	#SCNxLEAST32
 "x"

	)

248 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

250 
	#SCNxFAST8
 "hhx"

	)

251 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

252 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

257 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

258 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

259 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

260 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

261 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

264 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

265 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

266 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

267 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

268 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

273 
	g__BEGIN_DECLS


275 #i‡
__WORDSIZE
 == 64

280 
	mquŸ
;

281 
	mªm
;

282 } 
	timaxdiv_t
;

289 
	mquŸ
;

290 
	mªm
;

291 } 
	timaxdiv_t
;

297 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

300 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

301 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

304 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

305 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

308 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

309 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

312 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

313 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

314 
__THROW
;

317 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

318 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

319 
__THROW
;

321 #ifde‡
__USE_EXTERN_INLINES


323 #i‡
__WORDSIZE
 == 64

325 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

326 **
__ª°ri˘
 
__íd±r
,

327 
__ba£
, 
__group
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

330 
__exã∫_ölöe
 
ötmax_t


331 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

332 
ba£
))

334  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

335 
	}
}

337 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 ** 
__ª°ri˘
 
__íd±r
,

339 
__ba£
, 
__group
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

342 
__exã∫_ölöe
 
uötmax_t


343 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

344 
ba£
))

346  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

347 
	}
}

349 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

350 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

351 
__ba£
, 
__group
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

354 
__exã∫_ölöe
 
ötmax_t


355 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

356 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

358  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

359 
	}
}

361 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

362 
__ª°ri˘
 
__≈å
,

363 
__gwch¨_t
 **

364 
__ª°ri˘
 
__íd±r
,

365 
__ba£
, 
__group
)

366 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

368 
__exã∫_ölöe
 
uötmax_t


369 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

370 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

372  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

373 
	}
}

377 
__exãnsi⁄__


378 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

379 **
__ª°ri˘
 
__íd±r
,

380 
__ba£
, 
__group
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

383 
__exã∫_ölöe
 
ötmax_t


384 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

385 
ba£
))

387  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

388 
	}
}

390 
__exãnsi⁄__


391 
	$__°πouŒ_öã∫Æ
 (const *

392 
__ª°ri˘
 
__≈å
,

394 
__ª°ri˘
 
__íd±r
,

395 
__ba£
,

396 
__group
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

399 
__exã∫_ölöe
 
uötmax_t


400 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

401 
ba£
))

403  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

404 
	}
}

406 
__exãnsi⁄__


407 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

408 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

409 
__ba£
, 
__group
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

412 
__exã∫_ölöe
 
ötmax_t


413 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

414 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

416  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

417 
	}
}

420 
__exãnsi⁄__


421 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

422 
__ª°ri˘
 
__≈å
,

423 
__gwch¨_t
 **

424 
__ª°ri˘
 
__íd±r
,

425 
__ba£
,

426 
__group
)

427 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

429 
__exã∫_ölöe
 
uötmax_t


430 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

431 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

433  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

434 
	}
}

439 
	g__END_DECLS


	@/usr/include/limits.h

23 #i‚de‡
_LIBC_LIMITS_H_


24 
	#_LIBC_LIMITS_H_
 1

	)

26 
	~<„©uªs.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

142 #ifdef 
__USE_POSIX


144 
	~<bôs/posix1_lim.h
>

147 #ifdef 
__USE_POSIX2


148 
	~<bôs/posix2_lim.h
>

151 #ifdef 
__USE_XOPEN


152 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

146 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


148 #i‡
__WORDSIZE
 == 64

149 
	#__INT64_C
(
c
Ë¯## 
L


	)

150 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

152 
	#__INT64_C
(
c
Ë¯## 
LL


	)

153 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

159 
	#INT8_MIN
 (-128)

	)

160 
	#INT16_MIN
 (-32767-1)

	)

161 
	#INT32_MIN
 (-2147483647-1)

	)

162 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

164 
	#INT8_MAX
 (127)

	)

165 
	#INT16_MAX
 (32767)

	)

166 
	#INT32_MAX
 (2147483647)

	)

167 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

170 
	#UINT8_MAX
 (255)

	)

171 
	#UINT16_MAX
 (65535)

	)

172 
	#UINT32_MAX
 (4294967295U)

	)

173 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

177 
	#INT_LEAST8_MIN
 (-128)

	)

178 
	#INT_LEAST16_MIN
 (-32767-1)

	)

179 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

180 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

182 
	#INT_LEAST8_MAX
 (127)

	)

183 
	#INT_LEAST16_MAX
 (32767)

	)

184 
	#INT_LEAST32_MAX
 (2147483647)

	)

185 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

188 
	#UINT_LEAST8_MAX
 (255)

	)

189 
	#UINT_LEAST16_MAX
 (65535)

	)

190 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

191 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

195 
	#INT_FAST8_MIN
 (-128)

	)

196 #i‡
__WORDSIZE
 == 64

197 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

198 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

200 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

201 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

203 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

205 
	#INT_FAST8_MAX
 (127)

	)

206 #i‡
__WORDSIZE
 == 64

207 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

208 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

210 
	#INT_FAST16_MAX
 (2147483647)

	)

211 
	#INT_FAST32_MAX
 (2147483647)

	)

213 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

216 
	#UINT_FAST8_MAX
 (255)

	)

217 #i‡
__WORDSIZE
 == 64

218 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

219 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

221 
	#UINT_FAST16_MAX
 (4294967295U)

	)

222 
	#UINT_FAST32_MAX
 (4294967295U)

	)

224 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

228 #i‡
__WORDSIZE
 == 64

229 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

230 
	#INTPTR_MAX
 (9223372036854775807L)

	)

231 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

233 
	#INTPTR_MIN
 (-2147483647-1)

	)

234 
	#INTPTR_MAX
 (2147483647)

	)

235 
	#UINTPTR_MAX
 (4294967295U)

	)

240 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

242 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

245 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

251 #i‡
__WORDSIZE
 == 64

252 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

253 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

255 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

256 
	#PTRDIFF_MAX
 (2147483647)

	)

260 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

261 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

264 #i‡
__WORDSIZE
 == 64

265 
	#SIZE_MAX
 (18446744073709551615UL)

	)

267 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

286 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


289 
	#INT8_C
(
c
Ë
	)
c

290 
	#INT16_C
(
c
Ë
	)
c

291 
	#INT32_C
(
c
Ë
	)
c

292 #i‡
__WORDSIZE
 == 64

293 
	#INT64_C
(
c
Ë¯## 
L


	)

295 
	#INT64_C
(
c
Ë¯## 
LL


	)

299 
	#UINT8_C
(
c
Ë
	)
c

300 
	#UINT16_C
(
c
Ë
	)
c

301 
	#UINT32_C
(
c
Ë¯## 
U


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#UINT64_C
(
c
Ë¯## 
UL


	)

305 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

309 #i‡
__WORDSIZE
 == 64

310 
	#INTMAX_C
(
c
Ë¯## 
L


	)

311 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

313 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

314 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/syscall.h

1 
	~<sys/sysˇŒ.h
>

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

329 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

330 #i‡
_FORTIFY_SOURCE
 > 1

331 
	#__USE_FORTIFY_LEVEL
 2

	)

333 
	#__USE_FORTIFY_LEVEL
 1

	)

336 
	#__USE_FORTIFY_LEVEL
 0

	)

341 
	~<°dc-¥edef.h
>

349 #unde‡
__GNU_LIBRARY__


350 
	#__GNU_LIBRARY__
 6

	)

354 
	#__GLIBC__
 2

	)

355 
	#__GLIBC_MINOR__
 17

	)

357 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

358 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

361 #i‡
deföed
 
__GNUC__
 \

362 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

363 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

364 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

365 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

369 #i‚de‡
__ASSEMBLER__


370 #i‚de‡
_SYS_CDEFS_H


371 
	~<sys/cdefs.h
>

376 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


377 
	#__USE_LARGEFILE
 1

	)

378 
	#__USE_LARGEFILE64
 1

	)

384 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

385 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

386 && 
deföed
 
	g__exã∫_ölöe


387 
	#__USE_EXTERN_INLINES
 1

	)

395 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	~<bôs/¥edefs.h
>

34 
	#__STDC_ISO_10646__
 201103L

	)

37 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
212
4782
arc4.c
arc4.h
cksum.c
cksum.h
filesys/base/child-syn-read.c
filesys/base/child-syn-wrt.c
filesys/base/lg-create.c
filesys/base/lg-full.c
filesys/base/lg-random.c
filesys/base/lg-seq-block.c
filesys/base/lg-seq-random.c
filesys/base/sm-create.c
filesys/base/sm-full.c
filesys/base/sm-random.c
filesys/base/sm-seq-block.c
filesys/base/sm-seq-random.c
filesys/base/syn-read.c
filesys/base/syn-read.h
filesys/base/syn-remove.c
filesys/base/syn-write.c
filesys/base/syn-write.h
filesys/extended/child-syn-rw.c
filesys/extended/dir-empty-name.c
filesys/extended/dir-mk-tree.c
filesys/extended/dir-mkdir.c
filesys/extended/dir-open.c
filesys/extended/dir-over-file.c
filesys/extended/dir-rm-cwd.c
filesys/extended/dir-rm-parent.c
filesys/extended/dir-rm-root.c
filesys/extended/dir-rm-tree.c
filesys/extended/dir-rmdir.c
filesys/extended/dir-under-file.c
filesys/extended/dir-vine.c
filesys/extended/grow-create.c
filesys/extended/grow-dir-lg.c
filesys/extended/grow-file-size.c
filesys/extended/grow-root-lg.c
filesys/extended/grow-root-sm.c
filesys/extended/grow-seq-lg.c
filesys/extended/grow-seq-sm.c
filesys/extended/grow-sparse.c
filesys/extended/grow-tell.c
filesys/extended/grow-two-files.c
filesys/extended/mk-tree.c
filesys/extended/mk-tree.h
filesys/extended/syn-rw.c
filesys/extended/syn-rw.h
filesys/extended/tar.c
filesys/seq-test.c
filesys/seq-test.h
internal/list.c
internal/stdio.c
internal/stdlib.c
lib.c
lib.h
main.c
main.h
threads/alarm-negative.c
threads/alarm-priority.c
threads/alarm-simultaneous.c
threads/alarm-wait.c
threads/alarm-zero.c
threads/mlfqs-block.c
threads/mlfqs-fair.c
threads/mlfqs-load-1.c
threads/mlfqs-load-60.c
threads/mlfqs-load-avg.c
threads/mlfqs-recent-1.c
threads/priority-change.c
threads/priority-condvar.c
threads/priority-donate-chain.c
threads/priority-donate-lower.c
threads/priority-donate-multiple.c
threads/priority-donate-multiple2.c
threads/priority-donate-nest.c
threads/priority-donate-one.c
threads/priority-donate-sema.c
threads/priority-fifo.c
threads/priority-preempt.c
threads/priority-sema.c
threads/tests.c
threads/tests.h
userprog/args.c
userprog/bad-jump.c
userprog/bad-jump2.c
userprog/bad-read.c
userprog/bad-read2.c
userprog/bad-write.c
userprog/bad-write2.c
userprog/boundary.c
userprog/boundary.h
userprog/child-bad.c
userprog/child-close.c
userprog/child-rox.c
userprog/child-simple.c
userprog/close-bad-fd.c
userprog/close-normal.c
userprog/close-stdin.c
userprog/close-stdout.c
userprog/close-twice.c
userprog/create-bad-ptr.c
userprog/create-bound.c
userprog/create-empty.c
userprog/create-exists.c
userprog/create-long.c
userprog/create-normal.c
userprog/create-null.c
userprog/exec-arg.c
userprog/exec-bad-ptr.c
userprog/exec-missing.c
userprog/exec-multiple.c
userprog/exec-once.c
userprog/exit.c
userprog/halt.c
userprog/multi-child-fd.c
userprog/multi-recurse.c
userprog/no-vm/multi-oom.c
userprog/open-bad-ptr.c
userprog/open-boundary.c
userprog/open-empty.c
userprog/open-missing.c
userprog/open-normal.c
userprog/open-null.c
userprog/open-twice.c
userprog/read-bad-fd.c
userprog/read-bad-ptr.c
userprog/read-boundary.c
userprog/read-normal.c
userprog/read-stdout.c
userprog/read-zero.c
userprog/rox-child.c
userprog/rox-multichild.c
userprog/rox-simple.c
userprog/sc-bad-arg.c
userprog/sc-bad-sp.c
userprog/sc-boundary-2.c
userprog/sc-boundary.c
userprog/wait-bad-pid.c
userprog/wait-killed.c
userprog/wait-simple.c
userprog/wait-twice.c
userprog/write-bad-fd.c
userprog/write-bad-ptr.c
userprog/write-boundary.c
userprog/write-normal.c
userprog/write-stdin.c
userprog/write-zero.c
vm/child-inherit.c
vm/child-linear.c
vm/child-mm-wrt.c
vm/child-qsort-mm.c
vm/child-qsort.c
vm/child-sort.c
vm/mmap-bad-fd.c
vm/mmap-clean.c
vm/mmap-close.c
vm/mmap-exit.c
vm/mmap-inherit.c
vm/mmap-misalign.c
vm/mmap-null.c
vm/mmap-over-code.c
vm/mmap-over-data.c
vm/mmap-over-stk.c
vm/mmap-overlap.c
vm/mmap-read.c
vm/mmap-remove.c
vm/mmap-shuffle.c
vm/mmap-twice.c
vm/mmap-unmap.c
vm/mmap-write.c
vm/mmap-zero.c
vm/mmap=read.c
vm/page-linear.c
vm/page-merge-mm.c
vm/page-merge-par.c
vm/page-merge-seq.c
vm/page-merge-stk.c
vm/page-parallel.c
vm/page-shuffle.c
vm/parallel-merge.c
vm/parallel-merge.h
vm/pt-bad-addr.c
vm/pt-bad-read.c
vm/pt-big-stk-obj.c
vm/pt-grow-bad.c
vm/pt-grow-pusha.c
vm/pt-grow-stack.c
vm/pt-grow-stk-sc.c
vm/pt-write-code-2.c
vm/pt-write-code.c
vm/qsort.c
vm/qsort.h
/usr/include/ctype.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/syscall.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
