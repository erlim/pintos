Copying tests/filesys/base/syn-write to scratch partition...
Copying tests/filesys/base/child-syn-wrt to scratch partition...
warning: can't find squish-pty, so terminal input will fail
bochs -q
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-write
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hda: 5,040 sectors (2 MB), model "BXHD00011", serial "Generic 1234"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 218 sectors (109 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Erasing ustar archive...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
child-syn-wrt: exit(0)
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
child-syn-wrt: exit(1)
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
Kernel PANIC at ../../lib/kernel/list.c:84 in list_next(): assertion `is_head (elem) || is_interior (elem)' failed.
Call stack: 0xc00285fc 0xc0028a33 0xc002a595 0xc002ba6e 0xc002bd39 0xc0021a96 0xc0021bcd 0x804a3cd 0x80487b9 0x8048102 0x8048963 0x804898e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 507 ticks
Thread: 0 idle ticks, 331 kernel ticks, 176 user ticks
hda2 (filesys): 192 reads, 458 writes
hda3 (scratch): 217 reads, 2 writes
Console: 1499 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off..========================================================================
                       Bochs x86 Emulator 2.6.2
                Built from SVN snapshot on May 26, 2013
                  Compiled on Dec 28 2013 at 04:29:58
========================================================================
